{"version":3,"file":"auscope-angular-cesium.mjs","sources":["../../src/lib/angular-cesium/services/viewer-factory/viewer-factory.service.ts","../../src/lib/angular-cesium/services/viewer-configuration/viewer-configuration.service.ts","../../src/lib/angular-cesium/services/cesium/cesium.service.ts","../../src/lib/angular-cesium/models/scene-mode.enum.ts","../../src/lib/angular-cesium/services/camera/camera.service.ts","../../src/lib/angular-cesium/services/map-events-mananger/consts/cesium-event.enum.ts","../../src/lib/angular-cesium/services/map-events-mananger/consts/pickOptions.enum.ts","../../src/lib/angular-cesium/services/context-menu/context-menu.service.ts","../../src/lib/angular-cesium/services/coordinate-converter/coordinate-converter.service.ts","../../src/lib/angular-cesium/services/drawers/basic-drawer/basic-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/primitives-drawer/primitives-drawer.service.ts","../../src/lib/angular-cesium/services/geo-utils/geo-utils.service.ts","../../src/lib/angular-cesium/services/drawers/arc-drawer/arc-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/entities-drawer/enums/graphics-type.enum.ts","../../src/lib/angular-cesium/services/drawers/entities-drawer/optimized-entity-collection.ts","../../src/lib/angular-cesium/services/drawers/entities-drawer/entities-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/billboard-drawer/billboard-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/czml-drawer/czml-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/ellipse-drawer/ellipse-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/label-drawer/label-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/point-drawer/point-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/polygon-drawer/polygon-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/polyline-drawer/polyline-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service.ts","../../src/lib/angular-cesium/models/ac-keyboard-action.enum.ts","../../src/lib/angular-cesium/services/keyboard-control/predefined-actions.ts","../../src/lib/angular-cesium/services/keyboard-control/keyboard-control.service.ts","../../src/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-pure-event-observer.ts","../../src/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-long-press-observer.ts","../../src/lib/angular-cesium/services/map-events-mananger/cesium-event-builder.ts","../../src/lib/angular-cesium/utils/utils.service.ts","../../src/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-drag-drop-helper.ts","../../src/lib/angular-cesium/services/plonter/plonter.service.ts","../../src/lib/angular-cesium/services/map-events-mananger/map-events-manager.ts","../../src/lib/angular-cesium/services/map-layers/map-layers.service.ts","../../src/lib/angular-cesium/services/screenshot/screenshot.service.ts","../../src/lib/angular-cesium/services/maps-manager/maps-manager.service.ts","../../src/lib/angular-cesium/components/ac-html/ac-html.component.ts","../../src/lib/angular-cesium/components/ac-default-plonter/ac-default-plonter.component.ts","../../src/lib/angular-cesium/components/ac-context-menu-wrapper/ac-context-menu-wrapper.component.ts","../../src/lib/angular-cesium/components/ac-map/ac-map.component.ts","../../src/lib/angular-cesium/services/layer-service/layer-service.service.ts","../../src/lib/angular-cesium/models/action-type.enum.ts","../../src/lib/angular-cesium/services/computation-cache/computation-cache.service.ts","../../src/lib/angular-cesium/utils/checker.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/model-drawer/model-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/box-dawer/box-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/corridor-dawer/corridor-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/cylinder-dawer/cylinder-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/ellipoid-drawer/ellipsoid-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/polyline-volume-dawer/polyline-volume-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/wall-dawer/wall-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/rectangle-dawer/rectangle-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/label-primitive-drawer/label-primitive-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/point-primitive-drawer/point-primitive-drawer.service.ts","../../src/lib/angular-cesium/services/drawers/html-drawer/html-drawer.service.ts","../../src/lib/angular-cesium/components/ac-layer/ac-layer.component.ts","../../src/lib/angular-cesium/services/entity-on-map/entity-on-map.component.ts","../../src/lib/angular-cesium/components/ac-billboard/ac-billboard.component.ts","../../src/lib/angular-cesium/services/smart-assigner/smart-assigner.service.ts","../../src/lib/angular-cesium/services/json-mapper/json-mapper.service.ts","../../src/lib/angular-cesium/services/cesium-properties/cesium-properties.service.ts","../../src/lib/angular-cesium/services/basic-desc/basic-desc.service.ts","../../src/lib/angular-cesium/components/ac-billborad-desc/ac-billborad-desc.component.ts","../../src/lib/angular-cesium/components/ac-ellipse-desc/ac-ellipse-desc.component.ts","../../src/lib/angular-cesium/components/ac-polyline-desc/ac-polyline-desc.component.ts","../../src/lib/angular-cesium/pipes/pixel-offset/pixel-offset.pipe.ts","../../src/lib/angular-cesium/pipes/radians-to-degrees/radians-to-degrees.pipe.ts","../../src/lib/angular-cesium/components/ac-label-desc/ac-label-desc.component.ts","../../src/lib/angular-cesium/utils/utils.module.ts","../../src/lib/angular-cesium/components/ac-circle-desc/ac-circle-desc.component.ts","../../src/lib/angular-cesium/components/ac-arc-desc/ac-arc-desc.component.ts","../../src/lib/angular-cesium/models/ac-entity.ts","../../src/lib/angular-cesium/models/ac-notification.ts","../../src/lib/angular-cesium/models/map-layer-provider-options.enum.ts","../../src/lib/angular-cesium/models/map-terrain-provider-options.enum.ts","../../src/lib/angular-cesium/components/ac-map-layer-provider/ac-map-layer-provider.component.ts","../../src/lib/angular-cesium/components/ac-map-terrain-provider/ac-map-terrain-provider.component.ts","../../src/lib/angular-cesium/components/ac-point-desc/ac-point-desc.component.ts","../../src/lib/angular-cesium/components/ac-label/ac-label.component.ts","../../src/lib/angular-cesium/components/ac-polyline/ac-polyline.component.ts","../../src/lib/angular-cesium/components/ac-ellipse/ac-ellipse.component.ts","../../src/lib/angular-cesium/components/ac-point/ac-point.component.ts","../../src/lib/angular-cesium/components/ac-circle/ac-circle.component.ts","../../src/lib/angular-cesium/components/ac-arc/ac-arc.component.ts","../../src/lib/angular-cesium/components/ac-polygon-desc/ac-polygon-desc.component.ts","../../src/lib/angular-cesium/components/ac-polygon/ac-polygon.component.ts","../../src/lib/angular-cesium/services/basic-primitive-desc/basic-static-primitive-desc.service.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component.ts","../../src/lib/angular-cesium/components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component.ts","../../src/lib/angular-cesium/components/ac-model-desc/ac-model-desc.component.ts","../../src/lib/angular-cesium/components/ac-3d-tileset/ac-tileset-3d.component.ts","../../src/lib/angular-cesium/components/ac-box-desc/ac-box-desc.component.ts","../../src/lib/angular-cesium/components/ac-cylinder-desc/ac-cylinder-desc.component.ts","../../src/lib/angular-cesium/components/ac-corridor-desc/ac-corridor-desc.component.ts","../../src/lib/angular-cesium/components/ac-ellipsoid-desc/ac-ellipsoid-desc.component.ts","../../src/lib/angular-cesium/components/ac-polyline-volume-desc/ac-polyline-volume-desc.component.ts","../../src/lib/angular-cesium/components/ac-wall-desc/ac-wall-desc.component.ts","../../src/lib/angular-cesium/components/ac-rectangle-desc/ac-rectangle-desc.component.ts","../../src/lib/angular-cesium/components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component.ts","../../src/lib/angular-cesium/components/ac-label-primitive-desc/ac-label-primitive-desc.component.ts","../../src/lib/angular-cesium/components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component.ts","../../src/lib/angular-cesium/cesium-enhancements/StaticGeometryColorBatch.ts","../../src/lib/angular-cesium/cesium-enhancements/ConfigurationService.ts","../../src/lib/cesium-extender/primitives/html.ts","../../src/lib/cesium-extender/collections/html.ts","../../src/lib/cesium-extender/extender.ts","../../src/lib/angular-cesium/services/ac-html-manager/ac-html-manager.service.ts","../../src/lib/angular-cesium/directives/ac-html/ac-html.directive.ts","../../src/lib/angular-cesium/directives/ac-html-container/ac-html-container.directive.ts","../../src/lib/angular-cesium/components/ac-html-desc/ac-html-desc.component.ts","../../src/lib/angular-cesium/components/ac-array-desc/ac-array-desc.component.ts","../../src/lib/angular-cesium/components/ac-point-primitive-desc/ac-point-primitive-desc.component.ts","../../src/lib/angular-cesium/components/ac-primitive-polyline/ac-primitive-polyline.component.ts","../../src/lib/angular-cesium/pipes/pipe-config-map.ts","../../src/lib/angular-cesium/components/ac-czml-desc/ac-czml-desc.component.ts","../../src/lib/angular-cesium/components/ac-rectangle/ac-rectangle.component.ts","../../src/lib/angular-cesium/angular-cesium.module.ts","../../src/lib/angular-cesium/services/map-events-mananger/disposable-observable.ts","../../src/lib/angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum.ts","../../src/lib/angular-cesium/services/selection-manager/selection-manager.service.ts","../../src/lib/angular-cesium/index.ts","../../src/lib/angular-cesium-widgets/models/edit-mode.enum.ts","../../src/lib/angular-cesium-widgets/models/edit-actions.enum.ts","../../src/lib/angular-cesium-widgets/models/edit-point.ts","../../src/lib/angular-cesium-widgets/models/label-props.ts","../../src/lib/angular-cesium-widgets/models/editable-point.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/points-editor/points-manager.service.ts","../../src/lib/angular-cesium-widgets/services/utils.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/points-editor/points-editor.service.ts","../../src/lib/angular-cesium-widgets/components/points-editor/points-editor.component.ts","../../src/lib/angular-cesium-widgets/models/edit-polyline.ts","../../src/lib/angular-cesium-widgets/models/editable-polygon.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-manager.service.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-editor.service.ts","../../src/lib/angular-cesium-widgets/components/polygons-editor/polygons-editor.component.ts","../../src/lib/angular-cesium-widgets/models/edit-arc.ts","../../src/lib/angular-cesium-widgets/models/editable-circle.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-manager.service.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-editor.service.ts","../../src/lib/angular-cesium-widgets/components/circles-editor/circles-editor.component.ts","../../src/lib/angular-cesium-widgets/models/editable-ellipse.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-manager.service.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-editor.service.ts","../../src/lib/angular-cesium-widgets/components/ellipses-editor/ellipses-editor.component.ts","../../src/lib/angular-cesium-widgets/models/editable-polyline.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-manager.service.ts","../../src/lib/angular-cesium-widgets/models/editable-rectangle.ts","../../src/lib/angular-cesium-widgets/models/editor-observable.ts","../../src/lib/angular-cesium-widgets/models/point-editor-observable.ts","../../src/lib/angular-cesium-widgets/models/polyline-editor-observable.ts","../../src/lib/angular-cesium-widgets/models/polygon-editor-observable.ts","../../src/lib/angular-cesium-widgets/models/rectangle-editor-observable.ts","../../src/lib/angular-cesium-widgets/models/circle-editor-observable.ts","../../src/lib/angular-cesium-widgets/models/ellipse-editor-observable.ts","../../src/lib/angular-cesium-widgets/models/hippodrome-editor-oboservable.ts","../../src/lib/angular-cesium-widgets/models/editable-hippodrome.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-editor.service.ts","../../src/lib/angular-cesium-widgets/components/polylines-editor/polylines-editor.component.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-manager.service.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-editor.service.ts","../../src/lib/angular-cesium-widgets/components/hippodrome-editor/hippodrome-editor.component.ts","../../src/lib/angular-cesium-widgets/services/draggable-to-map.service.ts","../../src/lib/angular-cesium-widgets/directives/draggable-to-map.directive.ts","../../src/lib/angular-cesium-widgets/components/toolbar/ac-toolbar-button/ac-toolbar-button.component.ts","../../src/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/drag-icon.component.ts","../../src/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/ac-toolbar.component.ts","../../src/lib/angular-cesium-widgets/components/range-and-bearing/range-and-bearing.component.ts","../../src/lib/angular-cesium-widgets/services/zoom-to-rectangle.service.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/rectangles-editor/rectangles-manager.service.ts","../../src/lib/angular-cesium-widgets/services/entity-editors/rectangles-editor/rectangles-editor.service.ts","../../src/lib/angular-cesium-widgets/components/rectangles-editor/rectangles-editor.component.ts","../../src/lib/angular-cesium-widgets/angular-cesium-widgets.module.ts","../../src/public_api.ts","../../src/auscope-angular-cesium.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Viewer } from 'cesium';\r\n\r\n@Injectable()\r\nexport class ViewerFactory {\r\n\r\n  /**\r\n   * Creates a viewer with default or custom options\r\n   * @param mapContainer - container to initialize the viewer on\r\n   * @param options - Options to create the viewer with - Optional\r\n   *\r\n   * @returns new viewer\r\n   */\r\n  createViewer(mapContainer: HTMLElement, options?: any) {\r\n    let viewer = null;\r\n    if (options) {\r\n      viewer = new Viewer(mapContainer, {\r\n        contextOptions: {\r\n          webgl: {preserveDrawingBuffer: true}\r\n        },\r\n        ...options\r\n      });\r\n    } else {\r\n      viewer = new Viewer(mapContainer,\r\n        {\r\n          contextOptions: {\r\n            webgl: {preserveDrawingBuffer: true}\r\n          },\r\n        });\r\n    }\r\n\r\n    return viewer;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Service for setting cesium viewer map options.\r\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\r\n * In order set specific options you must set this service as provider in your component and\r\n * set the wanted options.\r\n * ```typescript\r\n * constructor(viewerConf :ViewerConfiguration ) {\r\n *   viewerConf.viewerOptions = { timeline: false };\r\n * }\r\n * ```\r\n * notice this configuration will be for all <ac-maps> in your component.\r\n */\r\n@Injectable()\r\nexport class ViewerConfiguration {\r\n  /**\r\n   * cesium viewer options According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\r\n   */\r\n  private _viewerOptions: object | object[];\r\n  private _viewerModifier: Function | Function[];\r\n  private nextViewerOptionsIndex = 0;\r\n  private nextViewerModifierIndex = 0;\r\n\r\n  get viewerOptions(): object | object[] {\r\n    return this._viewerOptions;\r\n  }\r\n\r\n  Ï;\r\n\r\n  getNextViewerOptions(): object | object[] {\r\n    if (this._viewerOptions instanceof Array) {\r\n      return this._viewerOptions[this.nextViewerOptionsIndex++];\r\n    } else {\r\n      return this._viewerOptions;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be used to set initial map viewer options.\r\n   * If there is more than one map you can give the function an array of options.\r\n   * The map initialized first will be set with the first option object in the options array and so on.\r\n   */\r\n  set viewerOptions(value: object | object[]) {\r\n    this._viewerOptions = value;\r\n  }\r\n\r\n  get viewerModifier(): Function | Function[] {\r\n    return this._viewerModifier;\r\n  }\r\n\r\n  getNextViewerModifier(): Function | Function[] {\r\n    if (this._viewerModifier instanceof Array) {\r\n      return this._viewerModifier[this.nextViewerModifierIndex++];\r\n    } else {\r\n      return this._viewerModifier;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be used to set map viewer options after the map has been initialized.\r\n   * If there is more than one map you can give the function an array of functions.\r\n   * The map initialized first will be set with the first option object in the options array and so on.\r\n   */\r\n  set viewerModifier(value: Function | Function[]) {\r\n    this._viewerModifier = value;\r\n  }\r\n}\r\n","import { Injectable, NgZone, Optional } from '@angular/core';\r\nimport { ViewerFactory } from '../viewer-factory/viewer-factory.service';\r\nimport { ViewerConfiguration } from '../viewer-configuration/viewer-configuration.service';\r\n\r\n/**\r\n *  Service that initialize cesium viewer and expose cesium viewer and scene.\r\n */\r\n@Injectable()\r\nexport class CesiumService {\r\n  private cesiumViewer: any;\r\n  private mapContainer: HTMLElement;\r\n\r\n  constructor(private ngZone: NgZone, private viewerFactory: ViewerFactory, @Optional() private viewerConfiguration: ViewerConfiguration) {\r\n  }\r\n\r\n  init(mapContainer: HTMLElement) {\r\n    this.mapContainer = mapContainer;\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const options = this.viewerConfiguration ? this.viewerConfiguration.getNextViewerOptions() : undefined;\r\n      this.cesiumViewer = this.viewerFactory.createViewer(mapContainer, options);\r\n\r\n      const viewerModifier = this.viewerConfiguration && this.viewerConfiguration.getNextViewerModifier();\r\n      if (typeof viewerModifier === 'function') {\r\n        viewerModifier(this.cesiumViewer);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewe\r\n   * @returns cesiumViewer\r\n   */\r\n  getViewer() {\r\n    return this.cesiumViewer;\r\n  }\r\n\r\n  /**\r\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Scene.html?classFilter=scene\r\n   * @returns cesium scene\r\n   */\r\n  getScene() {\r\n    return this.cesiumViewer.scene;\r\n  }\r\n\r\n  /**\r\n   * For more information see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\r\n   * @returns cesium canvas\r\n   */\r\n  getCanvas(): HTMLCanvasElement {\r\n    return this.cesiumViewer.canvas as HTMLCanvasElement;\r\n  }\r\n\r\n  getMapContainer(): HTMLElement {\r\n    return this.mapContainer;\r\n  }\r\n}\r\n","/**\r\n * Cesium scene modes\r\n */\r\nexport enum SceneMode {\r\n  SCENE3D,\r\n  COLUMBUS_VIEW,\r\n  SCENE2D,\r\n  PERFORMANCE_SCENE2D\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Cartesian3, Cartographic, JulianDate } from 'cesium';\r\nimport { Math as cMath} from 'cesium';\r\n\r\nimport { CesiumService } from '../cesium/cesium.service';\r\nimport { SceneMode } from '../../models/scene-mode.enum';\r\n\r\n/**\r\n *  The service exposes the scene's camera and screenSpaceCameraController\r\n *  SceneMode.PERFORMANCE_SCENE2D -  is a 3D scene mode that acts like Cesium 2D mode,\r\n *  but is more efficient performance wise.\r\n */\r\n@Injectable()\r\nexport class CameraService {\r\n  static PERFORMANCE_2D_ALTITUDE = 25000000;\r\n\r\n  private viewer: any;\r\n  private scene: any;\r\n  private camera: any;\r\n  private screenSpaceCameraController: any;\r\n  private morphListenerCancelFn: any;\r\n  private lastRotate: boolean;\r\n  private lastTilt: boolean;\r\n  private lastLook: boolean;\r\n  private isSceneModePerformance2D = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  init(cesiumService: CesiumService) {\r\n    this.viewer = cesiumService.getViewer();\r\n    this.scene = cesiumService.getScene();\r\n    this.screenSpaceCameraController = this.scene.screenSpaceCameraController;\r\n    this.camera = this.scene.camera;\r\n    this.lastRotate = this.screenSpaceCameraController.enableRotate;\r\n    this.lastTilt = this.screenSpaceCameraController.enableTilt;\r\n    this.lastLook = this.screenSpaceCameraController.enableLook;\r\n  }\r\n\r\n  _listenToSceneModeMorph(callback: Function) {\r\n    this.morphListenerCancelFn = this.scene.morphStart.addEventListener(\r\n      callback\r\n    );\r\n  }\r\n\r\n  _revertCameraProperties() {\r\n    this.isSceneModePerformance2D = false;\r\n    this.enableTilt(this.lastTilt);\r\n    this.enableRotate(this.lastRotate);\r\n    this.enableLook(this.lastLook);\r\n  }\r\n\r\n  /**\r\n   * Gets the scene's camera\r\n   */\r\n  getCamera() {\r\n    return this.camera;\r\n  }\r\n\r\n  /**\r\n   * Gets the scene's screenSpaceCameraController\r\n   */\r\n  getScreenSpaceCameraController() {\r\n    return this.screenSpaceCameraController;\r\n  }\r\n\r\n  /**\r\n   * Gets the minimum zoom value in meters\r\n   */\r\n  getMinimumZoom(): number {\r\n    return this.screenSpaceCameraController.minimumZoomDistance;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum zoom value in meters\r\n   * @param zoom amount\r\n   */\r\n  setMinimumZoom(amount: number): void {\r\n    this.screenSpaceCameraController.minimumZoomDistance = amount;\r\n  }\r\n\r\n  /**\r\n   * Gets the maximum zoom value in meters\r\n   */\r\n  getMaximumZoom(): number {\r\n    return this.screenSpaceCameraController.maximumZoomDistance;\r\n  }\r\n\r\n  /**\r\n   * Sets the maximum zoom value in meters\r\n   * @param zoom amount\r\n   */\r\n  setMaximumZoom(amount: number): void {\r\n    this.screenSpaceCameraController.maximumZoomDistance = amount;\r\n  }\r\n\r\n  /**\r\n   * Sets if the camera is able to tilt\r\n   */\r\n  enableTilt(tilt: boolean): void {\r\n    this.screenSpaceCameraController.enableTilt = tilt;\r\n  }\r\n\r\n  /**\r\n   * Sets if the camera is able to rotate\r\n   */\r\n  enableRotate(rotate: boolean): void {\r\n    this.screenSpaceCameraController.enableRotate = rotate;\r\n  }\r\n\r\n  /**\r\n   * Sets if the camera is able to free-look\r\n   */\r\n  enableLook(lock: boolean): void {\r\n    this.screenSpaceCameraController.enableLook = lock;\r\n  }\r\n\r\n  /**\r\n   * Sets if the camera is able to translate\r\n   */\r\n  enableTranslate(translate: boolean): void {\r\n    this.screenSpaceCameraController.enableTranslate = translate;\r\n  }\r\n\r\n  /**\r\n   * Sets if the camera is able to zoom\r\n   */\r\n  enableZoom(zoom: boolean): void {\r\n    this.screenSpaceCameraController.enableZoom = zoom;\r\n  }\r\n\r\n  /**\r\n   * Sets if the camera receives inputs\r\n   */\r\n  enableInputs(inputs: boolean): void {\r\n    this.screenSpaceCameraController.enableInputs = inputs;\r\n  }\r\n\r\n  /**\r\n   * Sets the map's SceneMode\r\n   * @param sceneMode - The SceneMode to morph the scene into.\r\n   * @param duration - The duration of scene morph animations, in seconds\r\n   */\r\n  setSceneMode(sceneMode: SceneMode, duration?: number) {\r\n    switch (sceneMode) {\r\n      case SceneMode.SCENE3D: {\r\n        if (this.isSceneModePerformance2D) {\r\n          this._revertCameraProperties();\r\n        }\r\n\r\n        this.scene.morphTo3D(duration);\r\n\r\n        break;\r\n      }\r\n      case SceneMode.COLUMBUS_VIEW: {\r\n        if (this.isSceneModePerformance2D) {\r\n          this._revertCameraProperties();\r\n        }\r\n\r\n        this.scene.morphToColumbusView(duration);\r\n\r\n        break;\r\n      }\r\n      case SceneMode.SCENE2D: {\r\n        if (this.isSceneModePerformance2D) {\r\n          this._revertCameraProperties();\r\n        }\r\n        this.scene.morphTo2D(duration);\r\n\r\n        break;\r\n      }\r\n      case SceneMode.PERFORMANCE_SCENE2D: {\r\n        this.isSceneModePerformance2D = true;\r\n        this.lastLook = this.screenSpaceCameraController.enableLook;\r\n        this.lastTilt = this.screenSpaceCameraController.enableTilt;\r\n        this.lastRotate = this.screenSpaceCameraController.enableRotate;\r\n        this.screenSpaceCameraController.enableTilt = false;\r\n        this.screenSpaceCameraController.enableRotate = false;\r\n        this.screenSpaceCameraController.enableLook = false;\r\n        if (this.morphListenerCancelFn) {\r\n          this.morphListenerCancelFn();\r\n        }\r\n        this.scene.morphToColumbusView(duration);\r\n        const morphCompleteEventListener = this.scene.morphComplete.addEventListener(\r\n          () => {\r\n            this.camera.setView({\r\n              destination: Cartesian3.fromDegrees(\r\n                0.0,\r\n                0.0,\r\n                Math.min(\r\n                  CameraService.PERFORMANCE_2D_ALTITUDE,\r\n                  this.getMaximumZoom()\r\n                )\r\n              ),\r\n              orientation: {\r\n                pitch: cMath.toRadians(-90)\r\n              }\r\n            });\r\n            morphCompleteEventListener();\r\n            this._listenToSceneModeMorph(\r\n              this._revertCameraProperties.bind(this)\r\n            );\r\n          }\r\n        );\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flies the camera to a destination\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\r\n   */\r\n  cameraFlyTo(options: any) {\r\n    return this.camera.flyTo(options);\r\n  }\r\n\r\n  /**\r\n   * Flies the camera to a target\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#flyTo\r\n   * @returns Promise<boolean>\r\n   */\r\n  flyTo(target: any, options?: any) {\r\n    return this.viewer.flyTo(target, options);\r\n  }\r\n\r\n  /**\r\n   * Zooms amount along the camera's view vector.\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomIn\r\n   */\r\n  zoomIn(amount: number) {\r\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\r\n  }\r\n\r\n  /**\r\n   * Zooms amount along the opposite direction of the camera's view vector.\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomOut\r\n   */\r\n  zoomOut(amount: number) {\r\n    return this.camera.zoomOut(amount || this.camera.defaultZoomAmount);\r\n  }\r\n\r\n  /**\r\n   * Zoom the camera to a target\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#zoomTo\r\n   * @returns Promise<boolean>\r\n   */\r\n  zoomTo(target: any, offset?: any) {\r\n    return this.viewer.zoomTo(target, offset);\r\n  }\r\n\r\n  /**\r\n   * Flies the camera to a destination\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camera#setView\r\n   * @param options viewer options\r\n   */\r\n  setView(options: any) {\r\n    this.camera.setView(options);\r\n  }\r\n\r\n  /**\r\n   * Set camera's rotation\r\n   */\r\n  setRotation(degreesInRadians: number) {\r\n    this.setView({orientation: {heading: degreesInRadians}});\r\n  }\r\n\r\n  /**\r\n   * Locks or unlocks camera rotation\r\n   */\r\n  lockRotation(lock: boolean) {\r\n    this.scene.screenSpaceCameraController.enableRotate = !lock;\r\n  }\r\n\r\n  /**\r\n   * Make the camera track a specific entity\r\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#trackedEntity\r\n   * @param cesiumEntity - cesium entity( billboard, polygon...) to track\r\n   * @param options - track entity options\r\n   */\r\n  trackEntity(\r\n    cesiumEntity?: any,\r\n    options?: { flyTo: boolean; flyToDuration?: number; altitude?: number }\r\n  ) {\r\n    const flyTo = (options && options.flyTo) || false;\r\n\r\n    this.viewer.trackedEntity = undefined;\r\n    return new Promise<void>(resolve => {\r\n      if (flyTo) {\r\n        const flyToDuration = (options && options.flyToDuration) || 1;\r\n        const altitude = (options && options.altitude) || 10000;\r\n\r\n        // Calc entity flyTo position and wanted altitude\r\n        const entPosCar3 = cesiumEntity.position.getValue(JulianDate.now());\r\n        const entPosCart = Cartographic.fromCartesian(entPosCar3);\r\n        const zoomAmount = altitude - entPosCart.height;\r\n        entPosCart.height = altitude;\r\n        const flyToPosition = Cartesian3.fromRadians(\r\n          entPosCart.longitude,\r\n          entPosCart.latitude,\r\n          entPosCart.height\r\n        );\r\n\r\n        this.cameraFlyTo({\r\n          duration: flyToDuration,\r\n          destination: flyToPosition,\r\n          complete: () => {\r\n            this.viewer.trackedEntity = cesiumEntity;\r\n            setTimeout(() => {\r\n              if (zoomAmount > 0) {\r\n                this.camera.zoomOut(zoomAmount);\r\n              } else {\r\n                this.camera.zoomIn(zoomAmount);\r\n              }\r\n            }, 0);\r\n            resolve();\r\n          }\r\n        });\r\n      } else {\r\n        this.viewer.trackedEntity = cesiumEntity;\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  untrackEntity() {\r\n    this.trackEntity();\r\n  }\r\n}\r\n","import {ScreenSpaceEventType } from 'cesium';\r\n/**\r\n * Event options for registration on map-event-manager.\r\n */\r\nexport enum CesiumEvent {\r\n  MOUSE_MOVE = ScreenSpaceEventType.MOUSE_MOVE,\r\n  LEFT_CLICK = ScreenSpaceEventType.LEFT_CLICK,\r\n  LEFT_DOUBLE_CLICK = ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\r\n  LEFT_DOWN = ScreenSpaceEventType.LEFT_DOWN,\r\n  LEFT_UP = ScreenSpaceEventType.LEFT_UP,\r\n  MIDDLE_CLICK = ScreenSpaceEventType.MIDDLE_CLICK,\r\n  // MIDDLE_DOUBLE_CLICK = ScreenSpaceEventType.MIDDLE_DOUBLE_CLICK,\r\n  MIDDLE_DOWN = ScreenSpaceEventType.MIDDLE_DOWN,\r\n  MIDDLE_UP = ScreenSpaceEventType.MIDDLE_UP,\r\n  PINCH_START = ScreenSpaceEventType.PINCH_START,\r\n  PINCH_END = ScreenSpaceEventType.PINCH_END,\r\n  PINCH_MOVE = ScreenSpaceEventType.PINCH_MOVE,\r\n  RIGHT_CLICK = ScreenSpaceEventType.RIGHT_CLICK,\r\n  // RIGHT_DOUBLE_CLICK = ScreenSpaceEventType.RIGHT_DOUBLE_CLICK,\r\n  RIGHT_DOWN = ScreenSpaceEventType.RIGHT_DOWN,\r\n  RIGHT_UP = ScreenSpaceEventType.RIGHT_UP,\r\n  WHEEL = ScreenSpaceEventType.WHEEL,\r\n  LONG_LEFT_PRESS = 110,\r\n  LONG_RIGHT_PRESS,\r\n  LONG_MIDDLE_PRESS,\r\n  LEFT_CLICK_DRAG,\r\n  RIGHT_CLICK_DRAG,\r\n  MIDDLE_CLICK_DRAG,\r\n}\r\n","/**\r\n *  NO_PICK,    - will not pick entities\r\n *  PICK_FIRST  - first entity will be picked . use Cesium.scene.pick()\r\n *  PICK_ONE    - in case a few entities are picked plonter is resolved . use Cesium.scene.drillPick()\r\n *  PICK_ALL    - all entities are picked. use Cesium.scene.drillPick()\r\n */\r\nexport enum PickOptions {\r\n  NO_PICK,\r\n  PICK_FIRST,\r\n  PICK_ONE,\r\n  PICK_ALL\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Cartesian3 } from 'cesium';\r\nimport { ContextMenuOptions } from '../../models/context-menu-options';\r\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\r\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\r\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\r\nimport { BasicContextMenu } from '../../models/basic-context-menu';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n/**\r\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\r\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\r\n *\r\n * notice, `data` will be injected to your custom menu component into the `data` field in the component.\r\n * __Usage :__\r\n * ```\r\n *  ngOnInit() {\r\n *   this.clickEvent$ = this.eventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.PICK_ONE });\r\n *   this.clickEvent$.subscribe(result => {\r\n *    if (result.entities) {\r\n *      const pickedMarker = result.entities[0];\r\n *      this.contextMenuService.open(MapContextmenuComponent, pickedMarker.position, {\r\n *        data: {\r\n *          myData: data,\r\n *          onDelete: () => this.delete(pickedMarker.id)\r\n *        }\r\n *      });\r\n *    }\r\n *   });\r\n *  }\r\n *\r\n *\r\n *  private delete(id) {\r\n *    this.mapMenu.close();\r\n *    this.detailedSiteService.removeMarker(id);\r\n *  }\r\n * ```\r\n */\r\n@Injectable()\r\nexport class ContextMenuService {\r\n  private _showContextMenu = false;\r\n  private _options: ContextMenuOptions;\r\n  private _position: Cartesian3;\r\n  private _content: BasicContextMenu;\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private leftClickRegistration: DisposableObservable<any>;\r\n  private leftClickSubscription: Subscription;\r\n  private _contextMenuChangeNotifier = new EventEmitter();\r\n  private _onOpen = new EventEmitter();\r\n  private _onClose = new EventEmitter();\r\n  private _defaultContextMenuOptions: ContextMenuOptions = {\r\n    closeOnLeftCLick: true,\r\n    closeOnLeftClickPriority: 10,\r\n  };\r\n\r\n  get contextMenuChangeNotifier(): EventEmitter<any> {\r\n    return this._contextMenuChangeNotifier;\r\n  }\r\n\r\n  get showContextMenu(): boolean {\r\n    return this._showContextMenu;\r\n  }\r\n\r\n  get options(): ContextMenuOptions {\r\n    return this._options;\r\n  }\r\n\r\n  get position(): Cartesian3 {\r\n    return this._position;\r\n  }\r\n\r\n  get content(): BasicContextMenu {\r\n    return this._content;\r\n  }\r\n\r\n  get onOpen(): EventEmitter<any> {\r\n    return this._onOpen;\r\n  }\r\n\r\n  get onClose(): EventEmitter<any> {\r\n    return this._onClose;\r\n  }\r\n\r\n\r\n  init(mapEventsManager: MapEventsManagerService) {\r\n    this.mapEventsManager = mapEventsManager;\r\n  }\r\n\r\n  open<D>(contentComponent: any, position: Cartesian3, options: ContextMenuOptions<D> = {}) {\r\n    this.close();\r\n    this._content = contentComponent;\r\n    this._position = position;\r\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\r\n    this._showContextMenu = true;\r\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\r\n      this.leftClickRegistration = this.mapEventsManager.register({\r\n        event: CesiumEvent.LEFT_CLICK,\r\n        pick: PickOptions.NO_PICK,\r\n        priority: this._options.closeOnLeftClickPriority,\r\n      });\r\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\r\n        this.leftClickSubscription.unsubscribe();\r\n        this.close();\r\n      });\r\n    }\r\n\r\n    this._contextMenuChangeNotifier.emit();\r\n    this._onOpen.emit();\r\n  }\r\n\r\n  close() {\r\n    this._content = undefined;\r\n    this._position = undefined;\r\n    this._options = undefined;\r\n    this._showContextMenu = false;\r\n    if (this.leftClickRegistration) {\r\n      this.leftClickRegistration.dispose();\r\n      this.leftClickRegistration = undefined;\r\n    }\r\n    if (this.leftClickSubscription) {\r\n      this.leftClickSubscription.unsubscribe();\r\n      this.leftClickSubscription = undefined;\r\n    }\r\n\r\n    this._contextMenuChangeNotifier.emit();\r\n    this._onClose.emit();\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Cartographic, Math as cMath, Cartesian3, SceneTransforms, Cartesian2 } from 'cesium';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\nimport * as geodesy from 'geodesy';\r\nimport { hemisphere, LatLon, LatLonEllipsoidal, Utm } from 'geodesy';\r\n\r\nconst LatLonVectors = geodesy['LatLonVectors']; // doesnt exists on typings\r\n\r\nwindow['geodesy'] = geodesy;\r\n\r\n/**\r\n *  Given different types of coordinates, we provide you a service converting those types to the most common other types.\r\n *  We are using the geodesy implementation of UTM conversion. see: https://github.com/chrisveness/geodesy.\r\n *\r\n * @example\r\n * import { Component, OnInit } from '@angular/core';\r\n * import { CoordinateConverter } from 'angular2-cesium';\r\n *\r\n * @Component({\r\n * \t\tselector:'my-component',\r\n * \t\ttemplate:'<div>{{showCartographic}}</div>',\r\n * \t\tproviders:[CoordinateConverter]\r\n * })\r\n * export class MyComponent implements OnInit {\r\n * \t\tshowCartographic;\r\n *\r\n * \t\tconstructor(private coordinateConverter:CoordinateConverter){\r\n * \t\t}\r\n *\r\n * \t\tngOnInit(){\r\n * \t\t\tthis.showCartographic = this.coordinateConverter.degreesToCartographic(5, 5, 5);\r\n *  }\r\n * }\r\n *\r\n */\r\n@Injectable()\r\nexport class CoordinateConverter {\r\n  constructor(@Optional() private cesiumService?: CesiumService) {\r\n  }\r\n\r\n  static cartesian3ToLatLon(cartesian3: Cartesian3, ellipsoid?: any): {lon: number, lat: number; height: number} {\r\n    const cart = Cartographic.fromCartesian(cartesian3, ellipsoid);\r\n    return {\r\n      lon: cMath.toDegrees(cart.longitude),\r\n      lat: cMath.toDegrees(cart.latitude),\r\n      height: cart.height\r\n    };\r\n  }\r\n\r\n  screenToCartesian3(screenPos: { x: number, y: number }, addMapCanvasBoundsToPos?: boolean) {\r\n    if (!this.cesiumService) {\r\n      throw new Error('ANGULAR2-CESIUM - Cesium service should be provided in order' +\r\n        ' to do screen position calculations');\r\n    } else {\r\n      const screenPosition = { ...screenPos };\r\n      if (addMapCanvasBoundsToPos) {\r\n        const mapBounds = this.cesiumService.getViewer().canvas.getBoundingClientRect();\r\n        screenPosition.x += mapBounds.left;\r\n        screenPosition.y += mapBounds.top;\r\n      }\r\n\r\n      const camera = this.cesiumService.getViewer().camera;\r\n      return camera.pickEllipsoid(screenPosition);\r\n    }\r\n  }\r\n\r\n  screenToCartographic(screenPos: { x: number, y: number }, ellipsoid?: any) {\r\n    return this.cartesian3ToCartographic(this.screenToCartesian3(screenPos), ellipsoid);\r\n  }\r\n\r\n  cartesian3ToCartographic(cartesian: Cartesian3, ellipsoid?: any) {\r\n    return Cartographic.fromCartesian(cartesian, ellipsoid);\r\n  }\r\n\r\n  degreesToCartographic(longitude: number, latitude: number, height?: number) {\r\n    return Cartographic.fromDegrees(longitude, latitude, height);\r\n  }\r\n\r\n  radiansToCartographic(longitude: number, latitude: number, height?: number) {\r\n    return Cartographic.fromRadians(longitude, latitude, height);\r\n  }\r\n\r\n  degreesToUTM(longitude: number, latitude: number) {\r\n    return new LatLonEllipsoidal(latitude, longitude).toUtm();\r\n  }\r\n\r\n  UTMToDegrees(zone: number, hemisphereType: hemisphere, easting: number, northing: number) {\r\n    return this.geodesyToCesiumObject(new Utm(zone, hemisphereType, easting, northing).toLatLonE());\r\n  }\r\n\r\n  private geodesyToCesiumObject(geodesyRadians: LatLon) {\r\n    return {\r\n      longitude: geodesyRadians.lon,\r\n      latitude: geodesyRadians.lat,\r\n      height: geodesyRadians['height'] ? geodesyRadians['height'] : 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * middle point between two points\r\n   * @param first  (latitude,longitude) in radians\r\n   * @param second (latitude,longitude) in radians\r\n   */\r\n  midPointToCartesian3(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\r\n    const toDeg = (rad: number) => cMath.toDegrees(rad);\r\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\r\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\r\n    const middlePoint: any = firstPoint.midpointTo(secondPoint);\r\n\r\n    return Cartesian3.fromDegrees(middlePoint.lon, middlePoint.lat);\r\n  }\r\n\r\n  middlePointByScreen(position0: Cartesian3, position1: Cartesian3): Cartesian3 {\r\n    const scene = this.cesiumService.getScene();\r\n    const screenPosition1 = SceneTransforms.wgs84ToWindowCoordinates(scene, position0);\r\n    const screenPosition2 = SceneTransforms.wgs84ToWindowCoordinates(scene, position1);\r\n    const middleScreenPoint =\r\n      new Cartesian2((screenPosition2.x + screenPosition1.x) / 2.0, (screenPosition2.y + screenPosition1.y) / 2.0);\r\n    return scene.pickPosition(middleScreenPoint);\r\n  }\r\n\r\n  /**\r\n   * initial bearing between two points\r\n   *\r\n   * * @return bearing in degrees\r\n   * @param first - {latitude,longitude} in radians\r\n   * @param second - {latitude,longitude} in radians\r\n   */\r\n  bearingTo(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\r\n    const toDeg = (rad: number) => cMath.toDegrees(rad);\r\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\r\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\r\n    const bearing = firstPoint.bearingTo(secondPoint);\r\n\r\n    return bearing;\r\n  }\r\n\r\n  /**\r\n   * initial bearing between two points\r\n   *\r\n   * @return bearing in degrees\r\n   */\r\n  bearingToCartesian(firstCartesian3: Cartesian3, secondCartesian3: Cartesian3) {\r\n    const firstCart = Cartographic.fromCartesian(firstCartesian3);\r\n    const secondCart = Cartographic.fromCartesian(secondCartesian3);\r\n\r\n    return this.bearingTo(firstCart, secondCart);\r\n  }\r\n}\r\n","/**\r\n *  Abstract drawer. All drawers extends this class.\r\n */\r\n\r\nexport abstract class BasicDrawerService {\r\n  protected _propsAssigner: Function;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  abstract add(cesiumProps: any, ...args: any[]): any;\r\n\r\n  abstract update(primitive: any, cesiumProps: any, ...args: any[]): void;\r\n\r\n  abstract remove(primitive: any): void;\r\n\r\n  abstract removeAll(): void;\r\n\r\n  abstract setShow(showValue: boolean): void;\r\n\r\n  abstract init(options?: any): any;\r\n\r\n  setPropsAssigner(assigner: Function) {\r\n    this._propsAssigner = assigner;\r\n  }\r\n}\r\n","import { PrimitiveCollection } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\r\n\r\n/**\r\n *  General primitives drawer responsible of drawing Cesium primitives.\r\n *  Drawers the handle Cesium primitives extend it.\r\n */\r\nexport abstract class PrimitivesDrawerService extends BasicDrawerService {\r\n  private _show = true;\r\n  private _primitiveCollectionWrap: any;\r\n  protected _cesiumCollection: any;\r\n  protected _propsAssigner: Function;\r\n\r\n  constructor(private drawerType: any, private cesiumService: CesiumService) {\r\n    super();\r\n  }\r\n\r\n  init() {\r\n    this._cesiumCollection = new this.drawerType();\r\n    this._primitiveCollectionWrap = new PrimitiveCollection();\r\n    this._primitiveCollectionWrap.add(this._cesiumCollection);\r\n    this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);\r\n  }\r\n\r\n  add(cesiumProps: any, ...args: any[]): any {\r\n    return this._cesiumCollection.add(cesiumProps);\r\n  }\r\n\r\n  update(entity: any, cesiumProps: any, ...args: any[]) {\r\n    if (this._propsAssigner) {\r\n      this._propsAssigner(entity, cesiumProps);\r\n    } else {\r\n      Object.assign(entity, cesiumProps);\r\n    }\r\n  }\r\n\r\n  remove(entity: any) {\r\n    this._cesiumCollection.remove(entity);\r\n  }\r\n\r\n  removeAll() {\r\n    this._cesiumCollection.removeAll();\r\n  }\r\n\r\n  setShow(showValue: boolean) {\r\n    this._show = showValue;\r\n    this._primitiveCollectionWrap.show = showValue;\r\n  }\r\n\r\n  getShow(): boolean {\r\n    return this._show;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Ellipsoid, Cartesian3, Cartographic } from 'cesium';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\nimport { Vec3 } from '../../models/vec3';\r\n\r\n@Injectable()\r\nexport class GeoUtilsService {\r\n  static pointByLocationDistanceAndAzimuth(currentLocation: any, meterDistance: number, radianAzimuth: number, deprecated?) {\r\n    const distance = meterDistance / Ellipsoid.WGS84.maximumRadius;\r\n    const cartographicLocation =\r\n      currentLocation instanceof Cartesian3 ? Cartographic.fromCartesian(currentLocation) : currentLocation;\r\n    const cartesianLocation =\r\n      currentLocation instanceof Cartesian3\r\n        ? currentLocation\r\n        : Cartesian3.fromRadians(currentLocation.longitude, currentLocation.latitude, currentLocation.height);\r\n\r\n    let resultPosition;\r\n    let resultDistance;\r\n    let counter = 0;\r\n    let distanceFactorRangeMax = 0.1;\r\n    let distanceFactorRangeMin = -0.1;\r\n    while (\r\n      counter === 0 ||\r\n      (counter < 16 && Math.max(resultDistance, meterDistance) / Math.min(resultDistance, meterDistance) > 1.000001)\r\n      ) {\r\n      const factor = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\r\n      resultPosition = GeoUtilsService._pointByLocationDistanceAndAzimuth(cartographicLocation, distance * (1 + factor), radianAzimuth);\r\n      resultDistance = this.distance(cartesianLocation, resultPosition);\r\n\r\n      if (resultDistance > meterDistance) {\r\n        distanceFactorRangeMax = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\r\n      } else {\r\n        distanceFactorRangeMin = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\r\n      }\r\n      counter++;\r\n    }\r\n\r\n    return resultPosition;\r\n  }\r\n\r\n  static _pointByLocationDistanceAndAzimuth(cartographicLocation: any, distance: number, radianAzimuth: number) {\r\n    const curLat = cartographicLocation.latitude;\r\n    const curLon = cartographicLocation.longitude;\r\n    const destinationLat = Math.asin(\r\n      Math.sin(curLat) * Math.cos(distance) + Math.cos(curLat) * Math.sin(distance) * Math.cos(radianAzimuth),\r\n    );\r\n\r\n    let destinationLon =\r\n      curLon +\r\n      Math.atan2(\r\n        Math.sin(radianAzimuth) * Math.sin(distance) * Math.cos(curLat),\r\n        Math.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat),\r\n      );\r\n\r\n    destinationLon = ((destinationLon + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\r\n\r\n    return Cartesian3.fromRadians(destinationLon, destinationLat);\r\n  }\r\n\r\n  static distance(pos0: Cartesian3, pos1: Cartesian3): number {\r\n    return Cartesian3.distance(pos0, pos1);\r\n  }\r\n\r\n  static getPositionsDelta(position0: Cartesian3, position1: Cartesian3): Vec3 {\r\n    return {\r\n      x: position1.x - position0.x,\r\n      y: position1.y - position0.y,\r\n      z: position1.z - position0.z,\r\n    };\r\n  }\r\n\r\n  static addDeltaToPosition(position: Cartesian3, delta: Vec3, updateReference = false): Cartesian3 {\r\n    if (updateReference) {\r\n      position.x += delta.x;\r\n      position.y += delta.y;\r\n      position.z += delta.z;\r\n      const cartographic = Cartographic.fromCartesian(position);\r\n      cartographic.height = 0;\r\n      const cartesian = Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\r\n      position.x = cartesian.x;\r\n      position.y = cartesian.y;\r\n      position.z = cartesian.z;\r\n      return position;\r\n    } else {\r\n      const cartesian = new Cartesian3(position.x + delta.x, position.y + delta.y, position.z + delta.z);\r\n      const cartographic = Cartographic.fromCartesian(cartesian);\r\n      cartographic.height = 0;\r\n      return Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\r\n    }\r\n  }\r\n\r\n  static middleCartesian3Point(position0: Cartesian3, position1: Cartesian3) {\r\n    return new Cartesian3(position1.x - position0.x / 2, position1.y - position0.y / 2, position1.z - position0.z / 2);\r\n  }\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n  }\r\n\r\n  screenPositionToCartesian3(screenPos: { x: number; y: number }) {\r\n    const camera = this.cesiumService.getViewer().camera;\r\n    return camera.pickEllipsoid(screenPos);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PolylineCollection, Material } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\r\n\r\n/**\r\n +  This drawer is responsible for drawing an arc over the Cesium map.\r\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\r\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\r\n */\r\n\r\n@Injectable()\r\nexport class ArcDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PolylineCollection, cesiumService);\r\n  }\r\n\r\n  _calculateArcPositions(cesiumProps: any) {\r\n    const quality = cesiumProps.quality || 18;\r\n    const delta = (cesiumProps.delta) / quality;\r\n    const pointsArray = [];\r\n    for (let i = 0; i < quality + 1; ++i) {\r\n      const point =\r\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\r\n      pointsArray.push(point);\r\n    }\r\n\r\n    return pointsArray;\r\n  }\r\n\r\n  _calculateTriangle(cesiumProps: any) {\r\n    return [\r\n      cesiumProps.center,\r\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\r\n    ];\r\n  }\r\n\r\n  _calculateArc(cesiumProps: any) {\r\n    const arcPoints = this._calculateArcPositions(cesiumProps);\r\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\r\n  }\r\n\r\n  add(cesiumProps: any): any {\r\n    cesiumProps.positions = this._calculateArc(cesiumProps);\r\n    if (cesiumProps.color) {\r\n      const material = Material.fromType('Color');\r\n      material.uniforms.color = cesiumProps.color;\r\n      cesiumProps.material = material;\r\n    }\r\n\r\n    return this._cesiumCollection.add(cesiumProps);\r\n  }\r\n\r\n  update(primitive: any, cesiumProps: any) {\r\n    if (!cesiumProps.constantColor && cesiumProps.color &&\r\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\r\n      primitive.material.uniforms.color = cesiumProps.color;\r\n    }\r\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\r\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\r\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\r\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\r\n    primitive.positions = this._calculateArc(cesiumProps);\r\n\r\n    return primitive;\r\n  }\r\n}\r\n","import * as Cesium from 'cesium';\r\nexport class GraphicsType {\r\n  static ellipse = Cesium.EllipseGraphics;\r\n  static ellipsoid = Cesium.EllipsoidGraphics;\r\n  static polygon = Cesium.PolygonGraphics;\r\n  static polyline = Cesium.PolylineGraphics;\r\n  static polylineVolume = Cesium.PolylineVolumeGraphics;\r\n  static box = Cesium.BoxGraphics;\r\n  static corridor = Cesium.CorridorGraphics;\r\n  static cylinder = Cesium.CylinderGraphics;\r\n  static label = Cesium.LabelGraphics;\r\n  static billboard = Cesium.BillboardGraphics;\r\n  static model = Cesium.ModelGraphics;\r\n  static path = Cesium.PathGraphics;\r\n  static point = Cesium.PointGraphics;\r\n  static rectangle = Cesium.RectangleGraphics;\r\n  static wall = Cesium.WallGraphics;\r\n}\r\n","export class OptimizedEntityCollection {\r\n  private _updateRate: number;\r\n  private _collectionSize: number;\r\n  private _isSuspended = false;\r\n  private _isHardSuspend = false;\r\n  private _suspensionTimeout: any;\r\n  private _onEventSuspensionCallback: { once: boolean, callback: Function };\r\n  private _onEventResumeCallback: { once: boolean, callback: Function };\r\n\r\n  constructor(private entityCollection: any, collectionSize = -1, updateRate = -1) {\r\n    this._updateRate = updateRate;\r\n    this._collectionSize = collectionSize;\r\n\r\n  }\r\n\r\n  setShow(show: boolean) {\r\n    this.entityCollection.show = show;\r\n  }\r\n\r\n  get isSuspended(): boolean {\r\n    return this._isSuspended;\r\n  }\r\n\r\n  get updateRate(): number {\r\n    return this._updateRate;\r\n  }\r\n\r\n  set updateRate(value: number) {\r\n    this._updateRate = value;\r\n  }\r\n\r\n  get collectionSize(): number {\r\n    return this._collectionSize;\r\n  }\r\n\r\n  set collectionSize(value: number) {\r\n    this._collectionSize = value;\r\n  }\r\n\r\n  collection() {\r\n    return this.entityCollection;\r\n  }\r\n\r\n  isFree(): boolean {\r\n    return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;\r\n  }\r\n\r\n  add(entity: any) {\r\n    this.suspend();\r\n    return this.entityCollection.add(entity);\r\n  }\r\n\r\n  remove(entity: any) {\r\n    this.suspend();\r\n    return this.entityCollection.remove(entity);\r\n  }\r\n\r\n  removeNoSuspend(entity: any) {\r\n    this.entityCollection.remove(entity);\r\n  }\r\n\r\n  removeAll() {\r\n    this.suspend();\r\n    this.entityCollection.removeAll();\r\n  }\r\n\r\n  onEventSuspension(callback: Function, once = false): Function {\r\n    this._onEventSuspensionCallback = {callback, once};\r\n    return () => {\r\n      this._onEventSuspensionCallback = undefined;\r\n    };\r\n  }\r\n\r\n  onEventResume(callback: Function, once = false): Function {\r\n    this._onEventResumeCallback = {callback, once};\r\n    if (!this._isSuspended) {\r\n      this.triggerEventResume();\r\n    }\r\n    return () => {\r\n      this._onEventResumeCallback = undefined;\r\n    };\r\n  }\r\n\r\n  triggerEventSuspension() {\r\n    if (this._onEventSuspensionCallback !== undefined) {\r\n      const callback = this._onEventSuspensionCallback.callback;\r\n      if (this._onEventSuspensionCallback.once) {\r\n        this._onEventSuspensionCallback = undefined;\r\n      }\r\n      callback();\r\n    }\r\n  }\r\n\r\n  triggerEventResume() {\r\n    if (this._onEventResumeCallback !== undefined) {\r\n      const callback = this._onEventResumeCallback.callback;\r\n      if (this._onEventResumeCallback.once) {\r\n        this._onEventResumeCallback = undefined;\r\n      }\r\n      callback();\r\n    }\r\n  }\r\n\r\n  public suspend() {\r\n    if (this._updateRate < 0) {\r\n      return;\r\n    }\r\n    if (this._isHardSuspend) {\r\n      return;\r\n    }\r\n    if (!this._isSuspended) {\r\n      this._isSuspended = true;\r\n      this.entityCollection.suspendEvents();\r\n      this.triggerEventSuspension();\r\n      this._suspensionTimeout = setTimeout(() => {\r\n        this.entityCollection.resumeEvents();\r\n        this.triggerEventResume();\r\n        this._isSuspended = false;\r\n        this._suspensionTimeout = undefined;\r\n      }, this._updateRate);\r\n    }\r\n  }\r\n\r\n  public hardSuspend() {\r\n    this.entityCollection.suspendEvents();\r\n    this._isHardSuspend = true;\r\n  }\r\n\r\n  public hardResume() {\r\n    this.entityCollection.resumeEvents();\r\n    this._isHardSuspend = false;\r\n  }\r\n\r\n}\r\n","import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\r\nimport { CustomDataSource, CallbackProperty } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from './enums/graphics-type.enum';\r\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\r\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\r\n\r\n/**\r\n *  General primitives drawer responsible of drawing Cesium primitives.\r\n *  Drawers the handle Cesium primitives extend it.\r\n */\r\n\r\nexport class EntitiesDrawerService extends BasicDrawerService {\r\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\r\n  private graphicsTypeName: string;\r\n\r\n  constructor(\r\n    private cesiumService: CesiumService,\r\n    private graphicsType: GraphicsType,\r\n    private defaultOptions: EntitiesDrawerOptions = {\r\n      collectionMaxSize: -1,\r\n      collectionSuspensionTime: -1,\r\n      collectionsNumber: 1,\r\n    },\r\n  ) {\r\n    super();\r\n    this.graphicsTypeName = \"Unknown\";\r\n\r\n    // Fix bad enum compilation\r\n    for (const i in GraphicsType) {\r\n      if (GraphicsType[i] as any === this.graphicsType) {\r\n        this.graphicsTypeName = i;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\r\n    let freeEntityCollection = null;\r\n    this.entityCollections.forEach(entityCollection => {\r\n      if (entityCollection.isFree()) {\r\n        freeEntityCollection = entityCollection;\r\n      }\r\n    });\r\n\r\n    return freeEntityCollection;\r\n  }\r\n\r\n  init(options?: EntitiesDrawerOptions) {\r\n    const finalOptions = options || this.defaultOptions;\r\n    const dataSources = [];\r\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\r\n      const dataSource = new CustomDataSource(this.graphicsTypeName);\r\n      dataSources.push(dataSource);\r\n      this.cesiumService.getViewer().dataSources.add(dataSource);\r\n      this.entityCollections.set(\r\n        dataSource.entities,\r\n        new OptimizedEntityCollection(dataSource.entities, finalOptions.collectionMaxSize, finalOptions.collectionSuspensionTime),\r\n      );\r\n    }\r\n\r\n    return dataSources;\r\n  }\r\n\r\n  add(cesiumProps: any): any {\r\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\r\n    if (optimizedEntityCollection === null) {\r\n      throw new Error('No more free entity collections');\r\n    }\r\n\r\n    const entityObject = {\r\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\r\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\r\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\r\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\r\n      [this.graphicsTypeName]: cesiumProps,\r\n    };\r\n\r\n    if (cesiumProps.name !== undefined) {\r\n      entityObject.name = cesiumProps.name;\r\n    }\r\n    if (cesiumProps.availability !== undefined) {\r\n      entityObject.availability = cesiumProps.availability;\r\n    }\r\n\r\n    return optimizedEntityCollection.add(entityObject);\r\n  }\r\n\r\n  update(entity: any, cesiumProps: any) {\r\n    this.suspendEntityCollection(entity);\r\n\r\n    if (entity.position instanceof CallbackProperty) {\r\n      if (entity.position._isConstant) {\r\n        entity.position = cesiumProps.position;\r\n      }\r\n    }\r\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\r\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\r\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\r\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\r\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\r\n    entity.availability = cesiumProps.availability !== undefined ? cesiumProps.availability : cesiumProps.availability;\r\n\r\n    if (this._propsAssigner) {\r\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\r\n    } else {\r\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\r\n    }\r\n  }\r\n\r\n  remove(entity: any) {\r\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\r\n    optimizedEntityCollection.remove(entity);\r\n  }\r\n\r\n  removeAll() {\r\n    this.entityCollections.forEach(entityCollection => {\r\n      entityCollection.removeAll();\r\n    });\r\n  }\r\n\r\n  setShow(showValue: boolean) {\r\n    this.entityCollections.forEach(entityCollection => {\r\n      entityCollection.setShow(showValue);\r\n    });\r\n  }\r\n\r\n  private suspendEntityCollection(entity: any) {\r\n    const id = entity.entityCollection;\r\n    if (!this.entityCollections.has(id)) {\r\n      throw new Error('No EntityCollection for entity.entityCollection');\r\n    }\r\n\r\n    const entityCollection = this.entityCollections.get(id);\r\n    entityCollection.suspend();\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing billboards.\r\n */\r\n@Injectable()\r\nexport class BillboardDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.billboard);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CzmlDataSource } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\r\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\r\n\r\n/**\r\n *  This drawer is responsible for drawing czml dataSources.\r\n */\r\n@Injectable()\r\nexport class CzmlDrawerService extends BasicDrawerService {\r\n\r\n  czmlStream: any;\r\n\r\n  constructor(\r\n    private cesiumService: CesiumService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n\r\n  init(options?: EntitiesDrawerOptions) {\r\n    const dataSources = [];\r\n\r\n    this.czmlStream = new CzmlDataSource('czml');\r\n\r\n    dataSources.push(this.czmlStream);\r\n\r\n    this.cesiumService.getViewer().dataSources.add(this.czmlStream);\r\n\r\n    return dataSources;\r\n  }\r\n\r\n  // returns the packet, provided by the stream\r\n  add(cesiumProps: any): any {\r\n\r\n    this.czmlStream.process(cesiumProps.czmlPacket);\r\n\r\n    return cesiumProps;\r\n  }\r\n\r\n  update(entity: any, cesiumProps: any) {\r\n    this.czmlStream.process(cesiumProps.czmlPacket);\r\n  }\r\n\r\n  remove(entity: any) {\r\n    this.czmlStream.entities.removeById(entity.acEntity.id);\r\n  }\r\n\r\n  removeAll() {\r\n    this.czmlStream.entities.removeAll();\r\n  }\r\n\r\n  setShow(showValue: boolean) {\r\n    this.czmlStream.entities.show = showValue;\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing ellipses.\r\n */\r\n@Injectable()\r\nexport class EllipseDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.ellipse);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing labels.\r\n */\r\n@Injectable()\r\nexport class LabelDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.label);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing points.\r\n */\r\n@Injectable()\r\nexport class PointDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.point);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing polygons.\r\n */\r\n@Injectable()\r\nexport class PolygonDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.polygon);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible of drawing polylines.\r\n */\r\n@Injectable()\r\nexport class PolylineDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.polyline);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PolylineCollection, Color, Material } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible of drawing polylines as primitives.\r\n *  This drawer is more efficient than PolylineDrawerService when drawing dynamic polylines.\r\n */\r\n@Injectable()\r\nexport class PolylinePrimitiveDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PolylineCollection, cesiumService);\r\n  }\r\n\r\n  add(cesiumProps: any) {\r\n    return this._cesiumCollection.add(this.withColorMaterial(cesiumProps));\r\n  }\r\n\r\n  update(cesiumObject: any, cesiumProps: any) {\r\n    if (cesiumProps.material instanceof Color) {\r\n      if (cesiumObject.material && cesiumObject.material.uniforms &&\r\n        cesiumObject.material.uniforms.color instanceof Color) {\r\n        this.withColorMaterial(cesiumProps);\r\n      } else if (!cesiumObject.material.uniforms.color.equals(cesiumProps.material)) {\r\n        cesiumObject.material.uniforms.color = cesiumProps.material;\r\n      }\r\n    }\r\n    super.update(cesiumObject, cesiumProps);\r\n  }\r\n\r\n  withColorMaterial(cesiumProps: any) {\r\n    if (cesiumProps.material instanceof Color) {\r\n      const material = Material.fromType('Color');\r\n      material.uniforms.color = cesiumProps.material;\r\n      cesiumProps.material = material;\r\n    }\r\n\r\n    return cesiumProps;\r\n  }\r\n}\r\n","export enum KeyboardAction {\r\n  CAMERA_FORWARD,\r\n  CAMERA_BACKWARD,\r\n  CAMERA_RIGHT,\r\n  CAMERA_LEFT,\r\n  CAMERA_UP,\r\n  CAMERA_DOWN,\r\n  CAMERA_LOOK_RIGHT,\r\n  CAMERA_LOOK_LEFT,\r\n  CAMERA_LOOK_UP,\r\n  CAMERA_LOOK_DOWN,\r\n  CAMERA_TWIST_RIGHT,\r\n  CAMERA_TWIST_LEFT,\r\n  CAMERA_ROTATE_RIGHT,\r\n  CAMERA_ROTATE_LEFT,\r\n  CAMERA_ROTATE_UP,\r\n  CAMERA_ROTATE_DOWN,\r\n  CAMERA_ZOOM_IN,\r\n  CAMERA_ZOOM_OUT,\r\n}\r\n","import { KeyboardAction } from '../../models/ac-keyboard-action.enum';\r\nimport { KeyboardControlActionFn } from './keyboard-control.service';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\n\r\nconst CAMERA_MOVEMENT_DEFAULT_FACTOR = 100.0;\r\nconst CAMERA_LOOK_DEFAULT_FACTOR = 0.01;\r\nconst CAMERA_TWIST_DEFAULT_FACTOR = 0.01;\r\nconst CAMERA_ROTATE_DEFAULT_FACTOR = 0.01;\r\n\r\nexport const PREDEFINED_KEYBOARD_ACTIONS: { [key: number]: KeyboardControlActionFn } = {\r\n  /**\r\n   * Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\r\n   * the factor of movement, according to the camera height.\r\n   */\r\n  [KeyboardAction.CAMERA_FORWARD]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const scene = cesiumService.getScene();\r\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\r\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\r\n    camera.moveForward(moveRate);\r\n  },\r\n  /**\r\n   * Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\r\n   * the factor of movement, according to the camera height.\r\n   */\r\n  [KeyboardAction.CAMERA_BACKWARD]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const scene = cesiumService.getScene();\r\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\r\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\r\n    camera.moveBackward(moveRate);\r\n  },\r\n  /**\r\n   * Moves the camera up, accepts a numeric parameter named `moveRate` that controls\r\n   * the factor of movement, according to the camera height.\r\n   */\r\n  [KeyboardAction.CAMERA_UP]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const scene = cesiumService.getScene();\r\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\r\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\r\n    camera.moveUp(moveRate);\r\n  },\r\n  /**\r\n   * Moves the camera down, accepts a numeric parameter named `moveRate` that controls\r\n   * the factor of movement, according to the camera height.\r\n   */\r\n  [KeyboardAction.CAMERA_DOWN]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const scene = cesiumService.getScene();\r\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\r\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\r\n    camera.moveDown(moveRate);\r\n  },\r\n  /**\r\n   * Moves the camera right, accepts a numeric parameter named `moveRate` that controls\r\n   * the factor of movement, according to the camera height.\r\n   */\r\n  [KeyboardAction.CAMERA_RIGHT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const scene = cesiumService.getScene();\r\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\r\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\r\n    camera.moveRight(moveRate);\r\n  },\r\n  /**\r\n   * Moves the camera left, accepts a numeric parameter named `moveRate` that controls\r\n   * the factor of movement, according to the camera height.\r\n   */\r\n  [KeyboardAction.CAMERA_LEFT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const scene = cesiumService.getScene();\r\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\r\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\r\n    camera.moveLeft(moveRate);\r\n  },\r\n  /**\r\n   * Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that controls\r\n   * the factor of looking, according to the camera current position.\r\n   */\r\n  [KeyboardAction.CAMERA_LOOK_RIGHT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const currentPosition = camera.positionCartographic;\r\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\r\n    camera.lookRight(currentPosition.latitude * lookFactor);\r\n  },\r\n  /**\r\n   * Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that controls\r\n   * the factor of looking, according to the camera current position.\r\n   */\r\n  [KeyboardAction.CAMERA_LOOK_LEFT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const currentPosition = camera.positionCartographic;\r\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\r\n    camera.lookLeft(currentPosition.latitude * lookFactor);\r\n  },\r\n  /**\r\n   * Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\r\n   * the factor of looking, according to the camera current position.\r\n   */\r\n  [KeyboardAction.CAMERA_LOOK_UP]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const currentPosition = camera.positionCartographic;\r\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\r\n    camera.lookUp(currentPosition.longitude * (lookFactor * -1));\r\n  },\r\n  /**\r\n   * Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\r\n   * the factor of looking, according to the camera current position.\r\n   */\r\n  [KeyboardAction.CAMERA_LOOK_DOWN]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const currentPosition = camera.positionCartographic;\r\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\r\n    camera.lookDown(currentPosition.longitude * (lookFactor * -1));\r\n  },\r\n  /**\r\n   * Twists the camera to the right, accepts a numeric parameter named `amount` that controls\r\n   * the twist amount\r\n   */\r\n  [KeyboardAction.CAMERA_TWIST_RIGHT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\r\n    camera.twistRight(lookFactor);\r\n  },\r\n  /**\r\n   * Twists the camera to the left, accepts a numeric parameter named `amount` that controls\r\n   * the twist amount\r\n   */\r\n  [KeyboardAction.CAMERA_TWIST_LEFT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\r\n    camera.twistLeft(lookFactor);\r\n  },\r\n  /**\r\n   * Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\r\n   * the rotation angle\r\n   */\r\n  [KeyboardAction.CAMERA_ROTATE_RIGHT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\r\n    camera.rotateRight(lookFactor);\r\n  },\r\n  /**\r\n   * Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\r\n   * the rotation angle\r\n   */\r\n  [KeyboardAction.CAMERA_ROTATE_LEFT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\r\n    camera.rotateLeft(lookFactor);\r\n  },\r\n  /**\r\n   * Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\r\n   * the rotation angle\r\n   */\r\n  [KeyboardAction.CAMERA_ROTATE_UP]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\r\n    camera.rotateUp(lookFactor);\r\n  },\r\n  /**\r\n   * Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\r\n   * the rotation angle\r\n   */\r\n  [KeyboardAction.CAMERA_ROTATE_DOWN]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\r\n    camera.rotateDown(lookFactor);\r\n  },\r\n  /**\r\n   * Zoom in into the current camera center position, accepts a numeric parameter named\r\n   * `amount` that controls the amount of zoom in meters.\r\n   */\r\n  [KeyboardAction.CAMERA_ZOOM_IN]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const amount = params.amount;\r\n    camera.zoomIn(amount);\r\n  },\r\n  /**\r\n   * Zoom out from the current camera center position, accepts a numeric parameter named\r\n   * `amount` that controls the amount of zoom in meters.\r\n   */\r\n  [KeyboardAction.CAMERA_ZOOM_OUT]: (cesiumService: CesiumService, params: any) => {\r\n    const camera = cesiumService.getViewer().camera;\r\n    const amount = params.amount;\r\n    camera.zoomOut(amount);\r\n  },\r\n};\r\n","import { Inject, Injectable, NgZone } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { KeyboardAction } from '../../models/ac-keyboard-action.enum';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\nimport { PREDEFINED_KEYBOARD_ACTIONS } from './predefined-actions';\r\n\r\nexport type KeyboardControlActionFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean | void;\r\nexport type KeyboardControlValidationFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean;\r\nexport type KeyboardControlDoneFn = (cesiumService: CesiumService, event: KeyboardEvent) => boolean;\r\n\r\nexport interface KeyboardControlParams {\r\n  action: KeyboardAction | KeyboardControlActionFn;\r\n  validation?: KeyboardControlValidationFn;\r\n  params?: { [paramName: string]: any };\r\n  done?: KeyboardControlDoneFn;\r\n}\r\n\r\nexport interface KeyboardControlDefinition {\r\n  [keyboardCharCode: string]: KeyboardControlParams;\r\n}\r\n\r\nenum KeyEventState {\r\n  IGNORED,\r\n  NOT_PRESSED,\r\n  PRESSED,\r\n}\r\n\r\ninterface ActiveDefinition {\r\n  keyboardEvent: KeyboardEvent;\r\n  state: KeyEventState;\r\n  action: KeyboardControlParams;\r\n}\r\n\r\n/**\r\n *  Service that manages keyboard keys and execute actions per request.\r\n *  Inject the keyboard control service into any layer, under your `ac-map` component,\r\n *  And defined you keyboard handlers using `setKeyboardControls`.\r\n *\r\n * <caption>Simple Example</caption>\r\n * ```typescript\r\n * Component({\r\n *   selector: 'keyboard-control-layer',\r\n *   template: '',\r\n * })\r\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\r\n *   constructor(private keyboardControlService: KeyboardControlService) {}\r\n *\r\n *   ngOnInit() {\r\n *     this.keyboardControlService.setKeyboardControls({\r\n *       W: { action: KeyboardAction.CAMERA_FORWARD },\r\n *       S: { action: KeyboardAction.CAMERA_BACKWARD },\r\n *       D: { action: KeyboardAction.CAMERA_RIGHT },\r\n *       A: { action: KeyboardAction.CAMERA_LEFT },\r\n *     });\r\n *    }\r\n *\r\n *   ngOnDestroy() {\r\n *     this.keyboardControlService.removeKeyboardControls();\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * <caption>Advanced Example</caption>\r\n * ```typescript\r\n * Component({\r\n *   selector: 'keyboard-control-layer',\r\n *   template: '',\r\n * })\r\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\r\n *   constructor(private keyboardControlService: KeyboardControlService) {}\r\n *\r\n *   private myCustomValue = 10;\r\n *\r\n *   ngOnInit() {\r\n *     this.keyboardControlService.setKeyboardControls({\r\n *       W: {\r\n *          action: KeyboardAction.CAMERA_FORWARD,\r\n *          validate: (camera, scene, params, key) => {\r\n *            // Replace `checkCamera` you with your validation logic\r\n *            if (checkCamera(camera) || params.customParams === true) {\r\n *              return true;\r\n *            }\r\n *\r\n *            return false;\r\n *          },\r\n *          params: () => {\r\n *            return {\r\n *              myValue: this.myCustomValue,\r\n *            };\r\n *          },\r\n *        }\r\n *     });\r\n *    }\r\n *\r\n *   ngOnDestroy() {\r\n *     this.keyboardControlService.removeKeyboardControls();\r\n *   }\r\n * }\r\n * ```\r\n * <b>Predefined keyboard actions:</b>\r\n * + `KeyboardAction.CAMERA_FORWARD` - Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\r\n * the factor of movement, according to the camera height.\r\n * + `KeyboardAction.CAMERA_BACKWARD` - Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\r\n * the factor of movement, according to the camera height.\r\n * + `KeyboardAction.CAMERA_UP` - Moves the camera up, accepts a numeric parameter named `moveRate` that controls\r\n * the factor of movement, according to the camera height.\r\n * + `KeyboardAction.CAMERA_DOWN` - Moves the camera down, accepts a numeric parameter named `moveRate` that controls\r\n * the factor of movement, according to the camera height.\r\n * + `KeyboardAction.CAMERA_RIGHT` - Moves the camera right, accepts a numeric parameter named `moveRate` that controls\r\n * the factor of movement, according to the camera height.\r\n * + `KeyboardAction.CAMERA_LEFT` - Moves the camera left, accepts a numeric parameter named `moveRate` that controls\r\n * the factor of movement, according to the camera height.\r\n * + `KeyboardAction.CAMERA_LOOK_RIGHT` - Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that\r\n * controls the factor of looking, according to the camera current position.\r\n * + `KeyboardAction.CAMERA_LOOK_LEFT` - Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that\r\n * controls the factor of looking, according to the camera current position.\r\n * + `KeyboardAction.CAMERA_LOOK_UP` - Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\r\n * the factor of looking, according to the camera current position.\r\n * + `KeyboardAction.CAMERA_LOOK_DOWN` - Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\r\n * the factor of looking, according to the camera current position.\r\n * + `KeyboardAction.CAMERA_TWIST_RIGHT` - Twists the camera to the right, accepts a numeric parameter named `amount` that controls\r\n * the twist amount\r\n * + `KeyboardAction.CAMERA_TWIST_LEFT` - Twists the camera to the left, accepts a numeric parameter named `amount` that controls\r\n * the twist amount\r\n * + `KeyboardAction.CAMERA_ROTATE_RIGHT` - Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\r\n * the rotation angle\r\n * + `KeyboardAction.CAMERA_ROTATE_LEFT` - Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\r\n * the rotation angle\r\n * + `KeyboardAction.CAMERA_ROTATE_UP` - Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\r\n * the rotation angle\r\n * + `KeyboardAction.CAMERA_ROTATE_DOWN` - Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\r\n * the rotation angle\r\n * + `KeyboardAction.CAMERA_ZOOM_IN` - Zoom in into the current camera center position, accepts a numeric parameter named\r\n * `amount` that controls the amount of zoom in meters.\r\n * + `KeyboardAction.CAMERA_ZOOM_OUT` -  Zoom out from the current camera center position, accepts a numeric parameter named\r\n * `amount` that controls the amount of zoom in meters.\r\n */\r\n@Injectable()\r\nexport class KeyboardControlService {\r\n  private _currentDefinitions: KeyboardControlDefinition = null;\r\n  private _activeDefinitions: { [definitionKey: string]: ActiveDefinition } = {};\r\n  private _keyMappingFn: Function = this.defaultKeyMappingFn;\r\n\r\n  /**\r\n   * Creats the keyboard control service.\r\n   */\r\n  constructor(private ngZone: NgZone, private cesiumService: CesiumService, @Inject(DOCUMENT) private document: any) {\r\n  }\r\n\r\n  /**\r\n   * Initializes the keyboard control service.\r\n   */\r\n  init() {\r\n    const canvas = this.cesiumService.getCanvas();\r\n    canvas.addEventListener('click', () => {\r\n      canvas.focus();\r\n    });\r\n\r\n    this.handleKeydown = this.handleKeydown.bind(this);\r\n    this.handleKeyup = this.handleKeyup.bind(this);\r\n    this.handleTick = this.handleTick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Sets the current map keyboard control definitions.\r\n   * The definitions is a key mapping between a key string and a KeyboardControlDefinition:\r\n   * - `action` is a predefine action from `KeyboardAction` enum, or a custom method:\r\n   * `(camera, scene, params, key) => boolean | void` - returning false will cancel the current keydown.\r\n   * - `validation` is a method that validates if the event should occur or not (`camera, scene, params, key`)\r\n   * - `params` is an object (or function that returns object) that will be passed into the action executor.\r\n   * - `done` is a function that will be triggered when `keyup` is triggered.\r\n   * @param definitions Keyboard Control Definition\r\n   * @param keyMappingFn - Mapping function for custom keys\r\n   * @param outsideOfAngularZone - if key down events will run outside of angular zone.\r\n   */\r\n  setKeyboardControls(definitions: KeyboardControlDefinition,\r\n                      keyMappingFn?: (keyEvent: KeyboardEvent) => string,\r\n                      outsideOfAngularZone = false) {\r\n    if (!definitions) {\r\n      return this.removeKeyboardControls();\r\n    }\r\n\r\n    if (!this._currentDefinitions) {\r\n      this.registerEvents(outsideOfAngularZone);\r\n    }\r\n\r\n    this._currentDefinitions = definitions;\r\n    this._keyMappingFn = keyMappingFn || this.defaultKeyMappingFn;\r\n\r\n    Object.keys(this._currentDefinitions).forEach(key => {\r\n      this._activeDefinitions[key] = {\r\n        state: KeyEventState.NOT_PRESSED,\r\n        action: null,\r\n        keyboardEvent: null,\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes the current set of keyboard control items, and unregister from map events.\r\n   */\r\n  removeKeyboardControls() {\r\n    this.unregisterEvents();\r\n    this._currentDefinitions = null;\r\n  }\r\n\r\n  /**\r\n   * Returns the current action that handles `char` key string, or `null` if not exists\r\n   */\r\n  private getAction(char: string): KeyboardControlParams {\r\n    return this._currentDefinitions[char] || null;\r\n  }\r\n\r\n  /**\r\n   * The default `defaultKeyMappingFn` that maps `KeyboardEvent` into a key string.\r\n   */\r\n  private defaultKeyMappingFn(keyEvent: KeyboardEvent): string {\r\n    return String.fromCharCode(keyEvent.keyCode);\r\n  }\r\n\r\n  /**\r\n   * document's `keydown` event handler\r\n   */\r\n  private handleKeydown(e: KeyboardEvent) {\r\n    const char = this._keyMappingFn(e);\r\n    const action = this.getAction(char);\r\n\r\n    if (action) {\r\n      const actionState = this._activeDefinitions[char];\r\n\r\n      if (actionState.state !== KeyEventState.IGNORED) {\r\n        let execute = true;\r\n\r\n        const params = this.getParams(action.params, e);\r\n\r\n        if (action.validation) {\r\n          execute = action.validation(this.cesiumService, params, e);\r\n        }\r\n\r\n        if (execute === true) {\r\n          this._activeDefinitions[char] = {\r\n            state: KeyEventState.PRESSED,\r\n            action,\r\n            keyboardEvent: e,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * document's `keyup` event handler\r\n   */\r\n  private handleKeyup(e: KeyboardEvent) {\r\n    const char = this._keyMappingFn(e);\r\n    const action = this.getAction(char);\r\n\r\n    if (action) {\r\n      this._activeDefinitions[char] = {\r\n        state: KeyEventState.NOT_PRESSED,\r\n        action: null,\r\n        keyboardEvent: e,\r\n      };\r\n\r\n      if (action.done && typeof action.done === 'function') {\r\n        action.done(this.cesiumService, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * `tick` event handler that triggered by Cesium render loop\r\n   */\r\n  private handleTick() {\r\n    const activeKeys = Object.keys(this._activeDefinitions);\r\n\r\n    activeKeys.forEach(key => {\r\n      const actionState = this._activeDefinitions[key];\r\n\r\n      if (actionState !== null && actionState.action !== null && actionState.state === KeyEventState.PRESSED) {\r\n        this.executeAction(actionState.action, key, actionState.keyboardEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Params resolve function, returns object.\r\n   * In case of params function, executes it and returns it's return value.\r\n   *\r\n   */\r\n  private getParams(paramsDef: any, keyboardEvent: KeyboardEvent): { [paramName: string]: any } {\r\n    if (!paramsDef) {\r\n      return {};\r\n    }\r\n\r\n    if (typeof paramsDef === 'function') {\r\n      return paramsDef(this.cesiumService, keyboardEvent);\r\n    }\r\n\r\n    return paramsDef;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Executes a given `KeyboardControlParams` object.\r\n   *\r\n   */\r\n  private executeAction(execution: KeyboardControlParams, key: string, keyboardEvent: KeyboardEvent) {\r\n    if (!this._currentDefinitions) {\r\n      return;\r\n    }\r\n\r\n    const params = this.getParams(execution.params, keyboardEvent);\r\n\r\n    if (typeof execution.action == 'number') {\r\n      const predefinedAction = PREDEFINED_KEYBOARD_ACTIONS[execution.action as number];\r\n\r\n      if (predefinedAction) {\r\n        predefinedAction(this.cesiumService, params, keyboardEvent);\r\n      }\r\n    } else if (typeof execution.action === 'function') {\r\n      const shouldCancelEvent = execution.action(this.cesiumService, params, keyboardEvent);\r\n\r\n      if (shouldCancelEvent === false) {\r\n        this._activeDefinitions[key] = {\r\n          state: KeyEventState.IGNORED,\r\n          action: null,\r\n          keyboardEvent: null,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers to keydown, keyup of `document`, and `tick` of Cesium.\r\n   */\r\n  private registerEvents(outsideOfAngularZone: boolean) {\r\n    const registerToEvents = () => {\r\n      this.document.addEventListener('keydown', this.handleKeydown);\r\n      this.document.addEventListener('keyup', this.handleKeyup);\r\n      this.cesiumService.getViewer().clock.onTick.addEventListener(this.handleTick);\r\n    };\r\n\r\n    if (outsideOfAngularZone) {\r\n      this.ngZone.runOutsideAngular(registerToEvents);\r\n    } else {\r\n      registerToEvents();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unregisters to keydown, keyup of `document`, and `tick` of Cesium.\r\n   */\r\n  private unregisterEvents() {\r\n    this.document.removeEventListener('keydown', this.handleKeydown);\r\n    this.document.removeEventListener('keyup', this.handleKeyup);\r\n    this.cesiumService.getViewer().clock.onTick.removeEventListener(this.handleTick);\r\n  }\r\n}\r\n","import { Observable, Subscriber } from 'rxjs';\r\nimport { CesiumEvent } from '../consts/cesium-event.enum';\r\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\r\n\r\nexport class CesiumPureEventObserver {\r\n  public observer: Observable<any>;\r\n\r\n  constructor(protected event: CesiumEvent, protected modifier: CesiumEventModifier) {\r\n  }\r\n\r\n  init(eventsHandler: any): Observable<any> {\r\n    this.observer = Observable.create((observer: Subscriber<any>) => {\r\n        eventsHandler.setInputAction((movement: any) => {\r\n          if (movement.position) {\r\n            movement.startPosition = movement.position;\r\n            movement.endPosition = movement.position;\r\n          }\r\n          observer.next(movement);\r\n        }, this.event, this.modifier);\r\n      }\r\n    );\r\n    return this.observer;\r\n  }\r\n}\r\n","import { ConnectableObservable, merge, of as observableOf } from 'rxjs';\r\nimport { delay, filter, mergeMap, publish, takeUntil, tap } from 'rxjs/operators';\r\nimport { Cartesian2 } from 'cesium';\r\nimport { CesiumPureEventObserver } from './cesium-pure-event-observer';\r\nimport { CesiumEvent } from '../consts/cesium-event.enum';\r\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\r\nimport { CesiumEventBuilder } from '../cesium-event-builder';\r\n\r\nexport class CesiumLongPressObserver extends CesiumPureEventObserver {\r\n  public static LONG_PRESS_EVENTS_DURATION = 250;\r\n  public static LONG_PRESS_EVENTS_MIN_DISTANCE_PX = 10;\r\n\r\n  constructor(protected event: CesiumEvent,\r\n              protected modifier: CesiumEventModifier,\r\n              private eventFactory: CesiumEventBuilder) {\r\n    super(event, modifier);\r\n  }\r\n\r\n  init(): ConnectableObservable<any> {\r\n    let startEvent: CesiumEvent;\r\n    let stopEvent: CesiumEvent;\r\n\r\n    if (this.event === CesiumEvent.LONG_LEFT_PRESS) {\r\n      startEvent = CesiumEvent.LEFT_DOWN;\r\n      stopEvent = CesiumEvent.LEFT_UP;\r\n    } else if (this.event === CesiumEvent.LONG_RIGHT_PRESS) {\r\n      startEvent = CesiumEvent.RIGHT_DOWN;\r\n      stopEvent = CesiumEvent.RIGHT_UP;\r\n    } else if (this.event === CesiumEvent.LONG_MIDDLE_PRESS) {\r\n      startEvent = CesiumEvent.MIDDLE_DOWN;\r\n      stopEvent = CesiumEvent.MIDDLE_UP;\r\n    }\r\n\r\n    // Save start event position\r\n    let startEventPosition: Cartesian2 = null;\r\n    const startEventObservable = this.eventFactory.get(startEvent, this.modifier)\r\n      .pipe(tap((movement) => (startEventPosition = movement.endPosition)));\r\n\r\n    // Prevent drag mistaken for long press by observing mouse move far from start event position\r\n    const mouseMoveEventObservable = this.eventFactory.get(CesiumEvent.MOUSE_MOVE)\r\n      .pipe(\r\n        filter((movement) => \r\n          Math.abs(movement.endPosition.x - startEventPosition.x) > CesiumLongPressObserver.LONG_PRESS_EVENTS_MIN_DISTANCE_PX ||\r\n          Math.abs(movement.endPosition.y - startEventPosition.y) > CesiumLongPressObserver.LONG_PRESS_EVENTS_MIN_DISTANCE_PX\r\n        )\r\n      );\r\n\r\n    const stopEventObservable = merge(\r\n      this.eventFactory.get(stopEvent, this.modifier),\r\n      mouseMoveEventObservable \r\n    );\r\n\r\n    // publish for preventing side effect\r\n    const longPressObservable = publish()(startEventObservable.pipe(\r\n      mergeMap((e) => observableOf(e).pipe(\r\n        delay(CesiumLongPressObserver.LONG_PRESS_EVENTS_DURATION),\r\n        takeUntil(stopEventObservable))),\r\n    ));\r\n    return longPressObservable;\r\n  }\r\n}\r\n","import { publish } from 'rxjs/operators';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\nimport { CesiumEvent } from './consts/cesium-event.enum';\r\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\r\nimport { Injectable } from '@angular/core';\r\nimport { CesiumPureEventObserver } from './event-observers/cesium-pure-event-observer';\r\nimport { CesiumLongPressObserver } from './event-observers/cesium-long-press-observer';\r\nimport { ConnectableObservable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CesiumEventBuilder {\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n  }\r\n\r\n  public static longPressEvents: Set<CesiumEvent> = new Set([\r\n    CesiumEvent.LONG_LEFT_PRESS,\r\n    CesiumEvent.LONG_RIGHT_PRESS,\r\n    CesiumEvent.LONG_MIDDLE_PRESS\r\n  ]);\r\n\r\n  private eventsHandler: any;\r\n  private cesiumEventsObservables = new Map<string, ConnectableObservable<any>>();\r\n\r\n  public static getEventFullName(event: CesiumEvent, modifier?: CesiumEventModifier): string {\r\n    if (modifier) {\r\n      return `${event}_${modifier}`;\r\n    } else {\r\n      return event.toString();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.eventsHandler = this.cesiumService.getViewer().screenSpaceEventHandler;\r\n  }\r\n\r\n  get(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\r\n    const eventName = CesiumEventBuilder.getEventFullName(event, modifier);\r\n    if (this.cesiumEventsObservables.has(eventName)) {\r\n      return this.cesiumEventsObservables.get(eventName);\r\n    } else {\r\n      const eventObserver = this.createCesiumEventObservable(event, modifier);\r\n      this.cesiumEventsObservables.set(eventName, eventObserver);\r\n      return eventObserver;\r\n    }\r\n  }\r\n\r\n  private createCesiumEventObservable(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\r\n    let cesiumEventObservable: ConnectableObservable<any>;\r\n    if (CesiumEventBuilder.longPressEvents.has(event)) {\r\n      cesiumEventObservable = this.createSpecialCesiumEventObservable(event, modifier);\r\n    } else {\r\n      cesiumEventObservable = publish()(new CesiumPureEventObserver(event, modifier).init(this.eventsHandler));\r\n    }\r\n    cesiumEventObservable.connect();\r\n    return cesiumEventObservable;\r\n  }\r\n\r\n  private createSpecialCesiumEventObservable(event: CesiumEvent, modifier: CesiumEventModifier): ConnectableObservable<any> {\r\n    // could support more events if needed\r\n    return new CesiumLongPressObserver(event, modifier, this).init();\r\n  }\r\n}\r\n\r\n","export const UtilsService = {\r\n  unique: (array: any[]): any[] => {\r\n    return array.reduce((accumulator, currentValue) => {\r\n      if (accumulator.indexOf(currentValue) < 0) {\r\n        accumulator.push(currentValue);\r\n      }\r\n      return accumulator;\r\n    }, []);\r\n  }\r\n};\r\n\r\n","import { CesiumEvent } from '../consts/cesium-event.enum';\r\n\r\nexport class CesiumDragDropHelper {\r\n\r\n  public static dragEvents: Set<CesiumEvent> = new Set([\r\n    CesiumEvent.LEFT_CLICK_DRAG,\r\n    CesiumEvent.RIGHT_CLICK_DRAG,\r\n    CesiumEvent.MIDDLE_CLICK_DRAG\r\n  ]);\r\n\r\n\r\n  public static getDragEventTypes(dragEvent: CesiumEvent) {\r\n    let mouseDownEvent;\r\n    let mouseUpEvent;\r\n    if (dragEvent === CesiumEvent.LEFT_CLICK_DRAG) {\r\n      mouseDownEvent = CesiumEvent.LEFT_DOWN;\r\n      mouseUpEvent = CesiumEvent.LEFT_UP;\r\n    } else if (dragEvent === CesiumEvent.RIGHT_CLICK_DRAG) {\r\n      mouseDownEvent = CesiumEvent.RIGHT_DOWN;\r\n      mouseUpEvent = CesiumEvent.RIGHT_UP;\r\n    } else if (dragEvent === CesiumEvent.MIDDLE_CLICK_DRAG) {\r\n      mouseDownEvent = CesiumEvent.MIDDLE_DOWN;\r\n      mouseUpEvent = CesiumEvent.MIDDLE_UP;\r\n    }\r\n\r\n    return {mouseDownEvent, mouseUpEvent};\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { AcEntity } from '../../models/ac-entity';\r\nimport { Subject } from 'rxjs';\r\nimport { EventResult, Movement } from '../map-events-mananger/map-events-manager';\r\n\r\n/**\r\n * Service for solving plonter.\r\n * Used by map-event-manager and plonter context component\r\n */\r\n@Injectable()\r\nexport class PlonterService {\r\n  private _plonterShown: boolean;\r\n  private _entitesToPlonter: AcEntity[] = [];\r\n  private _plonterObserver: Subject<EventResult>;\r\n  private _eventResult: EventResult;\r\n  private _plonterChangeNotifier: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() {\r\n    this._plonterObserver = new Subject<EventResult>();\r\n  }\r\n\r\n  get plonterChangeNotifier(): EventEmitter<any> {\r\n    return this._plonterChangeNotifier;\r\n  }\r\n\r\n  get plonterShown(): boolean {\r\n    return this._plonterShown;\r\n  }\r\n\r\n  get entitesToPlonter(): AcEntity[] {\r\n    return this._entitesToPlonter;\r\n  }\r\n\r\n  get plonterClickPosition(): Movement {\r\n    return this._eventResult.movement;\r\n  }\r\n\r\n  plonterIt(eventResult: EventResult) {\r\n    this._eventResult = eventResult;\r\n    this._entitesToPlonter = eventResult.entities;\r\n    this._plonterShown = true;\r\n\r\n    this._plonterChangeNotifier.emit();\r\n    return this._plonterObserver;\r\n  }\r\n\r\n  resolvePlonter(entity: AcEntity) {\r\n    this._plonterShown = false;\r\n    this._eventResult.entities = [entity];\r\n\r\n    this._plonterChangeNotifier.emit();\r\n    this._plonterObserver.next(this._eventResult);\r\n  }\r\n}\r\n","import { merge, Observable, of as observableOf, Subject } from 'rxjs';\r\n\r\nimport { filter, map, mergeMap, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Entity } from 'cesium';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\nimport { CesiumEventBuilder } from './cesium-event-builder';\r\nimport { EventRegistrationInput, PickConfiguration } from './event-registration-input';\r\nimport { DisposableObservable } from './disposable-observable';\r\nimport { PickOptions } from './consts/pickOptions.enum';\r\nimport { CesiumEvent } from './consts/cesium-event.enum';\r\nimport { PlonterService } from '../plonter/plonter.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { CesiumDragDropHelper } from './event-observers/cesium-drag-drop-helper';\r\n\r\nclass Registration {\r\n  constructor(public observable: Observable<EventResult>,\r\n              public  stopper: Subject<any>,\r\n              public  priority: number,\r\n              public  isPaused: boolean) {\r\n  }\r\n}\r\n\r\n/**\r\n * Returns screen position, drag boolean for drag events only\r\n */\r\nexport interface Movement {\r\n  startPosition: { x: number, y: number };\r\n  endPosition: { x: number, y: number };\r\n  drop?: boolean;\r\n}\r\n\r\nexport interface EventResult {\r\n  movement: Movement;\r\n  cesiumEntities: any[];\r\n  entities: any[];\r\n}\r\n\r\n/**\r\n * Manages all map events. Notice events will run outside of Angular zone.\r\n * Provided by `<ac-map/>` component there for could be injected at any component under `<ac-map/>` hierarchy\r\n * or from the `<ac-map/>` component reference `acMapComponent.getMapEventsManager()`\r\n *\r\n * __usage:__\r\n * ```\r\n * MapEventsManagerService.register({event, modifier, priority, entityType, pickOption}).subscribe()\r\n * ```\r\n * __param:__ {CesiumEvent} event\r\n * __param:__ {CesiumEventModifier} modifier\r\n * __param:__ priority - the bigger the number the bigger the priority. default : 0.\r\n * __param:__ entityType - entity type class that you are interested like (Track). the class must extends AcEntity\r\n * __param:__ pickOption - self explained\r\n */\r\n@Injectable()\r\nexport class MapEventsManagerService {\r\n\r\n  private scene: any;\r\n  private eventRegistrations = new Map<string, Registration[]>();\r\n\r\n  constructor(private cesiumService: CesiumService,\r\n              private eventBuilder: CesiumEventBuilder,\r\n              private plonterService: PlonterService) {\r\n  }\r\n\r\n  init() {\r\n    this.eventBuilder.init();\r\n    this.scene = this.cesiumService.getScene();\r\n  }\r\n\r\n  /**\r\n   * Register to map event\r\n   * @param input Event Registration Input\r\n   *\r\n   * @returns DisposableObservable<EventResult>\r\n   */\r\n  register(input: EventRegistrationInput): DisposableObservable<EventResult> {\r\n    if (this.scene === undefined) {\r\n      throw new Error('CesiumService has not been initialized yet - MapEventsManagerService must be injected  under ac-map');\r\n    }\r\n\r\n    input.pick = input.pick || PickOptions.NO_PICK;\r\n    input.priority = input.priority || 0;\r\n    input.pickConfig = input.pickConfig || {};\r\n\r\n    if (input.entityType && input.pick === PickOptions.NO_PICK) {\r\n      throw new Error('MapEventsManagerService: can\\'t register an event ' +\r\n        'with entityType and PickOptions.NO_PICK - It doesn\\'t make sense ');\r\n    }\r\n\r\n    const eventName = CesiumEventBuilder.getEventFullName(input.event, input.modifier);\r\n\r\n    if (!this.eventRegistrations.has(eventName)) {\r\n      this.eventRegistrations.set(eventName, []);\r\n    }\r\n\r\n    const eventRegistration = this.createEventRegistration(input);\r\n    const registrationObservable: any = eventRegistration.observable;\r\n    registrationObservable.dispose = () => this.disposeObservable(eventRegistration, eventName);\r\n    this.eventRegistrations.get(eventName).push(eventRegistration);\r\n\r\n    this.sortRegistrationsByPriority(eventName);\r\n    return <DisposableObservable<EventResult>>registrationObservable;\r\n  }\r\n\r\n  private disposeObservable(eventRegistration: Registration, eventName: string) {\r\n    eventRegistration.stopper.next(1);\r\n    const registrations = this.eventRegistrations.get(eventName);\r\n    const index = registrations.indexOf(eventRegistration);\r\n    if (index !== -1) {\r\n      registrations.splice(index, 1);\r\n    }\r\n    this.sortRegistrationsByPriority(eventName);\r\n  }\r\n\r\n  private sortRegistrationsByPriority(eventName: string) {\r\n    const registrations = this.eventRegistrations.get(eventName);\r\n    registrations.sort((a, b) => b.priority - a.priority);\r\n    if (registrations.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Active registrations by priority\r\n    const currentPriority = registrations[0].priority;\r\n    registrations.forEach((registration) => {\r\n      registration.isPaused = registration.priority < currentPriority;\r\n    });\r\n\r\n  }\r\n\r\n  private createEventRegistration({\r\n                                    event,\r\n                                    modifier,\r\n                                    entityType,\r\n                                    pick: pickOption,\r\n                                    priority,\r\n                                    pickFilter,\r\n                                    pickConfig,\r\n                                  }: EventRegistrationInput): Registration {\r\n    const cesiumEventObservable = this.eventBuilder.get(event, modifier);\r\n    const stopper = new Subject<any>();\r\n\r\n    const registration = new Registration(undefined, stopper, priority, false);\r\n    let observable: Observable<EventResult>;\r\n\r\n    if (!CesiumDragDropHelper.dragEvents.has(event)) {\r\n      observable = cesiumEventObservable.pipe(\r\n        filter(() => !registration.isPaused),\r\n        map((movement) => this.triggerPick(movement, pickOption, pickConfig)),\r\n        filter((result) => result.cesiumEntities !== null || entityType === undefined),\r\n        map((picksAndMovement) => this.addEntities(picksAndMovement, entityType, pickOption, pickFilter)),\r\n        filter((result) => result.entities !== null || (entityType === undefined && !pickFilter)),\r\n        switchMap((entitiesAndMovement) => this.plonter(entitiesAndMovement, pickOption)),\r\n        takeUntil(stopper));\r\n    } else {\r\n      observable = this.createDragEvent({\r\n        event,\r\n        modifier,\r\n        entityType,\r\n        pick: pickOption,\r\n        priority,\r\n        pickFilter,\r\n        pickConfig\r\n      }).pipe(takeUntil(stopper));\r\n    }\r\n\r\n    registration.observable = observable;\r\n    return registration;\r\n  }\r\n\r\n  private createDragEvent({\r\n                            event,\r\n                            modifier,\r\n                            entityType,\r\n                            pick: pickOption,\r\n                            priority,\r\n                            pickFilter,\r\n                            pickConfig,\r\n                          }: EventRegistrationInput): Observable<EventResult> {\r\n    const { mouseDownEvent, mouseUpEvent } = CesiumDragDropHelper.getDragEventTypes(event);\r\n\r\n    const mouseUpObservable = this.eventBuilder.get(mouseUpEvent);\r\n    const mouseMoveObservable = this.eventBuilder.get(CesiumEvent.MOUSE_MOVE);\r\n\r\n    const mouseDownRegistration = this.createEventRegistration({\r\n      event: mouseDownEvent,\r\n      modifier,\r\n      entityType,\r\n      pick: pickOption,\r\n      priority,\r\n      pickFilter,\r\n      pickConfig,\r\n    });\r\n\r\n    const dropSubject = new Subject<EventResult>();\r\n    const dragObserver = mouseDownRegistration.observable.pipe(mergeMap(e => {\r\n      let lastMove: any = null;\r\n      const dragStartPositionX = e.movement.startPosition.x;\r\n      const dragStartPositionY = e.movement.startPosition.y;\r\n      return mouseMoveObservable.pipe(map((movement) => {\r\n        lastMove = {\r\n          movement: {\r\n            drop: false,\r\n            startPosition: {\r\n              x: dragStartPositionX,\r\n              y: dragStartPositionY,\r\n            },\r\n            endPosition: movement.endPosition,\r\n          },\r\n          entities: e.entities,\r\n          cesiumEntities: e.cesiumEntities\r\n        };\r\n        return lastMove;\r\n      }), takeUntil(mouseUpObservable), tap({\r\n        complete: () => {\r\n          // On complete\r\n          if (lastMove) {\r\n            const dropEvent = Object.assign({}, lastMove);\r\n            dropEvent.movement.drop = true;\r\n            dropSubject.next(dropEvent);\r\n          }\r\n        }\r\n      }));\r\n    }));\r\n\r\n    return merge(dragObserver, dropSubject);\r\n\r\n  }\r\n\r\n  private triggerPick(movement: any, pickOptions: PickOptions, pickConfig: PickConfiguration) {\r\n    let picks: any = [];\r\n    switch (pickOptions) {\r\n      case PickOptions.PICK_ONE:\r\n      case PickOptions.PICK_ALL:\r\n        picks = this.scene.drillPick(movement.endPosition, pickConfig.drillPickLimit, pickConfig.pickWidth, pickConfig.pickHeight);\r\n        picks = picks.length === 0 ? null : picks;\r\n        break;\r\n      case PickOptions.PICK_FIRST:\r\n        const pick = this.scene.pick(movement.endPosition, pickConfig.pickWidth, pickConfig.pickHeight);\r\n        picks = pick === undefined ? null : [pick];\r\n        break;\r\n      case PickOptions.NO_PICK:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Picks can be cesium entity or cesium primitive\r\n    if (picks) {\r\n      picks = picks.map((pick: any) => pick.id && pick.id instanceof Entity ? pick.id : pick.primitive);\r\n    }\r\n\r\n    return { movement: movement, cesiumEntities: picks };\r\n  }\r\n\r\n  private addEntities(picksAndMovement: any, entityType: any, pickOption: PickOptions, pickFilter?: (any) => boolean): EventResult {\r\n\r\n    if (picksAndMovement.cesiumEntities === null) {\r\n      picksAndMovement.entities = null;\r\n      return picksAndMovement;\r\n    }\r\n    let entities = [];\r\n    if (pickOption !== PickOptions.NO_PICK) {\r\n      if (entityType) {\r\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity).filter((acEntity: any) => {\r\n          return acEntity && acEntity instanceof entityType;\r\n        });\r\n      } else {\r\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity);\r\n      }\r\n\r\n      entities = UtilsService.unique(entities);\r\n      entities = (pickFilter && entities) ? entities.filter(pickFilter) : entities;\r\n      if (entities.length === 0) {\r\n        entities = null;\r\n      }\r\n    }\r\n\r\n    picksAndMovement.entities = entities;\r\n\r\n    return picksAndMovement;\r\n  }\r\n\r\n  private plonter(entitiesAndMovement: EventResult, pickOption: PickOptions): Observable<EventResult> {\r\n    if (pickOption === PickOptions.PICK_ONE && entitiesAndMovement.entities !== null && entitiesAndMovement.entities.length > 1) {\r\n      return this.plonterService.plonterIt(entitiesAndMovement);\r\n    } else {\r\n      return observableOf(entitiesAndMovement);\r\n    }\r\n  }\r\n}\r\n","import { CesiumService } from '../cesium/cesium.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MapLayersService {\r\n\r\n  private layersDataSources: any[] = [];\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n\r\n  }\r\n\r\n  registerLayerDataSources(dataSources: any[], zIndex: number) {\r\n    dataSources.forEach(ds => {\r\n      ds.zIndex = zIndex;\r\n      this.layersDataSources.push(ds);\r\n    });\r\n  }\r\n\r\n  drawAllLayers() {\r\n    this.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\r\n\r\n    this.layersDataSources.forEach((dataSource) => {\r\n      this.cesiumService.getViewer().dataSources.add(dataSource);\r\n    });\r\n  }\r\n\r\n  updateAndRefresh(dataSources: any[], newZIndex: number) {\r\n    if (dataSources && dataSources.length) {\r\n      dataSources.forEach((ds) => {\r\n        const index = this.layersDataSources.indexOf(ds);\r\n        if (index !== -1) {\r\n          this.layersDataSources[index].zIndex = newZIndex;\r\n        }\r\n      });\r\n\r\n      this.cesiumService.getViewer().dataSources.removeAll();\r\n      this.drawAllLayers();\r\n    }\r\n  }\r\n\r\n  removeDataSources(dataSources: any[]) {\r\n    dataSources.forEach(ds => {\r\n      const index = this.layersDataSources.indexOf(ds);\r\n      if (index !== -1) {\r\n        this.layersDataSources.splice(index, 1);\r\n        this.cesiumService.getViewer().dataSources.remove(ds, true);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\n\r\n/**\r\n * Take screenshot of your cesium globe.\r\n *\r\n * usage:\r\n * ```typescript\r\n * // get base 64 data url\r\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\r\n *\r\n * // or download as png\r\n * screenshotService.downloadMapScreenshot('my-map.png');\r\n *\r\n * ```\r\n *\r\n */\r\n@Injectable()\r\nexport class ScreenshotService {\r\n  constructor(private cesiumService: CesiumService) {\r\n  }\r\n\r\n  getMapScreenshotDataUrlBase64() {\r\n    const canvas = this.cesiumService.getCanvas();\r\n    return canvas.toDataURL();\r\n  }\r\n\r\n\r\n  downloadMapScreenshot(filename = 'map.png') {\r\n    const dataUrl = this.getMapScreenshotDataUrlBase64();\r\n    this.downloadURI(dataUrl, filename);\r\n  }\r\n\r\n  private downloadURI(uri: string, name: string) {\r\n    const link = document.createElement('a');\r\n    link.download = name;\r\n    link.href = uri;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Ellipsoid, SceneMode, Cartographic } from 'cesium';\r\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\r\n\r\n/**\r\n *  The service manages `ac-map` instances. `ac-map` register itself to this service.\r\n *  This allows retrieval of maps provided services outside of `ac-map` scope.\r\n */\r\n@Injectable()\r\nexport class MapsManagerService {\r\n  private defaultIdCounter = 0;\r\n  private _Maps = new Map<string, AcMapComponent>();\r\n  private firstMap: any;\r\n  private eventRemoveCallbacks: Function[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  getMap(id?: string): AcMapComponent | undefined {\r\n    if (!id) {\r\n      return this.firstMap;\r\n    }\r\n    return this._Maps.get(id);\r\n  }\r\n\r\n  _registerMap(id: string, acMap: AcMapComponent): string {\r\n    if (!this.firstMap) {\r\n      this.firstMap = acMap;\r\n    }\r\n\r\n    const mapId = id ? id : this.generateDefaultId();\r\n    if (this._Maps.has(mapId)) {\r\n      throw new Error(`Map with id: ${mapId} already exist`);\r\n    }\r\n    this._Maps.set(mapId, acMap);\r\n    return mapId;\r\n  }\r\n\r\n  _removeMapById(id: string) {\r\n    return this._Maps.delete(id);\r\n  }\r\n\r\n  private generateDefaultId(): string {\r\n    this.defaultIdCounter++;\r\n    return 'default-map-id-' + this.defaultIdCounter;\r\n  }\r\n\r\n  /**\r\n   * Binds multiple 2D map's cameras together.\r\n   * @param mapsConfiguration - binding options.\r\n   * mapId - the id of the maps to bind.\r\n   * sensitivity - the amount the camera position should change in order to sync other maps.\r\n   * bindZoom - should bind zoom level\r\n   */\r\n  sync2DMapsCameras(mapsConfiguration: { id: string; sensitivity?: number; bindZoom?: boolean }[]) {\r\n    const DEFAULT_SENSITIVITY = 0.01;\r\n    this.unsyncMapsCameras();\r\n    const maps: { map: AcMapComponent; options?: { sensitivity?: number; bindZoom?: boolean } }[] = mapsConfiguration.map(config => {\r\n      const map = this.getMap(config.id);\r\n      if (!map) {\r\n        throw new Error(`Couldn't find map with id: ${config.id}`);\r\n      }\r\n\r\n      return {map, options: {sensitivity: config.sensitivity, bindZoom: config.bindZoom}};\r\n    });\r\n\r\n    maps.forEach(masterMapConfig => {\r\n      const masterMap = masterMapConfig.map;\r\n      const options = masterMapConfig.options;\r\n      const masterCamera = masterMap.getCameraService().getCamera();\r\n      const masterCameraCartographic = masterCamera.positionCartographic;\r\n      masterCamera.percentageChanged = options.sensitivity || DEFAULT_SENSITIVITY;\r\n      const removeCallback = masterCamera.changed.addEventListener(() => {\r\n        maps.forEach(slaveMapConfig => {\r\n          const slaveMap = slaveMapConfig.map;\r\n          const slaveMapOptions = slaveMapConfig.options;\r\n          if (slaveMap === masterMap) {\r\n            return;\r\n          }\r\n\r\n          const slaveCamera = slaveMap.getCameraService().getCamera();\r\n          const slaveCameraCartographic = slaveCamera.positionCartographic;\r\n          const position = Ellipsoid.WGS84.cartographicToCartesian(\r\n            new Cartographic(\r\n                masterCameraCartographic.longitude,\r\n                masterCameraCartographic.latitude,\r\n                slaveMapOptions.bindZoom ? masterCameraCartographic.height : slaveCameraCartographic.height)\r\n          );\r\n\r\n          if (slaveMap.getCesiumViewer().scene.mode !== SceneMode.MORPHING) {\r\n            slaveCamera.setView({\r\n              destination: position,\r\n              orientation: {\r\n                heading: slaveCamera.heading,\r\n                pitch: slaveCamera.pitch,\r\n              },\r\n            });\r\n          }\r\n        });\r\n      });\r\n      this.eventRemoveCallbacks.push(removeCallback);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsyncs maps cameras\r\n   */\r\n  unsyncMapsCameras() {\r\n    this.eventRemoveCallbacks.forEach(removeCallback => removeCallback());\r\n    this.eventRemoveCallbacks = [];\r\n  }\r\n}\r\n","import { Component, DoCheck, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { SceneTransforms } from 'cesium';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\n\r\n/**\r\n *  This is an html implementation.\r\n *  The ac-html element must be a child of ac-map element.\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-html [props]=\"{position: position, show: true}\">;\r\n *    <p>html element</p>\r\n *  </ac-html>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-html',\r\n  template: `<ng-content></ng-content>`,\r\n  styles: [`:host {\r\n                position: absolute;\r\n                z-index: 100;\r\n\t\t\t\t}`]\r\n})\r\nexport class AcHtmlComponent implements DoCheck, OnDestroy, OnInit {\r\n\r\n\r\n  @Input() props: any;\r\n  private isDraw = false;\r\n  preRenderEventListener: () => void;\r\n\r\n  constructor(private cesiumService: CesiumService, private elementRef: ElementRef, private renderer: Renderer2) {\r\n  }\r\n\r\n  setScreenPosition(screenPosition: any) {\r\n    if (screenPosition) {\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${screenPosition.y}px`);\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${screenPosition.x}px`);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.cesiumService.getMap().getMapContainer().appendChild(this.elementRef.nativeElement);\r\n    this.cesiumService.getMapContainer().appendChild(this.elementRef.nativeElement);\r\n    if (this.props.show === false) {\r\n      this.hideElement();\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    if (this.isDraw) {\r\n      this.isDraw = false;\r\n      this.cesiumService.getScene().preRender.removeEventListener(this.preRenderEventListener);\r\n      this.hideElement();\r\n    }\r\n  }\r\n\r\n  hideElement() {\r\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', `none`);\r\n  }\r\n\r\n  add() {\r\n    if (!this.isDraw) {\r\n      this.isDraw = true;\r\n      this.preRenderEventListener = () => {\r\n        const screenPosition = SceneTransforms.wgs84ToWindowCoordinates(this.cesiumService.getScene(),\r\n          this.props.position);\r\n        this.setScreenPosition(screenPosition);\r\n      };\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\r\n      this.cesiumService.getScene().preRender.addEventListener(this.preRenderEventListener);\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.props.show === undefined || this.props.show) {\r\n      this.add();\r\n    } else {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.remove();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { PlonterService } from '../../services/plonter/plonter.service';\r\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\r\n\r\n@Component(\r\n  {\r\n    selector: 'ac-default-plonter',\r\n    template: `\r\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\r\n        position: plonterPosition\r\n      }\">\r\n        <div class=\"plonter-context-menu\">\r\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\r\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ac-html>\r\n    `,\r\n    styles: [`\r\n        .plonter-context-menu {\r\n            background-color: rgba(250, 250, 250, 0.8);\r\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\r\n        }\r\n\r\n        .plonter-item {\r\n            cursor: pointer;\r\n            padding: 2px 15px;\r\n            text-align: start;\r\n        }\r\n\r\n        .plonter-item:hover {\r\n            background-color: rgba(0, 0, 0, 0.15);\r\n        }\r\n\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [CoordinateConverter],\r\n  }\r\n)\r\nexport class AcDefaultPlonterComponent implements OnInit {\r\n\r\n  constructor(public plonterService: PlonterService,\r\n              private cd: ChangeDetectorRef,\r\n              private geoConverter: CoordinateConverter) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.plonterService.plonterChangeNotifier.subscribe(() => this.cd.detectChanges());\r\n  }\r\n\r\n  get plonterPosition() {\r\n    if (this.plonterService.plonterShown) {\r\n      const screenPos = this.plonterService.plonterClickPosition.endPosition;\r\n      return this.geoConverter.screenToCartesian3(screenPos);\r\n    }\r\n  }\r\n\r\n  chooseEntity(entity: any) {\r\n    this.plonterService.resolvePlonter(entity);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { BasicContextMenu } from '../../models/basic-context-menu';\r\n\r\n/**\r\n * This component is used to inject the component that is passed to the ContextMenuService when opening a context menu.\r\n * It shouldn't be used directly.\r\n *\r\n * usage:\r\n * ```typescript\r\n * // We want to open the context menu on mouse right click.\r\n * // Register to mouse right click with the MapEventsManager\r\n * this.mapEventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.NO_PICK })\r\n *    .subscribe(event => {\r\n *       const position = this.coordinateConverter.screenToCartesian3(event.movement.endPosition, true);\r\n *       if (!position) {\r\n *         return;\r\n *       }\r\n *       // Open the context menu on the position that was clicked and pass some data to MyCustomContextMenuComponent.\r\n *       this.contextMenuService.open(\r\n *         MyCustomContextMenuComponent,\r\n *         position,\r\n *         { data: { items: ['New Track', 'Change Map', 'Context Menu', 'Do Something'] } }\r\n *       )\r\n *    });\r\n *\r\n * ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-context-menu-wrapper',\r\n  template: `\r\n    <ac-html *ngIf=\"contextMenuService.showContextMenu\" [props]=\"{position: contextMenuService.position}\">\r\n      <ng-template #contextMenuContainer></ng-template>\r\n    </ac-html>\r\n  `,\r\n  styles: [],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcContextMenuWrapperComponent implements OnInit, OnDestroy {\r\n\r\n  private contextMenuChangeSubscription: Subscription;\r\n  private contextMenuOpenSubscription: Subscription;\r\n\r\n  @ViewChild('contextMenuContainer', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\r\n\r\n  constructor(public contextMenuService: ContextMenuService,\r\n              private cd: ChangeDetectorRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contextMenuChangeSubscription =\r\n      this.contextMenuService.contextMenuChangeNotifier.subscribe(() => this.cd.detectChanges());\r\n    this.contextMenuOpenSubscription =\r\n      this.contextMenuService.onOpen.subscribe(() => {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.contextMenuService.content as any);\r\n        this.viewContainerRef.clear();\r\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\r\n        (componentRef.instance as BasicContextMenu).data = this.contextMenuService.options.data;\r\n        this.cd.detectChanges();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.contextMenuChangeSubscription) {\r\n      this.contextMenuChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.contextMenuOpenSubscription) {\r\n      this.contextMenuOpenSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, Inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\nimport { SceneMode } from '../../models/scene-mode.enum';\r\nimport { CameraService } from '../../services/camera/camera.service';\r\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\r\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\r\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\r\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\r\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\r\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\r\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\r\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\r\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\r\nimport { KeyboardControlService } from '../../services/keyboard-control/keyboard-control.service';\r\nimport { CesiumEventBuilder } from '../../services/map-events-mananger/cesium-event-builder';\r\nimport { MapEventsManagerService } from '../../services/map-events-mananger/map-events-manager';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\nimport { MapsManagerService } from '../../services/maps-manager/maps-manager.service';\r\nimport { PlonterService } from '../../services/plonter/plonter.service';\r\nimport { ScreenshotService } from '../../services/screenshot/screenshot.service';\r\n\r\n/**\r\n * This is a map implementation, creates the cesium map.\r\n * Every layer should be tag inside ac-map tag\r\n *\r\n * Accessing cesium viewer:\r\n * 1. acMapComponent.getCesiumViewer()\r\n * 2. Use MapManagerService.getMap().getCesiumViewer() or if more then one map: MapManagerService.getMap(mapId).getCesiumViewer()\r\n *\r\n *\r\n * @example\r\n * <ac-map>\r\n *     <ac-map-layer-provider></ac-map-layer-provider>\r\n *     <dynamic-ellipse-layer #layer></dynamic-ellipse-layer>\r\n * </ac-map>\r\n */\r\n@Component({\r\n  selector: 'ac-map',\r\n  template: `\r\n    <ac-default-plonter *ngIf=\"!disableDefaultPlonter\"></ac-default-plonter>\r\n    <ac-context-menu-wrapper></ac-context-menu-wrapper>\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    CesiumService,\r\n    BillboardDrawerService,\r\n    CesiumEventBuilder,\r\n    KeyboardControlService,\r\n    MapEventsManagerService,\r\n    PlonterService,\r\n    LabelDrawerService,\r\n    PolylineDrawerService,\r\n    PolylinePrimitiveDrawerService,\r\n    EllipseDrawerService,\r\n    PointDrawerService,\r\n    ArcDrawerService,\r\n    CzmlDrawerService,\r\n    PolygonDrawerService,\r\n    MapLayersService,\r\n    CameraService,\r\n    ScreenshotService,\r\n    ContextMenuService,\r\n    CoordinateConverter,\r\n  ],\r\n})\r\nexport class AcMapComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\r\n  /**\r\n   * Disable default plonter context menu\r\n   */\r\n  @Input()\r\n  disableDefaultPlonter = false;\r\n\r\n  /**\r\n   * Set the id name of the map\r\n   * default: 'default-map-id-[index]'\r\n   */\r\n  @Input()\r\n  mapId: string;\r\n\r\n  /**\r\n   * flyTo options according to https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\r\n   */\r\n  @Input()\r\n  flyTo: any;\r\n\r\n  /**\r\n   * Sets the map's SceneMode\r\n   */\r\n  @Input()\r\n  sceneMode: SceneMode;\r\n\r\n  /**\r\n   * Optional - the container element's id in which the map's canvas will be appended to.\r\n   * If not supplied - the container element will be the parent element of ac-map;\r\n   */\r\n  @Input()\r\n  containerId: string;\r\n\r\n  private mapContainer: HTMLElement;\r\n\r\n  constructor(\r\n    private _cesiumService: CesiumService,\r\n    private _cameraService: CameraService,\r\n    private _elemRef: ElementRef,\r\n    @Inject(DOCUMENT) private document,\r\n    private mapsManagerService: MapsManagerService,\r\n    private billboardDrawerService: BillboardDrawerService,\r\n    private labelDrawerService: LabelDrawerService,\r\n    private ellipseDrawerService: EllipseDrawerService,\r\n    private polylineDrawerService: PolylineDrawerService,\r\n    private polygonDrawerService: PolygonDrawerService,\r\n    private arcDrawerService: ArcDrawerService,\r\n    private pointDrawerService: PointDrawerService,\r\n    private czmlDrawerService: CzmlDrawerService,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private keyboardControlService: KeyboardControlService,\r\n    private mapLayersService: MapLayersService,\r\n    private screenshotService: ScreenshotService,\r\n    public contextMenuService: ContextMenuService,\r\n    private coordinateConverter: CoordinateConverter,\r\n  ) {\r\n    this.mapContainer = this.document.createElement('div');\r\n    this.mapContainer.style.width = '100%';\r\n    this.mapContainer.style.height = '100%';\r\n    this.mapContainer.className = 'map-container';\r\n    this._cesiumService.init(this.mapContainer);\r\n    this._cameraService.init(this._cesiumService);\r\n    this.mapEventsManager.init();\r\n    this.billboardDrawerService.init();\r\n    this.labelDrawerService.init();\r\n    this.ellipseDrawerService.init();\r\n    this.polylineDrawerService.init();\r\n    this.polygonDrawerService.init();\r\n    this.arcDrawerService.init();\r\n    this.pointDrawerService.init();\r\n    this.czmlDrawerService.init();\r\n    this.keyboardControlService.init();\r\n    this.contextMenuService.init(this.mapEventsManager);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapId = this.mapsManagerService._registerMap(this.mapId, this);\r\n    if (!this.containerId) {\r\n      this._elemRef.nativeElement.appendChild(this.mapContainer);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['sceneMode']) {\r\n      this._cameraService.setSceneMode(changes['sceneMode'].currentValue);\r\n    }\r\n    if (changes['flyTo']) {\r\n      this._cameraService.cameraFlyTo(changes['flyTo'].currentValue);\r\n    }\r\n    if (changes['containerId'] && !changes['containerId'].firstChange) {\r\n      const element = this.document.getElementById(changes['containerId'].currentValue);\r\n      if (element) {\r\n        element.appendChild(this.mapContainer);\r\n      } else {\r\n        throw new Error(`No element found with id: ${changes['containerId'].currentValue}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.mapLayersService.drawAllLayers();\r\n    if (this.containerId) {\r\n      setTimeout(() => {\r\n        const element = this.document.getElementById(this.containerId);\r\n        if (element) {\r\n          element.appendChild(this.mapContainer);\r\n        } else {\r\n          throw new Error(`No element found with id: ${this.containerId}`);\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mapContainer.remove();\r\n    this.mapsManagerService._removeMapById(this.mapId);\r\n  }\r\n\r\n  /**\r\n   * @returns ac-map's cesium service\r\n   */\r\n  getCesiumService() {\r\n    return this._cesiumService;\r\n  }\r\n\r\n  /**\r\n   * @returns map's cesium viewer\r\n   */\r\n  getCesiumViewer() {\r\n    return this._cesiumService.getViewer();\r\n  }\r\n\r\n\r\n  getCameraService(): CameraService {\r\n    return this._cameraService;\r\n  }\r\n\r\n  getId() {\r\n    return this.mapId;\r\n  }\r\n\r\n\r\n  getMapContainer() {\r\n    return this.mapContainer;\r\n  }\r\n\r\n\r\n  getMapEventsManager(): MapEventsManagerService {\r\n    return this.mapEventsManager;\r\n  }\r\n\r\n  getContextMenuService(): ContextMenuService {\r\n    return this.contextMenuService;\r\n  }\r\n\r\n  getScreenshotService() {\r\n    return this.screenshotService;\r\n  }\r\n\r\n  getKeyboardControlService() {\r\n    return this.keyboardControlService;\r\n  }\r\n\r\n  getCoordinateConverter() {\r\n    return this.coordinateConverter;\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { IDescription } from '../../models/description';\r\nimport { LayerOptions } from '../../models/layer-options';\r\n\r\n@Injectable()\r\nexport class LayerService {\r\n  private _context: any;\r\n  private _options: LayerOptions;\r\n  private _show: boolean;\r\n  private _zIndex: number;\r\n  private _entityName: string;\r\n  private _cache = true;\r\n  private descriptions: IDescription[] = [];\r\n  private layerUpdate = new EventEmitter();\r\n\r\n  get cache(): boolean {\r\n    return this._cache;\r\n  }\r\n\r\n  set cache(value: boolean) {\r\n    this._cache = value;\r\n  }\r\n\r\n  get zIndex(): number {\r\n    return this._zIndex;\r\n  }\r\n\r\n  set zIndex(value: number) {\r\n    if (value !== this._zIndex) {\r\n      this.layerUpdate.emit();\r\n    }\r\n    this._zIndex = value;\r\n  }\r\n\r\n  get show(): boolean {\r\n    return this._show;\r\n  }\r\n\r\n  set show(value: boolean) {\r\n    if (value !== this._show) {\r\n      this.layerUpdate.emit();\r\n    }\r\n    this._show = value;\r\n  }\r\n\r\n  get options(): LayerOptions {\r\n    return this._options;\r\n  }\r\n\r\n  set options(value: LayerOptions) {\r\n    this._options = value;\r\n    this.layerUpdate.emit();\r\n  }\r\n\r\n  get context(): any {\r\n    return this._context;\r\n  }\r\n\r\n  set context(context) {\r\n    this._context = context;\r\n    this.layerUpdate.emit();\r\n  }\r\n\r\n  setEntityName(name: string) {\r\n    this._entityName = name;\r\n  }\r\n\r\n  getEntityName(): string {\r\n    return this._entityName;\r\n  }\r\n\r\n  registerDescription(descriptionComponent: IDescription) {\r\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\r\n      this.descriptions.push(descriptionComponent);\r\n    }\r\n  }\r\n\r\n  unregisterDescription(descriptionComponent: IDescription) {\r\n    const index = this.descriptions.indexOf(descriptionComponent);\r\n    if (index > -1) {\r\n      this.descriptions.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getDescriptions(): IDescription[] {\r\n    return this.descriptions;\r\n  }\r\n\r\n  layerUpdates(): EventEmitter<any> {\r\n    return this.layerUpdate;\r\n  }\r\n}\r\n","/**\r\n * Action to do on entity\r\n */\r\nexport enum ActionType {\r\n  ADD_UPDATE,\r\n  DELETE\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ComputationCache {\r\n  private _cache = new Map<string, any>();\r\n\r\n  get(expression: string, insertFn: (() => any)): any {\r\n    if (this._cache.has(expression)) {\r\n      return this._cache.get(expression);\r\n    }\r\n\r\n    const value = insertFn();\r\n    this._cache.set(expression, value);\r\n    return value;\r\n  }\r\n\r\n  clear() {\r\n    this._cache.clear();\r\n  }\r\n}\r\n","export class Checker {\r\n  static throwIfAnyNotPresent(values: Object, propertyNames: string[]) {\r\n    propertyNames.forEach(propertyName => Checker.throwIfNotPresent(values, propertyName));\r\n  }\r\n\r\n  static throwIfNotPresent(value: any, name: string) {\r\n    if (!Checker.present(value[name])) {\r\n      throw new Error(`Error: ${name} was not given.`);\r\n    }\r\n  }\r\n\r\n  static present(value: any) {\r\n    return value !== undefined && value !== null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PrimitiveCollection } from 'cesium';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\nimport { Checker } from '../../../../utils/checker';\r\nimport { EllipsePrimitive } from 'primitive-primitives';\r\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\r\n\r\n\r\n/**\r\n *  This drawer is responsible for creating the dynamic version of the ellipse component.\r\n *  We are using the primitive-primitives implementation of an ellipse. see: https://github.com/gotenxds/Primitive-primitives\r\n *  This allows us to change the position of the ellipses without creating a new primitive object\r\n *  as Cesium does not allow updating an ellipse.\r\n */\r\n@Injectable()\r\nexport class DynamicEllipseDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PrimitiveCollection, cesiumService);\r\n  }\r\n\r\n  add(cesiumProps: any): any {\r\n    Checker.throwIfAnyNotPresent(cesiumProps, ['center', 'semiMajorAxis', 'semiMinorAxis']);\r\n\r\n    return super.add(new EllipsePrimitive(cesiumProps));\r\n  }\r\n\r\n  update(ellipse: any, cesiumProps: any): any {\r\n    ellipse.updateLocationData(cesiumProps);\r\n\r\n    return ellipse;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PolylineCollection } from 'cesium';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible for creating the dynamic version of the polyline component.\r\n */\r\n@Injectable()\r\nexport class DynamicPolylineDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PolylineCollection, cesiumService);\r\n  }\r\n}\r\n","import { PrimitiveCollection, GeometryInstance, Primitive } from 'cesium';\r\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\n\r\n/**\r\n *\r\n * This drawer is deprecated.\r\n * General static primitives drawer responsible of drawing static Cesium primitives with material.\r\n */\r\nexport abstract class StaticPrimitiveDrawer extends PrimitivesDrawerService {\r\n  constructor(private geometryType: any, cesiumService: CesiumService) {\r\n    super(PrimitiveCollection, cesiumService);\r\n  }\r\n\r\n  add(geometryProps: any, instanceProps: any, primitiveProps: any): any {\r\n    if (Object.keys(instanceProps).length === 0) {\r\n      throw(new Error('instanceProps object is empty'));\r\n    }\r\n    instanceProps.geometry = new this.geometryType(geometryProps);\r\n    primitiveProps.geometryInstances = new GeometryInstance(instanceProps);\r\n    primitiveProps.asynchronous = false;\r\n    const primitive = new Primitive(primitiveProps);\r\n    return super.add(primitive);\r\n  }\r\n\r\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\r\n    instanceProps.geometry = new this.geometryType(geometryProps);\r\n    primitiveProps.geometryInstances = new GeometryInstance(instanceProps);\r\n    this._cesiumCollection.remove(primitive);\r\n    return super.add(new Primitive(primitiveProps));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CircleGeometry } from 'cesium';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible for creating the static version of the circle component.\r\n */\r\n@Injectable()\r\nexport class StaticCircleDrawerService extends StaticPrimitiveDrawer {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(CircleGeometry, cesiumService);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PolylineGeometry } from 'cesium';\r\nimport { when } from 'when';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible for creating the static version of the polyline component.\r\n *  This also allows us to change the color of the polylines.\r\n */\r\n@Injectable()\r\nexport class StaticPolylineDrawerService extends StaticPrimitiveDrawer {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PolylineGeometry, cesiumService);\r\n  }\r\n\r\n  /**\r\n   * Update function can only change the primitive color.\r\n   */\r\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\r\n    const color = instanceProps.attributes.color.value;\r\n\r\n    if (primitive.ready) {\r\n      primitive.getGeometryInstanceAttributes().color = color;\r\n    } else {\r\n      when(primitive.readyPromise).then((readyPrimitive: any) => {\r\n        readyPrimitive.getGeometryInstanceAttributes().color.value = color;\r\n      });\r\n    }\r\n\r\n    return primitive;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PolygonGeometry } from 'cesium';\r\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\n\r\n/**\r\n + This drawer is responsible for drawing a polygon over the Cesium map.\r\n + This implementation uses simple PolygonGeometry and Primitive parameters.\r\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\r\n */\r\n@Injectable()\r\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PolygonGeometry, cesiumService);\r\n  }\r\n}\r\n","import { CesiumService } from '../../../cesium/cesium.service';\r\nimport { EllipseGeometry } from 'cesium';\r\nimport { Injectable } from '@angular/core';\r\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\r\n\r\n\r\n/**\r\n + *  This drawer is responsible for drawing an ellipse over the Cesium map.\r\n + *  This implementation uses simple EllipseGeometry and Primitive parameters.\r\n + *  This doesn't allow us to change the position, color, etc.. of the ellipses. For that you may use the dynamic ellipse component.\r\n + */\r\n@Injectable()\r\nexport class StaticEllipseDrawerService extends StaticPrimitiveDrawer {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(EllipseGeometry, cesiumService);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing models.\r\n */\r\n@Injectable()\r\nexport class ModelDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing box.\r\n */\r\n@Injectable()\r\nexport class BoxDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.box);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing corridors .\r\n */\r\n@Injectable()\r\nexport class CorridorDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.corridor);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing cylinders.\r\n */\r\n@Injectable()\r\nexport class CylinderDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.cylinder);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing ellipsoid.\r\n */\r\n@Injectable()\r\nexport class EllipsoidDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.ellipsoid);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing polylines.\r\n */\r\n@Injectable()\r\nexport class PolylineVolumeDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.polylineVolume);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing polygons.\r\n */\r\n@Injectable()\r\nexport class WallDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.wall);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\r\n\r\n/**\r\n *  This drawer is responsible for drawing rectangles.\r\n */\r\n@Injectable()\r\nexport class RectangleDrawerService extends EntitiesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(cesiumService, GraphicsType.rectangle);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LabelCollection } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible for drawing labels as primitives.\r\n *  This drawer is more efficient than LabelDrawerService when drawing dynamic labels.\r\n */\r\n@Injectable()\r\nexport class LabelPrimitiveDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(LabelCollection, cesiumService);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BillboardCollection} from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible for drawing billboards as primitives.\r\n *  This drawer is more efficient than BillboardDrawerService when drawing dynamic billboards.\r\n */\r\n@Injectable()\r\nexport class BillboardPrimitiveDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(BillboardCollection, cesiumService);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PointPrimitiveCollection } from 'cesium';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\n\r\n/**\r\n *  This drawer is responsible of drawing points as primitives.\r\n *  This drawer is more efficient than PointDrawerService when drawing dynamic points.\r\n */\r\n@Injectable()\r\nexport class PointPrimitiveDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(PointPrimitiveCollection, cesiumService);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\ndeclare var Cesium: any;\r\n\r\n@Injectable()\r\nexport class HtmlDrawerService extends PrimitivesDrawerService {\r\n  constructor(private _cesiumService: CesiumService) {\r\n    super(Cesium.HtmlCollection, _cesiumService);\r\n  }\r\n\r\n  add(cesiumProps: any): any {\r\n    cesiumProps.scene = this._cesiumService.getScene();\r\n    // cesiumProps.mapContainer = this._cesiumService.getMap().getMapContainer();\r\n    cesiumProps.mapContainer = this._cesiumService.getMapContainer();\r\n    return super.add(cesiumProps);\r\n  }\r\n}\r\n","import { from as observableFrom, merge as observableMerge, Observable, Subject } from 'rxjs';\r\n\r\nimport { takeUntil } from 'rxjs/operators';\r\n// tslint:disable\r\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\r\nimport { AfterContentInit, ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { AcNotification } from '../../models/ac-notification';\r\nimport { ActionType } from '../../models/action-type.enum';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\r\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\r\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\r\nimport { AcEntity } from '../../models/ac-entity';\r\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\r\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\r\nimport { LayerOptions } from '../../models/layer-options';\r\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\r\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\r\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\r\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\r\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\r\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\r\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\r\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\r\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\r\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\r\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\r\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\r\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\r\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\r\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\r\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\r\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\r\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\r\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\r\n\r\n// tslint:enable\r\n/**\r\n *  This is a ac-layer implementation.\r\n *  The ac-layer element must be a child of ac-map element.\r\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\r\n *  + show `{boolean}` - show/hide layer's entities.\r\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\r\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\r\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\r\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\r\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\r\n *  + debug `{boolean}` - prints every acNotification\r\n *\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *  <ac-map>\r\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\r\n *      <ac-billboard-desc props=\"{\r\n *        image: track.image,\r\n *        position: track.position,\r\n *        scale: track.scale,\r\n *        color: track.color,\r\n *        name: track.name\r\n *      }\">\r\n *      </ac-billboard-desc>\r\n *        <ac-label-desc props=\"{\r\n *          position: track.position,\r\n *          pixelOffset : [-15,20] | pixelOffset,\r\n *          text: track.name,\r\n *          font: '15px sans-serif'\r\n *        }\">\r\n *      </ac-label-desc>\r\n *    </ac-layer>\r\n *  </ac-map>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-layer',\r\n  template: '<ng-content></ng-content>',\r\n  providers: [\r\n    LayerService,\r\n    ComputationCache,\r\n    BillboardDrawerService,\r\n    LabelDrawerService,\r\n    EllipseDrawerService,\r\n    PolylineDrawerService,\r\n    ArcDrawerService,\r\n    PointDrawerService,\r\n    PolygonDrawerService,\r\n    ModelDrawerService,\r\n    BoxDrawerService,\r\n    CorridorDrawerService,\r\n    CylinderDrawerService,\r\n    EllipsoidDrawerService,\r\n    PolylineVolumeDrawerService,\r\n    WallDrawerService,\r\n    RectangleDrawerService,\r\n    PolylinePrimitiveDrawerService,\r\n    LabelPrimitiveDrawerService,\r\n    BillboardPrimitiveDrawerService,\r\n    PointPrimitiveDrawerService,\r\n    HtmlDrawerService,\r\n    CzmlDrawerService,\r\n\r\n    DynamicEllipseDrawerService,\r\n    DynamicPolylineDrawerService,\r\n    StaticCircleDrawerService,\r\n    StaticPolylineDrawerService,\r\n    StaticPolygonDrawerService,\r\n    StaticEllipseDrawerService,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\r\n  @Input()\r\n  show = true;\r\n  @Input()\r\n  acFor: string;\r\n  @Input()\r\n  context: any;\r\n  @Input()\r\n  store = false;\r\n  @Input()\r\n  options: LayerOptions;\r\n  @Input()\r\n  zIndex = 0;\r\n  @Input()\r\n  debug = false;\r\n\r\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\r\n  private entityName: string;\r\n  private stopObservable = new Subject<any>();\r\n  private observable: Observable<AcNotification>;\r\n  private _drawerList: Map<string, BasicDrawerService>;\r\n  private _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\r\n  private entitiesStore = new Map<string, any>();\r\n  private layerDrawerDataSources: any[] = [];\r\n\r\n  constructor(private layerService: LayerService,\r\n              private _computationCache: ComputationCache,\r\n              private mapLayersService: MapLayersService,\r\n              billboardDrawerService: BillboardDrawerService,\r\n              labelDrawerService: LabelDrawerService,\r\n              ellipseDrawerService: EllipseDrawerService,\r\n              polylineDrawerService: PolylineDrawerService,\r\n              polygonDrawerService: PolygonDrawerService,\r\n              arcDrawerService: ArcDrawerService,\r\n              pointDrawerService: PointDrawerService,\r\n              modelDrawerService: ModelDrawerService,\r\n              boxDrawerService: BoxDrawerService,\r\n              corridorDrawerService: CorridorDrawerService,\r\n              cylinderDrawerService: CylinderDrawerService,\r\n              ellipsoidDrawerSerice: EllipsoidDrawerService,\r\n              polylineVolumeDrawerService: PolylineVolumeDrawerService,\r\n              wallDrawerService: WallDrawerService,\r\n              rectangleDrawerService: RectangleDrawerService,\r\n              dynamicEllipseDrawerService: DynamicEllipseDrawerService,\r\n              dynamicPolylineDrawerService: DynamicPolylineDrawerService,\r\n              staticCircleDrawerService: StaticCircleDrawerService,\r\n              staticPolylineDrawerService: StaticPolylineDrawerService,\r\n              staticPolygonDrawerService: StaticPolygonDrawerService,\r\n              staticEllipseDrawerService: StaticEllipseDrawerService,\r\n              polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\r\n              labelPrimitiveDrawerService: LabelPrimitiveDrawerService,\r\n              billboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\r\n              pointPrimitiveDrawerService: PointPrimitiveDrawerService,\r\n              htmlDrawerService: HtmlDrawerService,\r\n              czmlDrawerService: CzmlDrawerService\r\n  ) {\r\n    this._drawerList = new Map([\r\n      ['billboard', billboardDrawerService],\r\n      ['label', labelDrawerService],\r\n      ['ellipse', ellipseDrawerService],\r\n      ['polyline', polylineDrawerService],\r\n      ['polygon', polygonDrawerService as BasicDrawerService],\r\n      ['arc', arcDrawerService],\r\n      ['point', pointDrawerService],\r\n      ['model', modelDrawerService],\r\n      ['box', boxDrawerService],\r\n      ['corridor', corridorDrawerService],\r\n      ['cylinder', cylinderDrawerService],\r\n      ['ellipsoid', ellipsoidDrawerSerice],\r\n      ['polylineVolume', polylineVolumeDrawerService],\r\n      ['rectangle', rectangleDrawerService],\r\n      ['wall', wallDrawerService],\r\n      ['polylinePrimitive', polylinePrimitiveDrawerService],\r\n      ['labelPrimitive', labelPrimitiveDrawerService],\r\n      ['billboardPrimitive', billboardPrimitiveDrawerService],\r\n      ['pointPrimitive', pointPrimitiveDrawerService],\r\n      ['html', htmlDrawerService],\r\n      ['czml', czmlDrawerService],\r\n\r\n      ['dynamicEllipse', dynamicEllipseDrawerService],\r\n      ['dynamicPolyline', dynamicPolylineDrawerService],\r\n      ['staticCircle', staticCircleDrawerService],\r\n      ['staticPolyline', staticPolylineDrawerService],\r\n      ['staticPolygon', staticPolygonDrawerService],\r\n      ['staticEllipse', staticEllipseDrawerService],\r\n    ]);\r\n  }\r\n\r\n  init() {\r\n    this.initValidParams();\r\n\r\n    observableMerge(this._updateStream, this.observable).pipe<AcNotification>(takeUntil(this.stopObservable)).subscribe((notification) => {\r\n      this._computationCache.clear();\r\n\r\n      if (this.debug) {\r\n        console.log('AcLayer received notification:', notification);\r\n      }\r\n\r\n      let contextEntity = notification.entity;\r\n      if (this.store) {\r\n        contextEntity = this.updateStore(notification);\r\n      }\r\n\r\n      this.context[this.entityName] = contextEntity;\r\n      this.layerService.getDescriptions().forEach((descriptionComponent) => {\r\n        switch (notification.actionType) {\r\n          case ActionType.ADD_UPDATE:\r\n            descriptionComponent.draw(this.context, notification.id, contextEntity);\r\n            break;\r\n          case ActionType.DELETE:\r\n            descriptionComponent.remove(notification.id);\r\n            break;\r\n          default:\r\n            console.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private updateStore(notification: AcNotification): any {\r\n    if (notification.actionType === ActionType.DELETE) {\r\n      this.entitiesStore.delete(notification.id);\r\n      return undefined;\r\n    } else {\r\n      if (this.entitiesStore.has(notification.id)) {\r\n        const entity = this.entitiesStore.get(notification.id);\r\n        Object.assign(entity, notification.entity);\r\n        return entity;\r\n      } else {\r\n        this.entitiesStore.set(notification.id, notification.entity);\r\n        return notification.entity;\r\n      }\r\n    }\r\n  }\r\n\r\n  private initValidParams() {\r\n    if (!this.context) {\r\n      throw new Error('ac-layer: must initialize [context] ');\r\n    }\r\n\r\n    if (!this.acForRgx.test(this.acFor)) {\r\n      throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\r\n    }\r\n    const acForArr = this.acFor.split(' ');\r\n    this.observable = this.context[acForArr[3]];\r\n    this.entityName = acForArr[1];\r\n    if (!this.isObservable(this.observable)) {\r\n      throw new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\r\n    }\r\n\r\n    this.layerService.context = this.context;\r\n    this.layerService.setEntityName(this.entityName);\r\n  }\r\n\r\n  /** Test for a rxjs Observable */\r\n  private isObservable(obj: any): boolean {\r\n    /* check via duck-typing rather than instance of\r\n     * to allow passing between window contexts */\r\n    return obj && typeof obj.subscribe === 'function';\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.layerService.context = this.context;\r\n    this.layerService.options = this.options;\r\n    this.layerService.show = this.show;\r\n    this.layerService.zIndex = this.zIndex;\r\n    this._drawerList.forEach((drawer, drawerName) => {\r\n      const initOptions = this.options ? this.options[drawerName] : undefined;\r\n      const drawerDataSources = drawer.init(initOptions);\r\n      // only entities drawers create data sources\r\n      if (drawerDataSources) {\r\n        // this.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\r\n        // TODO: Check if the following line causes Bad Performance\r\n        this.layerDrawerDataSources.push(...drawerDataSources);\r\n      }\r\n      drawer.setShow(this.show);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.show && !changes.show.firstChange) {\r\n      const showValue = changes['show'].currentValue;\r\n      this.layerService.show = showValue;\r\n      this._drawerList.forEach((drawer) => drawer.setShow(showValue));\r\n    }\r\n\r\n    if (changes.zIndex && !changes.zIndex.firstChange) {\r\n      const zIndexValue = changes['zIndex'].currentValue;\r\n      this.layerService.zIndex = zIndexValue;\r\n      this.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mapLayersService.removeDataSources(this.layerDrawerDataSources);\r\n    this.stopObservable.next(true);\r\n    this.removeAll();\r\n  }\r\n\r\n  getLayerService(): LayerService {\r\n    return this.layerService;\r\n  }\r\n\r\n  /**\r\n   * Returns an array of DataSources registered by a drawer of this layer\r\n   * @return Array of Cesium.DataSources\r\n   */\r\n  getLayerDrawerDataSources(): any[] {\r\n    return this.layerDrawerDataSources;\r\n  }\r\n\r\n  /**\r\n   * Returns an Array of DataSources of the drawer with the provided DataSource.name\r\n   * Example: getDataSourceOfDrawer('polyline') returns the dataSource of polyline drawer\r\n   * @return Array of Cesium.DataSources\r\n   */\r\n  getDrawerDataSourcesByName(name: string): any[] {\r\n    return this.layerDrawerDataSources.filter(d => d.name === name);\r\n  }\r\n\r\n  /**\r\n   * Returns the store.\r\n   */\r\n  getStore(): Map<string, any> {\r\n    return this.entitiesStore;\r\n  }\r\n\r\n  /**\r\n   * Remove all the entities from the layer.\r\n   */\r\n  removeAll(): void {\r\n    this.layerService.getDescriptions().forEach((description) => description.removeAll());\r\n    this.entitiesStore.clear();\r\n  }\r\n\r\n  /**\r\n   * remove entity from the layer\r\n   */\r\n  remove(entityId: string) {\r\n    this._updateStream.next({id: entityId, actionType: ActionType.DELETE});\r\n    this.entitiesStore.delete(entityId);\r\n  }\r\n\r\n  /**\r\n   * add/update entity to/from the layer\r\n   */\r\n  updateNotification(notification: AcNotification): void {\r\n    this._updateStream.next(notification);\r\n  }\r\n\r\n  /**\r\n   * add/update entity to/from the layer\r\n   */\r\n  update(entity: AcEntity, id: string): void {\r\n    this._updateStream.next({entity, id, actionType: ActionType.ADD_UPDATE});\r\n  }\r\n\r\n  refreshAll(collection: AcNotification[]): void {\r\n    // TODO make entity interface: collection of type entity not notification\r\n    observableFrom(collection).subscribe((entity) => this._updateStream.next(entity));\r\n  }\r\n}\r\n","import { Input, OnChanges, OnDestroy, OnInit, SimpleChanges, Directive } from '@angular/core';\r\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\r\nimport { MapLayersService } from '../map-layers/map-layers.service';\r\n\r\n/**\r\n *  Extend this class to create drawing on map components.\r\n */\r\n@Directive()\r\nexport class EntityOnMapComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input()\r\n  props: any;\r\n\r\n  protected selfPrimitive: any;\r\n  protected selfPrimitiveIsDraw: boolean;\r\n  protected dataSources: any;\r\n\r\n  constructor(protected _drawer: BasicDrawerService, private mapLayers: MapLayersService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selfPrimitiveIsDraw = false;\r\n    const dataSources = this._drawer.init();\r\n    if (dataSources) {\r\n      this.dataSources = dataSources;\r\n      // this.mapLayers.registerLayerDataSources(dataSources, 0);\r\n    }\r\n    this.drawOnMap();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const props = changes['props'];\r\n    if (props.currentValue !== props.previousValue) {\r\n      this.updateOnMap();\r\n    }\r\n  }\r\n\r\n  drawOnMap() {\r\n    this.selfPrimitiveIsDraw = true;\r\n    return this.selfPrimitive = this._drawer.add(this.props);\r\n  }\r\n\r\n  removeFromMap() {\r\n    this.selfPrimitiveIsDraw = false;\r\n    return this._drawer.remove(this.selfPrimitive);\r\n  }\r\n\r\n  updateOnMap() {\r\n    if (this.selfPrimitiveIsDraw) {\r\n      return this._drawer.update(this.selfPrimitive, this.props);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mapLayers.removeDataSources(this.dataSources);\r\n    this.removeFromMap();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is a billboard implementation.\r\n *  The element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-billboard [props]=\"{\r\n *      image: image,\r\n *      position: position,\r\n *      scale: scale,\r\n *      color: color,\r\n *      name: name\r\n *    }\">;\r\n *    </ac-billboard>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-billboard',\r\n  template: '',\r\n})\r\nexport class AcBillboardComponent extends EntityOnMapComponent {\r\n\r\n  constructor(billboardDrawer: BillboardDrawerService, mapLayers: MapLayersService) {\r\n    super(billboardDrawer, mapLayers);\r\n  }\r\n}\r\n","/**\r\n * Service for effective assignment.\r\n */\r\nexport class SmartAssigner {\r\n\r\n  static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\r\n    let fnBody = ``;\r\n\r\n    props.forEach(prop => {\r\n      if (!allowUndefined) {\r\n        // tslint:disable-next-line:max-line-length\r\n        fnBody += `if (!(obj1['${prop}'] instanceof Cesium.CallbackProperty) && obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\r\n      } else {\r\n        fnBody += `if(!(obj1['${prop}'] instanceof Cesium.CallbackProperty))obj1['${prop}'] = obj2['${prop}']; `;\r\n      }\r\n    });\r\n\r\n    fnBody += `return obj1`;\r\n    const assignFn = new Function('obj1', 'obj2', fnBody);\r\n\r\n    return function smartAssigner(obj1: Object, obj2: Object) {\r\n      return assignFn(obj1, obj2);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JsonStringMapper } from 'json-string-mapper';\r\n\r\n@Injectable()\r\nexport class JsonMapper {\r\n  private _mapper: JsonStringMapper;\r\n\r\n  constructor() {\r\n    this._mapper = new JsonStringMapper();\r\n  }\r\n\r\n  map(expression: string): Map<string, string> {\r\n    return this._mapper.map(expression);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JsonMapper } from '../json-mapper/json-mapper.service';\r\nimport { Parse } from '@auscope/angular2parse';\r\nimport { SmartAssigner } from '../smart-assigner/smart-assigner.service';\r\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\r\n\r\n@Injectable()\r\nexport class CesiumProperties {\r\n  private _assignersCache = new Map<string, (oldVal: Object, newVal: Object) => Object>();\r\n  private _evaluatorsCache = new Map<string, (cache: ComputationCache, context: Object) => Object>();\r\n\r\n  constructor(private _parser: Parse,\r\n              private _jsonMapper: JsonMapper) {\r\n  }\r\n\r\n  _compile(expression: string, withCache = true): (cache: ComputationCache, context: Object) => Object {\r\n    const cesiumDesc = {};\r\n    const propsMap = new Map<string, { expression: string, get: Function }>();\r\n\r\n    const resultMap = this._jsonMapper.map(expression);\r\n\r\n    resultMap.forEach((resultExpression, prop) => propsMap.set(prop, {\r\n      expression: resultExpression,\r\n      get: this._parser.eval(resultExpression)\r\n    }));\r\n\r\n    propsMap.forEach((value, prop) => {\r\n      if (withCache) {\r\n        cesiumDesc[prop || 'undefined'] = `cache.get(\\`${value.expression}\\`, () => propsMap.get('${prop}').get(context))`;\r\n      } else {\r\n        cesiumDesc[prop || 'undefined'] = `propsMap.get('${prop}').get(context)`;\r\n      }\r\n    });\r\n\r\n    const fnBody = `return ${JSON.stringify(cesiumDesc).replace(/\"/g, '')};`;\r\n    const getFn = new Function('propsMap', 'cache', 'context', fnBody);\r\n\r\n    return function evaluateCesiumProps(cache: ComputationCache, context: Object): Object {\r\n      return getFn(propsMap, cache, context);\r\n    };\r\n  }\r\n\r\n  _build(expression: string): (oldVal: Object, newVal: Object) => Object {\r\n    const props = Array.from(this._jsonMapper.map(expression).keys());\r\n    const smartAssigner = SmartAssigner.create(props);\r\n\r\n    return function assignCesiumProps(oldVal: Object, newVal: Object) {\r\n      return smartAssigner(oldVal, newVal);\r\n    };\r\n  }\r\n\r\n  createEvaluator(expression: string, withCache = true, newEvaluator = false): (cache: ComputationCache, context: Object) => Object {\r\n    if (!newEvaluator && this._evaluatorsCache.has(expression)) {\r\n      return this._evaluatorsCache.get(expression);\r\n    }\r\n\r\n    const evaluatorFn = this._compile(expression, withCache);\r\n    this._evaluatorsCache.set(expression, evaluatorFn);\r\n\r\n    return evaluatorFn;\r\n  }\r\n\r\n  createAssigner(expression: string): (oldVal: Object, newVal: Object) => Object {\r\n    if (this._assignersCache.has(expression)) {\r\n      return this._assignersCache.get(expression);\r\n    }\r\n\r\n    const assignFn = this._build(expression);\r\n    this._assignersCache.set(expression, assignFn);\r\n\r\n    return assignFn;\r\n  }\r\n}\r\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, Directive } from '@angular/core';\r\nimport { LayerService } from '../layer-service/layer-service.service';\r\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\r\nimport { AcEntity } from '../../models/ac-entity';\r\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\r\nimport { IDescription } from '../../models/description';\r\n\r\nexport interface OnDrawParams {\r\n  acEntity: AcEntity;\r\n  entityId: string;\r\n  cesiumEntity: any;\r\n}\r\n\r\n/**\r\n *  the ancestor class for creating components.\r\n *  extend this class to create desc component.\r\n */\r\n@Directive()\r\nexport class BasicDesc implements OnInit, OnDestroy, IDescription {\r\n  @Input()\r\n  props: any;\r\n\r\n  @Output()\r\n  onDraw: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\r\n\r\n  @Output()\r\n  onRemove: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\r\n\r\n  protected _cesiumObjectsMap: Map<string, any> = new Map<string, any>();\r\n  private _propsEvaluateFn: Function;\r\n  private _propsAssignerFn: Function;\r\n\r\n  constructor(protected _drawer: BasicDrawerService,\r\n              protected _layerService: LayerService,\r\n              protected _computationCache: ComputationCache,\r\n              protected _cesiumProperties: CesiumProperties) {\r\n  }\r\n\r\n  protected _propsEvaluator(context: Object): any {\r\n    return this._propsEvaluateFn(this._computationCache, context);\r\n  }\r\n\r\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\r\n    return (cesiumObject: Object, desc: Object) => this._propsAssignerFn(cesiumObject, desc);\r\n  }\r\n\r\n  getLayerService(): LayerService {\r\n    return this._layerService;\r\n  }\r\n\r\n  setLayerService(layerService: LayerService) {\r\n    this._layerService.unregisterDescription(this);\r\n    this._layerService = layerService;\r\n    this._layerService.registerDescription(this);\r\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);\r\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.props) {\r\n      console.error('ac-desc components error: [props] input is mandatory');\r\n    }\r\n\r\n    this._layerService.registerDescription(this);\r\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);\r\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\r\n  }\r\n\r\n  public getCesiumObjectsMap(): Map<string, any> {\r\n    return this._cesiumObjectsMap;\r\n  }\r\n\r\n  draw(context: any, id: string, entity: AcEntity): void {\r\n    const cesiumProps = this._propsEvaluator(context);\r\n\r\n    if (!this._cesiumObjectsMap.has(id)) {\r\n      const cesiumObject = this._drawer.add(cesiumProps);\r\n      this.onDraw.emit({\r\n        acEntity: entity,\r\n        cesiumEntity: cesiumObject,\r\n        entityId: id,\r\n      });\r\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\r\n      this._cesiumObjectsMap.set(id, cesiumObject);\r\n    } else {\r\n      const cesiumObject = this._cesiumObjectsMap.get(id);\r\n      this.onDraw.emit({\r\n        acEntity: entity,\r\n        cesiumEntity: cesiumObject,\r\n        entityId: id,\r\n      });\r\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\r\n      this._drawer.setPropsAssigner(this._getPropsAssigner());\r\n      this._drawer.update(cesiumObject, cesiumProps);\r\n    }\r\n  }\r\n\r\n  remove(id: string) {\r\n    const cesiumObject = this._cesiumObjectsMap.get(id);\r\n    if (cesiumObject) {\r\n      this.onRemove.emit({\r\n        acEntity: cesiumObject.acEntity,\r\n        cesiumEntity: cesiumObject,\r\n        entityId: id,\r\n      });\r\n      this._drawer.remove(cesiumObject);\r\n      this._cesiumObjectsMap.delete(id);\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this._cesiumObjectsMap.clear();\r\n    this._drawer.removeAll();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._layerService.unregisterDescription(this);\r\n    this.removeAll();\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\n\r\n/**\r\n *  This is a billboard implementation.\r\n *  The element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-billboard-desc props=\"{\r\n *      image: track.image,\r\n *      position: track.position,\r\n *      scale: track.scale,\r\n *      color: track.color,\r\n *      name: track.name\r\n *    }\">\r\n *    </ac-billboard-desc>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-billboard-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardDescComponent)}],\r\n})\r\nexport class AcBillboardDescComponent extends BasicDesc {\r\n\r\n  constructor(billboardDrawer: BillboardDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(billboardDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\n\r\n/**\r\n *  This is an ellipse implementation.\r\n *  The element must be a child of ac-layer element.\r\n *  _Set `height` prop for performance enhancement_\r\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-ellipse-desc props=\"{\r\n *      position: data.position,\r\n *      semiMajorAxis:250000.0,\r\n *      semiMinorAxis:400000.0,\r\n *      height: 0\r\n *    }\">\r\n *    </ac-ellipse-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-ellipse-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipseDescComponent)}],\r\n})\r\nexport class AcEllipseDescComponent extends BasicDesc {\r\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\n\r\n/**\r\n *  This is a polyline implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Entity and PolylineGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-polyline-desc props=\"{\r\n *      width : polyline.width,\r\n *      positions: polyline.positions,\r\n *      material: polyline.material\r\n *    }\">\r\n *    </ac-polyline-desc>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ac-polyline-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylineDescComponent)}],\r\n})\r\nexport class AcPolylineDescComponent extends BasicDesc {\r\n\r\n  constructor(dynamicPolylineDrawerService: PolylineDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Cartesian2 } from 'cesium';\r\n\r\n/**\r\n * @example\r\n * <ac-label-desc props=\"{\r\n *            position: track.position,\r\n *            pixelOffset : [-15,20] | pixelOffset,\r\n *            text: track.name,\r\n *            font: '15px sans-serif'\r\n *    }\">\r\n * </ac-label-desc>\r\n */\r\n@Pipe({\r\n  name: 'pixelOffset'\r\n})\r\nexport class PixelOffsetPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return new Cartesian2(value[0], value[1]);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'radiansToDegrees'\r\n})\r\nexport class RadiansToDegreesPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): number {\r\n    return (360 - Math.round(180 * value / Math.PI)) % 360;\r\n  }\r\n\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\r\n\r\n/**\r\n *  This is a label implementation.\r\n *  The ac-label element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-label-desc props=\"{\r\n *      position: track.position,\r\n *      pixelOffset : [-15,20] | pixelOffset,\r\n *      text: track.name,\r\n *      font: '15px sans-serif'\r\n *    }\">\r\n *    </ac-label-desc>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-label-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelDescComponent)}],\r\n})\r\nexport class AcLabelDescComponent extends BasicDesc {\r\n\r\n  constructor(labelDrawer: LabelDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(labelDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: []\r\n})\r\nexport class UtilsModule {\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\n\r\n/**\r\n *  This is a circle implementation.\r\n *  The element must be a child of ac-layer element.\r\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\r\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\r\n *\r\n *__Usage :__\r\n *  ```\r\n *    <ac-circle-desc props=\"{\r\n *      position: data.position,\r\n *      radius: 5\r\n *      granularity:0.08 // Optional\r\n *    }\">\r\n *    </ac-circle-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-circle-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCircleDescComponent)}],\r\n})\r\nexport class AcCircleDescComponent extends BasicDesc {\r\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n\r\n  protected _propsEvaluator(context: Object): any {\r\n    const cesiumProps = super._propsEvaluator(context);\r\n\r\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\r\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\r\n    delete cesiumProps.radius;\r\n\r\n    return cesiumProps;\r\n  }\r\n\r\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\r\n    return (cesiumObject: Object, desc: Object) => Object.assign(cesiumObject, desc);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\n\r\n/**\r\n *  This is an implementation of an arc.\r\n *  The element must be a child of ac-layer element.\r\n *  An arc is not cesium natively implemented and therefore it's API doesn't appear anywhere\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-arc-desc props=\"{\r\n *          center: arc.center,\r\n *          angle: arc.angle,\r\n *          delta: arc.delta,\r\n *          radius: arc.radius,\r\n *          color : arc.color - The color should be Cesium.Color type\r\n *    }\">\r\n *    </ac-arc-desc>\r\n *    ```\r\n *\r\n *    description of the props :\r\n *    center - The arc is a section of an outline of a circle, This is the center of the circle\r\n *    angle - the initial angle of the arc in radians\r\n *    delta - the spreading of the arc,\r\n *    radius - the distance from the center to the arc\r\n *\r\n *    for example :\r\n *    angle - 0\r\n *    delta - π\r\n *\r\n *    will draw an half circle\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-arc-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcArcDescComponent)}],\r\n})\r\nexport class AcArcDescComponent extends BasicDesc {\r\n\r\n  constructor(arcDrawer: ArcDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(arcDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n\r\n}\r\n","/**\r\n * Angular Cesium parent entity, all entities should inherit from it.\r\n * ```typescript\r\n * entity= new AcEntity({\r\n *  \tid: 0,\r\n *  \tname: 'click me',\r\n *  \tposition: Cartesian3.fromRadians(0.5, 0.5),\r\n * });\r\n * ```\r\n */\r\nexport class AcEntity {\r\n\r\n  /**\r\n   * Creates entity from a json\r\n   * @param json entity object\r\n   * @returns entity as AcEntity\r\n   */\r\n  static create(json?: any) {\r\n    if (json) {\r\n      return Object.assign(new AcEntity(), json);\r\n    }\r\n    return new AcEntity();\r\n  }\r\n\r\n  /**\r\n   * Creates entity from a json\r\n   * @param json (Optional) entity object\r\n   */\r\n  constructor(json?: any) {\r\n    Object.assign(this, json);\r\n  }\r\n}\r\n","import { ActionType } from './action-type.enum';\r\nimport { AcEntity } from './ac-entity';\r\n\r\n/**\r\n * Interface of  Angular2Cesium notification.\r\n * ac-layer receives an observer of AcNotifications\r\n */\r\nexport interface AcNotification {\r\n  id: string;\r\n  entity?: AcEntity;\r\n  actionType: ActionType;\r\n}\r\n\r\nexport class AcNotification {\r\n  id: string;\r\n  entity?: AcEntity;\r\n  actionType: ActionType;\r\n}\r\n","import * as Cesium from 'cesium';\r\n\r\nexport class MapLayerProviderOptions {\r\n  static ArcGisMapServer = Cesium.ArcGisMapServerImageryProvider;\r\n  static WebMapTileService = Cesium.WebMapTileServiceImageryProvider;\r\n  static MapTileService = Cesium.TileMapServiceImageryProvider;\r\n  static WebMapService = Cesium.WebMapServiceImageryProvider;\r\n  static SingleTileImagery = Cesium.SingleTileImageryProvider;\r\n  static OpenStreetMap = Cesium.OpenStreetMapImageryProvider;\r\n  static BingMaps = Cesium.BingMapsImageryProvider;\r\n  static GoogleEarthEnterpriseMaps = Cesium.GoogleEarthEnterpriseMapsProvider;\r\n  static MapBox = Cesium.MapboxImageryProvider;\r\n  static MapboxStyleImageryProvider = Cesium.MapboxStyleImageryProvider;\r\n  static UrlTemplateImagery = Cesium.UrlTemplateImageryProvider;\r\n  static OFFLINE = null;\r\n}\r\n","import * as Cesium from 'cesium';\r\n\r\nexport class MapTerrainProviderOptions {\r\n  static CesiumTerrain = Cesium.CesiumTerrainProvider;\r\n  static ArcGISTiledElevation = Cesium.ArcGISTiledElevationTerrainProvider;\r\n  static GoogleEarthEnterprise = Cesium.GoogleEarthEnterpriseTerrainProvider;\r\n  static VRTheWorld = Cesium.VRTheWorldTerrainProvider;\r\n  static Ellipsoid = Cesium.EllipsoidTerrainProvider;\r\n  static WorldTerrain = Cesium.createWorldTerrain;\r\n}\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { buildModuleUrl } from 'cesium';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\nimport { Checker } from '../../utils/checker';\r\nimport { MapLayerProviderOptions } from '../../models';\r\ndeclare var Cesium: any;\r\n\r\n/**\r\n *  This component is used for adding a map provider service to the map (ac-map)\r\n *  options according to selected map provider MapLayerProviderOptions enum.\r\n *  additional setting can be done with cesium imageryLayer (exposed as class member)\r\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayer.html\r\n *  and: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayerCollection.html\r\n *\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\r\n *    </ac-map-layer-provider>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-map-layer-provider',\r\n  template: '',\r\n})\r\nexport class AcMapLayerProviderComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /**\r\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\r\n   */\r\n  @Input()\r\n  options: { url?: string } = {};\r\n\r\n  /**\r\n   * the provider\r\n   */\r\n  @Input()\r\n  provider: any = MapLayerProviderOptions.OFFLINE;\r\n\r\n  /**\r\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\r\n   */\r\n  @Input()\r\n  index: Number;\r\n\r\n  /**\r\n   * show (optional) - Determines if the map layer is shown.\r\n   */\r\n  @Input()\r\n  show = true;\r\n\r\n  /**\r\n   * The alpha blending value of this layer: 0.0 to 1.0\r\n   */\r\n  @Input()\r\n  alpha = 1.0;\r\n\r\n  /**\r\n   * The brightness of this layer: 0.0 to 1.0\r\n   */\r\n  @Input()\r\n  brightness = 1.0;\r\n\r\n  /**\r\n   * The contrast of this layer: 0.0 to 1.0\r\n   */\r\n  @Input()\r\n  contrast = 1.0;\r\n\r\n  public imageryLayer: any;\r\n  public imageryLayersCollection: any;\r\n  public layerProvider: any;\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n    this.imageryLayersCollection = this.cesiumService.getScene().imageryLayers;\r\n  }\r\n\r\n  private createOfflineMapProvider() {\r\n    return Cesium.createTileMapServiceImageryProvider({\r\n      url: buildModuleUrl('Assets/Textures/NaturalEarthII')\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\r\n      throw new Error('options must have a url');\r\n    }\r\n    switch (this.provider) {\r\n      case MapLayerProviderOptions.WebMapService:\r\n      case MapLayerProviderOptions.WebMapTileService:\r\n      case MapLayerProviderOptions.ArcGisMapServer:\r\n      case MapLayerProviderOptions.SingleTileImagery:\r\n      case MapLayerProviderOptions.BingMaps:\r\n      case MapLayerProviderOptions.GoogleEarthEnterpriseMaps:\r\n      case MapLayerProviderOptions.MapBox:\r\n      case MapLayerProviderOptions.MapboxStyleImageryProvider:\r\n      case MapLayerProviderOptions.UrlTemplateImagery:\r\n      case MapLayerProviderOptions.MapTileService:\r\n      case MapLayerProviderOptions.OpenStreetMap:\r\n        this.layerProvider = new this.provider(this.options);\r\n        break;\r\n      case MapLayerProviderOptions.OFFLINE:\r\n        this.layerProvider = this.createOfflineMapProvider();\r\n        break;\r\n      default:\r\n        console.log('ac-map-layer-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\r\n        this.layerProvider = this.createOfflineMapProvider();\r\n        break;\r\n    }\r\n    if (this.show) {\r\n      this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\r\n      this.imageryLayer.alpha = this.alpha;\r\n      this.imageryLayer.contrast = this.contrast;\r\n      this.imageryLayer.brightness = this.brightness;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['show'] && !changes['show'].isFirstChange()) {\r\n      const showValue = changes['show'].currentValue;\r\n      if (showValue) {\r\n        if (this.imageryLayer) {\r\n          this.imageryLayersCollection.add(this.imageryLayer, this.index);\r\n        } else {\r\n          this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\r\n          this.imageryLayer.alpha = this.alpha;\r\n          this.imageryLayer.contrast = this.contrast;\r\n          this.imageryLayer.brightness = this.brightness;\r\n        }\r\n      } else if (this.imageryLayer) {\r\n        this.imageryLayersCollection.remove(this.imageryLayer, false);\r\n      }\r\n    }\r\n\r\n    if (changes['alpha'] && !changes['alpha'].isFirstChange() && this.imageryLayer) {\r\n      this.imageryLayer.alpha = this.alpha;\r\n    }\r\n    if (changes['contrast'] && !changes['contrast'].isFirstChange() && this.imageryLayer) {\r\n      this.imageryLayer.contrast = this.contrast;\r\n    }\r\n    if (changes['brightness'] && !changes['brightness'].isFirstChange() && this.imageryLayer) {\r\n      this.imageryLayer.brightness = this.brightness;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.imageryLayer) {\r\n      this.imageryLayersCollection.remove(this.imageryLayer, true);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\nimport { Checker } from '../../utils/checker';\r\nimport { MapTerrainProviderOptions } from '../../models/map-terrain-provider-options.enum';\r\n\r\n/**\r\n *  This component is used for adding a terrain provider service to the map (ac-map)\r\n *  options according to selected terrain provider MapTerrainProviderOptions enum.\r\n *\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-map-terrain-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\r\n *    </ac-map-terrain-provider>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-map-terrain-provider',\r\n  template: '',\r\n})\r\nexport class AcMapTerrainProviderComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /**\r\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/TerrainProvider.html\r\n   */\r\n  @Input()\r\n  options: { url?: string } = {};\r\n\r\n  /**\r\n   * the provider\r\n   */\r\n  @Input()\r\n  provider: any;\r\n\r\n  /**\r\n   * show (optional) - Determines if the map layer is shown.\r\n   */\r\n  @Input()\r\n  show = true;\r\n\r\n  private terrainProvider: any;\r\n  private defaultTerrainProvider: any;\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!Checker.present(this.options.url)\r\n      && this.provider !== MapTerrainProviderOptions.Ellipsoid\r\n      && this.provider !== MapTerrainProviderOptions.WorldTerrain) {\r\n      throw new Error('options must have a url');\r\n    }\r\n    this.defaultTerrainProvider = this.cesiumService.getViewer().terrainProvider;\r\n    switch (this.provider) {\r\n      case MapTerrainProviderOptions.CesiumTerrain:\r\n      case MapTerrainProviderOptions.ArcGISTiledElevation:\r\n      case MapTerrainProviderOptions.GoogleEarthEnterprise:\r\n      case MapTerrainProviderOptions.VRTheWorld:\r\n      case MapTerrainProviderOptions.Ellipsoid:\r\n        this.terrainProvider = new this.provider(this.options);\r\n        break;\r\n      case MapTerrainProviderOptions.WorldTerrain:\r\n        this.terrainProvider = this.provider(this.options);\r\n        break;\r\n      default:\r\n        console.log('ac-map-terrain-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\r\n        this.terrainProvider = this.defaultTerrainProvider;\r\n        break;\r\n    }\r\n    if (this.show) {\r\n      this.cesiumService.getViewer().terrainProvider = this.terrainProvider;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['show'] && !changes['show'].isFirstChange()) {\r\n      const showValue = changes['show'].currentValue;\r\n      if (showValue) {\r\n        if (this.terrainProvider) {\r\n          this.cesiumService.getViewer().terrainProvider = this.terrainProvider;\r\n        }\r\n      } else {\r\n        this.cesiumService.getViewer().terrainProvider = this.defaultTerrainProvider;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.cesiumService.getViewer().terrainProvider = this.defaultTerrainProvider;\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-label element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties of Entity and PointGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-point-desc props=\"{\r\n *     pixelSize : point.pixelSize, //optional\r\n *     position : point.positions,\r\n *     color : point.color  //optional\r\n *   }\">\r\n *   </ac-point-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-point-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPointDescComponent)}],\r\n})\r\nexport class AcPointDescComponent extends BasicDesc {\r\n\r\n  constructor(pointDrawerService: PointDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(pointDrawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is a label implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-label [props]=\"{\r\n *    position: position,\r\n *    text: 'labelText',\r\n *    font: '30px sans-serif',\r\n *    fillColor : aquamarine\r\n *  }\">\r\n *  </ac-label>;\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-label',\r\n  template: '',\r\n})\r\nexport class AcLabelComponent extends EntityOnMapComponent {\r\n\r\n  constructor(labelDrawer: LabelDrawerService, mapLayers: MapLayersService) {\r\n    super(labelDrawer, mapLayers);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\r\n\r\n/**\r\n *  This is a polyline implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Polyline Primitive:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-polyline [props]=\"{\r\n *    position: position,\r\n *    text: 'labelText',\r\n *    font: '30px sans-serif'\r\n *    color: Color.GREEN\r\n *  }\">;\r\n *  </ac-polyline>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-polyline',\r\n  template: '',\r\n})\r\nexport class AcPolylineComponent extends EntityOnMapComponent {\r\n\r\n  constructor(polylineDrawer: PolylineDrawerService, mapLayers: MapLayersService) {\r\n    super(polylineDrawer, mapLayers);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is an ellipse implementation.\r\n *  The element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-ellipse [props]=\"{\r\n *    position: position,\r\n *    semiMajorAxis:40000.0,\r\n *    semiMinorAxis:25000.0,\r\n *    rotation : 0.785398\r\n *  }\">\r\n *  </ac-ellipse>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-ellipse',\r\n  template: '',\r\n})\r\nexport class AcEllipseComponent extends EntityOnMapComponent {\r\n\r\n  constructor(ellipseDrawer: EllipseDrawerService, mapLayers: MapLayersService) {\r\n    super(ellipseDrawer, mapLayers);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Entity and PointGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-point [props]=\"{\r\n *    position: position,\r\n *    width: 3\r\n *  }\">\r\n *  </ac-point>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-point',\r\n  template: '',\r\n})\r\nexport class AcPointComponent extends EntityOnMapComponent {\r\n\r\n  constructor(pointDrawer: PointDrawerService, mapLayers: MapLayersService) {\r\n    super(pointDrawer, mapLayers);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is a circle implementation.\r\n *  The element must be a child of ac-map element.\r\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\r\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-circle [props]=\"{\r\n *    position: position,\r\n *    radius:40000.0,\r\n *    granularity:0.03,\r\n *  }\">\r\n *  </ac-circle>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-circle',\r\n  template: '',\r\n})\r\nexport class AcCircleComponent extends EntityOnMapComponent {\r\n\r\n  constructor(ellipseDrawerService: EllipseDrawerService, mapLayers: MapLayersService) {\r\n    super(ellipseDrawerService, mapLayers);\r\n  }\r\n\r\n  private updateEllipseProps() {\r\n    this.props.semiMajorAxis = this.props.radius;\r\n    this.props.semiMinorAxis = this.props.radius;\r\n    this.props.rotation = 0.0;\r\n  }\r\n\r\n  drawOnMap() {\r\n    this.updateEllipseProps();\r\n    super.drawOnMap();\r\n  }\r\n\r\n  updateOnMap() {\r\n    this.updateEllipseProps();\r\n    super.updateOnMap();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is an implementation of an arc.\r\n *  The element must be a child of ac-map element.\r\n *  An arc is not natively implemented in cesium.\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-arc-desc geometryProps=\"{\r\n *          center: arc.center,\r\n *          angle: arc.angle,\r\n *          delta: arc.delta,\r\n *          radius: arc.radius\r\n *       }\"\r\n *       instanceProps=\"{\r\n *          attributes: arc.attributes\r\n *       }\"\r\n *       primitiveProps=\"{\r\n *          appearance: arc.appearance\r\n *       }\">\r\n *    </ac-arc-desc>\r\n *    ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-arc',\r\n  template: '',\r\n})\r\nexport class AcArcComponent extends EntityOnMapComponent implements OnChanges {\r\n\r\n  @Input()\r\n  geometryProps: any;\r\n  @Input()\r\n  instanceProps: any;\r\n  @Input()\r\n  primitiveProps: any;\r\n\r\n  constructor(arcDrawer: ArcDrawerService, mapLayers: MapLayersService) {\r\n    super(arcDrawer, mapLayers);\r\n  }\r\n\r\n  updateOnMap() {\r\n    if (this.selfPrimitiveIsDraw) {\r\n      this.removeFromMap();\r\n      this.drawOnMap();\r\n    }\r\n  }\r\n\r\n  drawOnMap() {\r\n    this.selfPrimitiveIsDraw = true;\r\n    return this.selfPrimitive = this._drawer.add(this.geometryProps, this.instanceProps, this.primitiveProps);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const geometryProps = changes['geometryProps'];\r\n    const instanceProps = changes['instanceProps'];\r\n    const primitiveProps = changes['primitiveProps'];\r\n    if (geometryProps.currentValue !== geometryProps.previousValue ||\r\n      instanceProps.currentValue !== instanceProps.previousValue ||\r\n      primitiveProps.currentValue !== primitiveProps.previousValue) {\r\n      this.updateOnMap();\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, OnInit } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\n\r\n/**\r\n *  This is a polygon implementation.\r\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-polygon-desc props=\"{\r\n *      hierarchy: polygon.hierarchy,\r\n *      material: polygon.material,\r\n *      height: polygon.height\r\n *    }\">\r\n *    </ac-polygon-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-polygon-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolygonDescComponent)}],\r\n})\r\nexport class AcPolygonDescComponent extends BasicDesc implements OnInit {\r\n\r\n  constructor(polygonDrawer: PolygonDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is a polygon implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  _Set `height` prop for performance enhancement_\r\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-polygon props=\"{\r\n *      hierarchy: polygon.hierarchy,\r\n *      material: polygon.material,\r\n *      height: polygon.height\r\n *    }\">\r\n *    </ac-polygon>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-polygon',\r\n  template: '',\r\n})\r\nexport class AcPolygonComponent extends EntityOnMapComponent {\r\n  constructor(polygonDrawer: PolygonDrawerService, mapLayers: MapLayersService) {\r\n    super(polygonDrawer, mapLayers);\r\n  }\r\n}\r\n","import { Input, OnInit, Directive } from '@angular/core';\r\nimport { BasicDesc } from '../basic-desc/basic-desc.service';\r\nimport { LayerService } from '../layer-service/layer-service.service';\r\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\r\nimport { StaticPrimitiveDrawer } from '../drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\r\nimport { AcEntity } from '../../models/ac-entity';\r\n\r\n@Directive()\r\nexport class BasicStaticPrimitiveDesc extends BasicDesc implements OnInit {\r\n  @Input()\r\n  geometryProps: any;\r\n  @Input()\r\n  instanceProps: any;\r\n  @Input()\r\n  primitiveProps: any;\r\n\r\n  private _geometryPropsEvaluator: Function;\r\n  private _instancePropsEvaluator: Function;\r\n  private _primitivePropsEvaluator: Function;\r\n\r\n  constructor(protected _staticPrimitiveDrawer: StaticPrimitiveDrawer, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(_staticPrimitiveDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._layerService.registerDescription(this);\r\n\r\n    this._geometryPropsEvaluator = this._cesiumProperties.createEvaluator(this.geometryProps);\r\n    this._instancePropsEvaluator = this._cesiumProperties.createEvaluator(this.instanceProps);\r\n    this._primitivePropsEvaluator = this._cesiumProperties.createEvaluator(this.primitiveProps);\r\n  }\r\n\r\n  draw(context: any, id: string, entity: AcEntity): any {\r\n    const geometryProps = this._geometryPropsEvaluator(this._computationCache, context);\r\n    const instanceProps = this._instancePropsEvaluator(this._computationCache, context);\r\n    const primitiveProps = this._primitivePropsEvaluator(this._computationCache, context);\r\n\r\n    if (!this._cesiumObjectsMap.has(id)) {\r\n      const primitive = this._staticPrimitiveDrawer.add(geometryProps, instanceProps, primitiveProps);\r\n      primitive.acEntity = entity; // set the entity on the primitive for later usage\r\n      this._cesiumObjectsMap.set(id, primitive);\r\n    } else {\r\n      const primitive = this._cesiumObjectsMap.get(id);\r\n      this._staticPrimitiveDrawer.update(primitive, geometryProps, instanceProps, primitiveProps);\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\r\nimport { StaticEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\r\n\r\n/**\r\n *\r\n * @deprecated use ac-ellipse-desc instead\r\n *\r\n *  This is a static (position, color, etc.. are not updated) implementation of an ellipse.\r\n *  __usage:__\r\n *  ```\r\n *  &lt;ac-static-ellipse-desc-desc\r\n *      geometryProps=\"{\r\n *          center: ellipse.geometry.center,\r\n *          semiMajorAxis: ellipse.geometry.semiMajorAxis,\r\n *          semiMinorAxis: ellipse.geometry.semiMinorAxis,\r\n *          height: ellipse.geometry.height,\r\n *          rotation: ellipse.geometry.rotation\r\n *      }\"\r\n *      instanceProps=\"{\r\n *          attributes: ellipse.attributes //Optional\r\n *      }\"\r\n *      primitiveProps=\"{\r\n *          appearance: ellipse.appearance //Optional\r\n *      }\"&gt;\r\n *  &lt;/ac-static-ellipse-desc-desc&gt;\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-static-ellipse-desc',\r\n  template: ''\r\n})\r\nexport class AcStaticEllipseDescComponent extends BasicStaticPrimitiveDesc {\r\n  constructor(ellipseDrawer: StaticEllipseDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\r\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\r\n\r\n/**\r\n *\r\n *\r\n *  This is a dynamic(position is updatable) implementation of an ellipse.\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    &lt;ac-dynamic-ellipse-desc props=\"{\r\n *      center: data.position,\r\n *      semiMajorAxis:250000.0,\r\n *      semiMinorAxis:400000.0,\r\n *      rotation : 0.785398,\r\n *      width:3, // Optional\r\n *      granularity:0.08 // Optional\r\n *      }\"&gt;\r\n *    \">\r\n *    &lt;/ac-dynamic-ellipse-desc&gt;\r\n *  ```\r\n *  __param:__ {Cartesian3} center\r\n *  __param:__ {number} semiMajorAxis\r\n *  __param:__ {number} semiMinorAxis\r\n *  __param:__ {number} rotation\r\n *   __param__: {number} [1] width\r\n *   __param__: {number} [0.003] granularity\r\n */\r\n@Component({\r\n  selector: 'ac-dynamic-ellipse-desc',\r\n  template: '',\r\n})\r\nexport class AcDynamicEllipseDescComponent extends BasicDesc {\r\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","// tslint:disable\r\nimport { Component } from '@angular/core';\r\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { DynamicPolylineDrawerService } from '../../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\r\n\r\n// tslint:enable\r\n/**\r\n * @deprecated use ac-polylinc-desc instead\r\n *\r\n *  This is a dynamic(position is updatable) implementation of an polyline.\r\n *  The ac-dynamic-polyline-desc element must be a child of ac-layer element.\r\n *  __Usage:__\r\n *  ```\r\n *    &lt;ac-dynamic-polyline-desc props=\"{width : polyline.width, //optional\r\n *                                      positions: polyline.positions,\r\n *                                      material: polyline.material //optional\r\n *                                      }\"\r\n *    &gt;\r\n *    &lt;/ac-dynamic-polyline-desc&gt;\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ac-dynamic-polyline-desc',\r\n  template: ''\r\n})\r\nexport class AcDynamicPolylineDescComponent extends BasicDesc {\r\n\r\n  constructor(dynamicPolylineDrawerService: DynamicPolylineDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","// tslint:disable\r\nimport { Component } from '@angular/core';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\r\nimport { StaticPolygonDrawerService } from '../../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\r\n\r\n// tslint:enable\r\n/**\r\n * @deprecated use ac-ploygon-desc instead\r\n *\r\n *  This is a static (position, color, etc.. are not updated) implementation of a polygon.\r\n *  __Usage:__\r\n *  ```\r\n *    &lt;ac-static-polygon-desc\r\n *          geometryProps=\"{\r\n *                     polygonHierarchy: polygon.geometry.polygonHierarchy,\r\n *                     height: polygon.geometry.height,\r\n *                     granularity: polygon.geometry.granularity\r\n *                 }\"\r\n *          instanceProps=\"{\r\n *                     attributes: polygon.attributes\r\n *                 }\"\r\n *          primitiveProps=\"{\r\n *                     appearance: polygon.appearance\r\n *                 }\"\r\n *    &gt;&lt;/ac-static-polygon-desc&gt;\r\n *    ```\r\n */\r\n@Component({\r\n  selector: 'ac-static-polygon-desc',\r\n  template: '',\r\n})\r\nexport class AcStaticPolygonDescComponent extends BasicStaticPrimitiveDesc {\r\n  constructor(polygonDrawer: StaticPolygonDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\r\nimport { StaticCircleDrawerService } from '../../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\r\n\r\n/**\r\n * @deprecated use ac-circle-desc\r\n *\r\n *  This is a static (position, color, etc.. are not updated) implementation of an circle.\r\n *  __usage:__\r\n *  ```\r\n *    &lt;ac-static-circle-desc\r\n *      geometryProps=\"{\r\n *          center: circle.geometry.center,\r\n *          radius: circle.geometry.radius,\r\n *      }\"\r\n *      instanceProps=\"{\r\n *          attributes: circle.attributes //Optional\r\n *      }\"\r\n *      primitiveProps=\"{\r\n *          appearance: circle.appearance //Optional\r\n *      }\"&gt;\r\n *    &lt;/ac-static-circle-desc&gt;\r\n *    ```\r\n */\r\n@Component({\r\n  selector: 'ac-static-circle',\r\n  template: ''\r\n})\r\nexport class AcStaticCircleDescComponent extends BasicStaticPrimitiveDesc {\r\n  constructor(staticCircleDrawer: StaticCircleDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(staticCircleDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\r\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\r\n\r\n/**\r\n * @deprecated use ac-circle-desc instead\r\n *\r\n *  This is a dynamic(position is updatable) implementation of an circle.\r\n __Usage :__\r\n *  ```\r\n *    &lt;ac-dynamic-circle-desc props=\"{\r\n *      center: data.position,\r\n *      radius: 5\r\n *      rotation : 0.785398,\r\n *      width:3, // Optional\r\n *      granularity:0.08 // Optional\r\n *      }\"&gt;\r\n *    &lt;/ac-dynamic-circle-desc&gt;\r\n *  ```\r\n *\r\n *  __param__: {Cartesian3} center\r\n *   __param__: {number} rotation\r\n *   __param__: {number} radius in meters\r\n *   __param__: {number} [1] width\r\n *   __param__: {number} [0.003] granularity\r\n */\r\n@Component({\r\n  selector: 'ac-dynamic-circle-desc',\r\n  template: ''\r\n})\r\nexport class AcDynamicCircleDescComponent extends BasicDesc {\r\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n\r\n  protected _propsEvaluator(context: Object): any {\r\n    const cesiumProps = super._propsEvaluator(context);\r\n\r\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\r\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\r\n\r\n    return cesiumProps;\r\n  }\r\n}\r\n","// tslint:disable\r\nimport { Component } from '@angular/core';\r\nimport { StaticPolylineDrawerService } from '../../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\r\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\r\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\r\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\r\n\r\n// tslint:enable\r\n\r\n/**\r\n * @deprecated use ac-ployline-desc instead\r\n *\r\n *  This is a static implementation of an polyline.\r\n *  __usage:__\r\n *  ```\r\n *    &ltac-static-polyline-desc\r\n *            geometryProps=\"{\r\n *            \twidth: poly.geometry.width,\r\n *            \tpositions: poly.geometry.positions\r\n *            }\"\r\n *            instanceProps=\"{\r\n *              attributes: {\r\n *                  ColorGeometryInstanceAttribute.fromColor(Color.fromRandom())\r\n *              }\r\n *            }\"\r\n *            primitiveProps=\"{\r\n *              appearance: new PolylineColorAppearance()\r\n *    }\"&gt&lt/ac-static-polyline-desc&gt\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-static-polyline-desc',\r\n  template: ''\r\n})\r\nexport class AcStaticPolylineDescComponent extends BasicStaticPrimitiveDesc {\r\n  constructor(polylineDrawerService: StaticPolylineDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(polylineDrawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef, OnInit } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\r\n\r\n/**\r\n *  This is a model implementation.\r\n *  The ac-model element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties of Entity and ModelGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/ModelGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-model-desc props=\"{\r\n *       position : Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706),\r\n *       uri : '../../SampleData/models/CesiumGround/Cesium_Ground.gltf'\r\n *   }\r\n *    }\">\r\n *    </ac-model-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-model-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcModelDescComponent)}],\r\n})\r\nexport class AcModelDescComponent extends BasicDesc implements OnInit {\r\n\r\n  constructor(modelDrawer: ModelDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(modelDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { PrimitiveCollection, Cesium3DTileset, Cesium3DTileStyle } from 'cesium';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\nimport { Checker } from '../../utils/checker';\r\n\r\n/**\r\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\r\n *  options according to `Cesium3DTileset` definition.\r\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\r\n *\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\r\n *    </ac-3d-tile-layer>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-3d-tile-layer',\r\n  template: '',\r\n})\r\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\r\n  /**\r\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\r\n   */\r\n  @Input()\r\n  options: { url: any } = { url: null };\r\n\r\n  /**\r\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\r\n   */\r\n  @Input()\r\n  index: Number;\r\n\r\n  /**\r\n   * show (optional) - Determines if the map layer is shown.\r\n   */\r\n  @Input()\r\n  show = true;\r\n\r\n  /**\r\n   * show (optional) - Sets 3Dtiles style.\r\n   */\r\n  @Input()\r\n  style: any;\r\n\r\n  public tilesetInstance: any = null;\r\n  private _3dtilesCollection: any;\r\n\r\n  constructor(private cesiumService: CesiumService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!Checker.present(this.options.url)) {\r\n      throw new Error('Options must have a url');\r\n    }\r\n\r\n    this._3dtilesCollection = new PrimitiveCollection();\r\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\r\n\r\n    if (this.show) {\r\n      this.tilesetInstance = this._3dtilesCollection.add(new Cesium3DTileset(this.options), this.index);\r\n      if (this.style) {\r\n        this.tilesetInstance.style = new Cesium3DTileStyle(this.style);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['show'] && !changes['show'].isFirstChange()) {\r\n      const showValue = changes['show'].currentValue;\r\n\r\n      if (showValue) {\r\n        if (this.tilesetInstance) {\r\n          this._3dtilesCollection.add(this.tilesetInstance, this.index);\r\n        } else {\r\n          this.tilesetInstance = this._3dtilesCollection.add(new Cesium3DTileset(this.options), this.index);\r\n          if (this.style) {\r\n            this.tilesetInstance.style = new Cesium3DTileStyle(this.style);\r\n          }\r\n        }\r\n      } else if (this.tilesetInstance) {\r\n        this._3dtilesCollection.remove(this.tilesetInstance, false);\r\n      }\r\n    }\r\n    if (changes['style'] && !changes['style'].isFirstChange()) {\r\n      const styleValue = changes['style'].currentValue;\r\n      if (this.tilesetInstance) {\r\n        this.tilesetInstance.style = new Cesium3DTileStyle(this.style);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.tilesetInstance) {\r\n      this._3dtilesCollection.remove(this.tilesetInstance, false);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-box-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity (like `position`)\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BoxGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-box-desc props=\"{\r\n *     show : point.show, //optional\r\n *     position : point.positions,\r\n *     material : point.color  //optional\r\n *   }\">\r\n *   </ac-box-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-box-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBoxDescComponent)}],\r\n})\r\nexport class AcBoxDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: BoxDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-box-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity (like `position`)\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CylinderGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-cylinder-desc props=\"{\r\n *     show : cylinder.show, //optional\r\n *     position : cylinder.position,\r\n *     material : cylinder.color  //optional\r\n *   }\">\r\n *   </ac-cylinder-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-cylinder-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCylinderDescComponent)}],\r\n})\r\nexport class AcCylinderDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: CylinderDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-box-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CorridorGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-corridor-desc props=\"{\r\n *     show : point.show, //optional\r\n *     positions : point.positions,\r\n *     material : point.color  //optional\r\n *   }\">\r\n *   </ac-corridor-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-corridor-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCorridorDescComponent)}],\r\n})\r\nexport class AcCorridorDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: CorridorDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-box-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-ellipsoid-desc props=\"{\r\n *     show : ellipsoid.show, //optional\r\n *     radii : ellipsoid.radii,\r\n *     material : ellipsoid.color  //optional\r\n *   }\">\r\n *   </ac-ellipsoid-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-ellipsoid-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent)}],\r\n})\r\nexport class AcEllipsoidDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineVolumeGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-polyline-volume-desc props=\"{\r\n *     show : line.show, //optional\r\n *     positions : line.positions,\r\n *     material : line.color  //optional\r\n *   }\">\r\n *   </ac-polyline-volume-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-polyline-volume-desc',\r\n  template: ''\r\n})\r\nexport class AcPolylineVolumeDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: PolylineVolumeDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-box-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/WallGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-wall-desc props=\"{\r\n *     show : wall.show, //optional\r\n *     positions : wall.positions,\r\n *     material : wall.color  //optional\r\n *   }\">\r\n *   </ac-wall-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-wall-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcWallDescComponent)}],\r\n})\r\nexport class AcWallDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: WallDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-rectangle-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties RectangleGraphics and the general properties\r\n *  of Entity\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-rectangle-desc props=\"{\r\n *     show : rectangle.show, //optional\r\n *     coordinates : rectangle.positions,\r\n *     material : rectangle.color  //optional\r\n *   }\">\r\n *   </ac-rectangle-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-rectangle-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcRectangleDescComponent)}],\r\n})\r\nexport class AcRectangleDescComponent extends BasicDesc {\r\n\r\n  constructor(drawerService: RectangleDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(drawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\r\n\r\n/**\r\n *  This is a billboard primitive implementation.\r\n *  The element must be a child of ac-layer element.\r\n *  The properties of props are:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Billboard.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-billboard-primitive-desc props=\"{\r\n *      image: track.image,\r\n *      position: track.position,\r\n *      scale: track.scale,\r\n *      color: track.color,\r\n *      name: track.name\r\n *    }\">\r\n *    </ac-billboard-primitive-desc>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-billboard-primitive-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardPrimitiveDescComponent)}],\r\n})\r\nexport class AcBillboardPrimitiveDescComponent extends BasicDesc {\r\n\r\n  constructor(billboardPrimitiveDrawer: BillboardPrimitiveDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(billboardPrimitiveDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\r\n\r\n/**\r\n *  This is a label primitive implementation.\r\n *  The ac-label element must be a child of ac-layer element.\r\n *  The properties of props are:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Label.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-label-primitive-desc props=\"{\r\n *      position: track.position,\r\n *      pixelOffset : [-15,20] | pixelOffset,\r\n *      text: track.name,\r\n *      font: '15px sans-serif'\r\n *    }\">\r\n *    </ac-label-primitive-desc>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-label-primitive-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelPrimitiveDescComponent)}],\r\n})\r\nexport class AcLabelPrimitiveDescComponent extends BasicDesc {\r\n\r\n  constructor(labelPrimitiveDrawer: LabelPrimitiveDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(labelPrimitiveDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\r\n\r\n/**\r\n *  This is a polyline primitive implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Polyline Primitive:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-polyline-primitive-desc props=\"{\r\n *      width : polyline.width,\r\n *      positions: polyline.positions,\r\n *      material: polyline.material\r\n *    }\">\r\n *    </ac-polyline-primitive-desc>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ac-polyline-primitive-desc',\r\n  template: '',\r\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylinePrimitiveDescComponent)}],\r\n})\r\nexport class AcPolylinePrimitiveDescComponent extends BasicDesc {\r\n\r\n  constructor(polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(polylinePrimitiveDrawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","/**\r\n * Fix for the constant entity shadowing.\r\n * PR in Cesium repo: https://github.com/AnalyticalGraphicsInc/cesium/pull/5736\r\n */\r\nimport { Color, AssociativeArray, defined, ColorGeometryInstanceAttribute,  DistanceDisplayCondition,\r\n  DistanceDisplayConditionGeometryInstanceAttribute, ShowGeometryInstanceAttribute, Primitive,\r\n  ShadowMode, ColorMaterialProperty\r\n } from 'cesium';\r\n declare var Cesium: any;\r\n\r\n// tslint:disable\r\n// const AssociativeArray = AssociativeArray;\r\n// const Color = Color;\r\n// const ColorGeometryInstanceAttribute = ColorGeometryInstanceAttribute;\r\n// const defined = defined;\r\n// const DistanceDisplayCondition = DistanceDisplayCondition;\r\n// const DistanceDisplayConditionGeometryInstanceAttribute = DistanceDisplayConditionGeometryInstanceAttribute;\r\n// const ShowGeometryInstanceAttribute = ShowGeometryInstanceAttribute;\r\n// const Primitive = Primitive;\r\n// const ShadowMode = ShadowMode;\r\n// const BoundingSphereState = BoundingSphereState;\r\n// const ColorMaterialProperty = ColorMaterialProperty;\r\n// const MaterialProperty = MaterialProperty;\r\n//  const Property = Property;\r\n\r\nvar colorScratch = new Color();\r\nvar distanceDisplayConditionScratch = new DistanceDisplayCondition();\r\nvar defaultDistanceDisplayCondition = new DistanceDisplayCondition();\r\n\r\nfunction Batch(primitives, translucent, appearanceType, depthFailAppearanceType, depthFailMaterialProperty, closed, shadows) {\r\n  this.translucent = translucent;\r\n  this.appearanceType = appearanceType;\r\n  this.depthFailAppearanceType = depthFailAppearanceType;\r\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\r\n  this.depthFailMaterial = undefined;\r\n  this.closed = closed;\r\n  this.shadows = shadows;\r\n  this.primitives = primitives;\r\n  this.createPrimitive = false;\r\n  this.waitingOnCreate = false;\r\n  this.primitive = undefined;\r\n  this.oldPrimitive = undefined;\r\n  this.geometry = new AssociativeArray();\r\n  this.updaters = new AssociativeArray();\r\n  this.updatersWithAttributes = new AssociativeArray();\r\n  this.attributes = new AssociativeArray();\r\n  this.subscriptions = new AssociativeArray();\r\n  this.showsUpdated = new AssociativeArray();\r\n  this.itemsToRemove = [];\r\n  this.invalidated = false;\r\n  \r\n  var removeMaterialSubscription;\r\n  if (defined(depthFailMaterialProperty)) {\r\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(Batch.prototype.onMaterialChanged, this);\r\n  }\r\n  this.removeMaterialSubscription = removeMaterialSubscription;\r\n}\r\n\r\nBatch.prototype.onMaterialChanged = function () {\r\n  this.invalidated = true;\r\n};\r\n\r\nBatch.prototype.isMaterial = function (updater) {\r\n  var material = this.depthFailMaterialProperty;\r\n  var updaterMaterial = updater.depthFailMaterialProperty;\r\n  if (updaterMaterial === material) {\r\n    return true;\r\n  }\r\n  if (defined(material)) {\r\n    return material.equals(updaterMaterial);\r\n  }\r\n  return false;\r\n};\r\n\r\nBatch.prototype.add = function (updater, instance) {\r\n  var id = updater.id;\r\n  this.createPrimitive = true;\r\n  this.geometry.set(id, instance);\r\n  this.updaters.set(id, updater);\r\n  if (!updater.hasConstantFill || !updater.fillMaterialProperty.isConstant || !Cesium.Property.isConstant(updater.distanceDisplayConditionProperty)) {\r\n    this.updatersWithAttributes.set(id, updater);\r\n  } else {\r\n    var that = this;\r\n    this.subscriptions.set(id, updater.entity.definitionChanged.addEventListener(function (entity, propertyName, newValue, oldValue) {\r\n      if (propertyName === 'isShowing') {\r\n        that.showsUpdated.set(updater.id, updater);\r\n      }\r\n    }));\r\n  }\r\n};\r\n\r\nBatch.prototype.remove = function (updater) {\r\n  var id = updater.id;\r\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\r\n  if (this.updaters.remove(id)) {\r\n    this.updatersWithAttributes.remove(id);\r\n    var unsubscribe = this.subscriptions.get(id);\r\n    if (defined(unsubscribe)) {\r\n      unsubscribe();\r\n      this.subscriptions.remove(id);\r\n    }\r\n  }\r\n};\r\n\r\nBatch.prototype.update = function (time) {\r\n  var isUpdated = true;\r\n  var removedCount = 0;\r\n  var primitive = this.primitive;\r\n  var primitives = this.primitives;\r\n  var attributes;\r\n  var i;\r\n  \r\n  if (this.createPrimitive) {\r\n    var geometries = this.geometry.values;\r\n    var geometriesLength = geometries.length;\r\n    if (geometriesLength > 0) {\r\n      if (defined(primitive)) {\r\n        if (!defined(this.oldPrimitive)) {\r\n          this.oldPrimitive = primitive;\r\n        } else {\r\n          primitives.remove(primitive);\r\n        }\r\n      }\r\n      \r\n      for (i = 0; i < geometriesLength; i++) {\r\n        var geometryItem = geometries[i];\r\n        var originalAttributes = geometryItem.attributes;\r\n        attributes = this.attributes.get(geometryItem.id.id);\r\n        \r\n        if (defined(attributes)) {\r\n          if (defined(originalAttributes.show)) {\r\n            originalAttributes.show.value = attributes.show;\r\n          }\r\n          if (defined(originalAttributes.color)) {\r\n            originalAttributes.color.value = attributes.color;\r\n          }\r\n          if (defined(originalAttributes.depthFailColor)) {\r\n            originalAttributes.depthFailColor.value = attributes.depthFailColor;\r\n          }\r\n        }\r\n      }\r\n      \r\n      var depthFailAppearance;\r\n      if (defined(this.depthFailAppearanceType)) {\r\n        if (defined(this.depthFailMaterialProperty)) {\r\n          this.depthFailMaterial = Cesium.MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\r\n        }\r\n        depthFailAppearance = new this.depthFailAppearanceType({\r\n          material: this.depthFailMaterial,\r\n          translucent: this.translucent,\r\n          closed: this.closed\r\n        });\r\n      }\r\n      \r\n      primitive = new Primitive({\r\n        show: false,\r\n        asynchronous: true,\r\n        geometryInstances: geometries,\r\n        appearance: new this.appearanceType({\r\n          flat: this.shadows === ShadowMode.DISABLED || this.shadows === ShadowMode.CAST_ONLY,\r\n          translucent: this.translucent,\r\n          closed: this.closed\r\n        }),\r\n        depthFailAppearance: depthFailAppearance,\r\n        shadows: this.shadows\r\n      });\r\n      primitives.add(primitive);\r\n      isUpdated = false;\r\n    } else {\r\n      if (defined(primitive)) {\r\n        primitives.remove(primitive);\r\n        primitive = undefined;\r\n      }\r\n      var oldPrimitive = this.oldPrimitive;\r\n      if (defined(oldPrimitive)) {\r\n        primitives.remove(oldPrimitive);\r\n        this.oldPrimitive = undefined;\r\n      }\r\n    }\r\n    \r\n    this.attributes.removeAll();\r\n    this.primitive = primitive;\r\n    this.createPrimitive = false;\r\n    this.waitingOnCreate = true;\r\n  } else if (defined(primitive) && primitive.ready) {\r\n    primitive.show = true;\r\n    if (defined(this.oldPrimitive)) {\r\n      primitives.remove(this.oldPrimitive);\r\n      this.oldPrimitive = undefined;\r\n    }\r\n    \r\n    if (defined(this.depthFailAppearanceType) && !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)) {\r\n      this.depthFailMaterial = Cesium.MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\r\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\r\n    }\r\n    \r\n    var updatersWithAttributes = this.updatersWithAttributes.values;\r\n    var length = updatersWithAttributes.length;\r\n    var waitingOnCreate = this.waitingOnCreate;\r\n    for (i = 0; i < length; i++) {\r\n      var updater = updatersWithAttributes[i];\r\n      var instance = this.geometry.get(updater.id);\r\n      \r\n      attributes = this.attributes.get(instance.id.id);\r\n      if (!defined(attributes)) {\r\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\r\n        this.attributes.set(instance.id.id, attributes);\r\n      }\r\n      \r\n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\r\n        var colorProperty = updater.fillMaterialProperty.color;\r\n        var resultColor = Cesium.Property.getValueOrDefault(colorProperty, time, Color.WHITE, colorScratch);\r\n        if (!Color.equals(attributes._lastColor, resultColor)) {\r\n          attributes._lastColor = Color.clone(resultColor, attributes._lastColor);\r\n          attributes.color = ColorGeometryInstanceAttribute.toValue(resultColor, attributes.color);\r\n          if ((this.translucent && attributes.color[3] === 255) || (!this.translucent && attributes.color[3] !== 255)) {\r\n            this.itemsToRemove[removedCount++] = updater;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (defined(this.depthFailAppearanceType) && updater.depthFailMaterialProperty instanceof ColorMaterialProperty && (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)) {\r\n        var depthFailColorProperty = updater.depthFailMaterialProperty.color;\r\n        var depthColor = Cesium.Property.getValueOrDefault(depthFailColorProperty, time, Color.WHITE, colorScratch);\r\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\r\n          attributes._lastDepthFailColor = Color.clone(depthColor, attributes._lastDepthFailColor);\r\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(depthColor, attributes.depthFailColor);\r\n        }\r\n      }\r\n      \r\n      var show = updater.entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\r\n      var currentShow = attributes.show[0] === 1;\r\n      if (show !== currentShow) {\r\n        attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\r\n      }\r\n      \r\n      var distanceDisplayConditionProperty = updater.distanceDisplayConditionProperty;\r\n      if (!Cesium.Property.isConstant(distanceDisplayConditionProperty)) {\r\n        var distanceDisplayCondition = Cesium.Property.getValueOrDefault(distanceDisplayConditionProperty, time, defaultDistanceDisplayCondition, distanceDisplayConditionScratch);\r\n        if (!DistanceDisplayCondition.equals(distanceDisplayCondition, attributes._lastDistanceDisplayCondition)) {\r\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(distanceDisplayCondition, attributes._lastDistanceDisplayCondition);\r\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(distanceDisplayCondition, attributes.distanceDisplayCondition);\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.updateShows(primitive);\r\n    this.waitingOnCreate = false;\r\n  } else if (defined(primitive) && !primitive.ready) {\r\n    isUpdated = false;\r\n  }\r\n  this.itemsToRemove.length = removedCount;\r\n  return isUpdated;\r\n};\r\n\r\nBatch.prototype.updateShows = function (primitive) {\r\n  var showsUpdated = this.showsUpdated.values;\r\n  var length = showsUpdated.length;\r\n  for (var i = 0; i < length; i++) {\r\n    var updater = showsUpdated[i];\r\n    var instance = this.geometry.get(updater.id);\r\n    \r\n    var attributes = this.attributes.get(instance.id.id);\r\n    if (!defined(attributes)) {\r\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\r\n      this.attributes.set(instance.id.id, attributes);\r\n    }\r\n    \r\n    var show = updater.entity.isShowing;\r\n    var currentShow = attributes.show[0] === 1;\r\n    if (show !== currentShow) {\r\n      attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\r\n    }\r\n  }\r\n  this.showsUpdated.removeAll();\r\n};\r\n\r\nBatch.prototype.contains = function (updater) {\r\n  return this.updaters.contains(updater.id);\r\n};\r\n\r\nBatch.prototype.getBoundingSphere = function (updater, result) {\r\n  var primitive = this.primitive;\r\n  if (!primitive.ready) {\r\n    return Cesium.BoundingSphereState.PENDING;\r\n  }\r\n  var attributes = primitive.getGeometryInstanceAttributes(updater.entity);\r\n  if (!defined(attributes) || !defined(attributes.boundingSphere) ||//\r\n    (defined(attributes.show) && attributes.show[0] === 0)) {\r\n    return Cesium.BoundingSphereState.FAILED;\r\n  }\r\n  attributes.boundingSphere.clone(result);\r\n  return Cesium.BoundingSphereState.DONE;\r\n};\r\n\r\nBatch.prototype.removeAllPrimitives = function () {\r\n  var primitives = this.primitives;\r\n  \r\n  var primitive = this.primitive;\r\n  if (defined(primitive)) {\r\n    primitives.remove(primitive);\r\n    this.primitive = undefined;\r\n    this.geometry.removeAll();\r\n    this.updaters.removeAll();\r\n  }\r\n  \r\n  var oldPrimitive = this.oldPrimitive;\r\n  if (defined(oldPrimitive)) {\r\n    primitives.remove(oldPrimitive);\r\n    this.oldPrimitive = undefined;\r\n  }\r\n};\r\n\r\nBatch.prototype.destroy = function () {\r\n  var primitive = this.primitive;\r\n  var primitives = this.primitives;\r\n  if (defined(primitive)) {\r\n    primitives.remove(primitive);\r\n  }\r\n  var oldPrimitive = this.oldPrimitive;\r\n  if (defined(oldPrimitive)) {\r\n    primitives.remove(oldPrimitive);\r\n  }\r\n  if (defined(this.removeMaterialSubscription)) {\r\n    this.removeMaterialSubscription();\r\n  }\r\n};\r\n\r\n\r\nlet wasFixed = false;\r\n\r\nexport function fixCesiumEntitiesShadows() {\r\n  if (wasFixed) {\r\n    return;\r\n  }\r\n  Cesium.StaticGeometryColorBatch.prototype.add = function (time: any, updater: any) {\r\n    var items;\r\n    var translucent;\r\n    var instance = updater.createFillGeometryInstance(time);\r\n    if (instance.attributes.color.value[3] === 255) {\r\n      items = this._solidItems;\r\n      translucent = false;\r\n    } else {\r\n      items = this._translucentItems;\r\n      translucent = true;\r\n    }\r\n    \r\n    var length = items.length;\r\n    for (var i = 0; i < length; i++) {\r\n      var item = items[i];\r\n      if (item.isMaterial(updater)) {\r\n        item.add(updater, instance);\r\n        return;\r\n      }\r\n      \r\n    }\r\n    \r\n    var batch: any = new Batch(this._primitives, translucent, this._appearanceType, this._depthFailAppearanceType, updater.depthFailMaterialProperty, this._closed, this._shadows);\r\n    batch.add(updater, instance);\r\n    items.push(batch);\r\n  };\r\n  wasFixed = true;\r\n}\r\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\r\nimport { fixCesiumEntitiesShadows } from './StaticGeometryColorBatch';\r\n\r\nexport const ANGULAR_CESIUM_CONFIG = new InjectionToken('ANGULAR_CESIUM_CONFIG');\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n  constructor(@Optional() @Inject(ANGULAR_CESIUM_CONFIG) private config: any) {\r\n    const fixEntitiesShadows = config ? config.fixEntitiesShadows : true;\r\n    if (fixEntitiesShadows !== false) {\r\n      fixCesiumEntitiesShadows();\r\n    }\r\n  }\r\n}\r\n","import { defined, Cartesian2, Cartesian3, SceneTransforms } from 'cesium';\r\nimport { HtmlCollection } from '../collections';\r\n//import { Cartesian2 } from '../../angular-cesium/models/cartesian2';\r\n//import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\r\n\r\nexport class HtmlPrimitive {\r\n\r\n  private _scene: any;\r\n  private _show: boolean;\r\n  private _position: Cartesian3;\r\n  private _lastPosition: Cartesian2;\r\n  private _pixelOffset: Cartesian2;\r\n  private _element: HTMLElement;\r\n  private _collection: HtmlCollection;\r\n  private _mapContainer;\r\n\r\n  constructor(options: any, collection: HtmlCollection = null) {\r\n    if (typeof options !== 'object') {\r\n      throw new Error('HtmlPrimitive ERROR: invalid html options!');\r\n    }\r\n\r\n    this.scene = options.scene;\r\n    this._mapContainer = options.mapContainer;\r\n    this.show = options.show || true;\r\n    this.position = options.position;\r\n    this.pixelOffset = options.pixelOffset;\r\n    this.element = options.element;\r\n    this.collection = collection;\r\n  }\r\n\r\n  set scene(scene: any) {\r\n    this._scene = scene;\r\n  }\r\n\r\n  set show(show: boolean) {\r\n    this._show = show;\r\n\r\n    if (defined(this.element)) {\r\n      if (show) {\r\n        this._element.style.display = 'block';\r\n      } else {\r\n        this._element.style.display = 'none';\r\n      }\r\n    }\r\n  }\r\n\r\n  get show(): boolean {\r\n    return this._show;\r\n  }\r\n\r\n  set position(position: Cartesian3) {\r\n    this._position = position;\r\n  }\r\n\r\n  get position(): Cartesian3 {\r\n    return this._position;\r\n  }\r\n\r\n  set pixelOffset(pixelOffset: Cartesian2) {\r\n    this._pixelOffset = pixelOffset;\r\n  }\r\n\r\n  get pixelOffset(): Cartesian2 {\r\n    return this._pixelOffset;\r\n  }\r\n\r\n  set element(element: HTMLElement) {\r\n    this._element = element;\r\n\r\n    if (defined(element)) {\r\n      this._mapContainer.appendChild(element);\r\n      this._element.style.position = 'absolute';\r\n      this._element.style.zIndex = Number.MAX_VALUE.toString();\r\n    }\r\n  }\r\n\r\n  get element(): HTMLElement {\r\n    return this._element;\r\n  }\r\n\r\n  set collection(collection: HtmlCollection) {\r\n    this._collection = collection;\r\n  }\r\n\r\n  get collection() {\r\n    return this._collection;\r\n  }\r\n\r\n  update() {\r\n    if (!defined(this._show) || !defined(this._element)) {\r\n      return;\r\n    }\r\n\r\n    let screenPosition = SceneTransforms.wgs84ToWindowCoordinates(this._scene, new Cartesian3(this._position.x, this._position.y, this._position.z));\r\n\r\n    if (!defined(screenPosition)) {\r\n      screenPosition = new Cartesian2((-1000), (-1000));\r\n    } else if (defined(this._pixelOffset) && defined(this._pixelOffset.x) && defined(this._pixelOffset.y)) {\r\n      screenPosition.y += this._pixelOffset.y;\r\n      screenPosition.x += this._pixelOffset.x;\r\n    }\r\n\r\n    if (this._lastPosition && this._lastPosition.equals(screenPosition)) {\r\n      return;\r\n    }\r\n\r\n    this._element.style.top = `${screenPosition.y}px`;\r\n    this._element.style.left = `${screenPosition.x}px`;\r\n    this._lastPosition = screenPosition;\r\n  }\r\n\r\n  remove() {\r\n    if (this._element) {\r\n      this._element.remove();\r\n    }\r\n  }\r\n}\r\n","import { defined } from 'cesium';\r\nimport { HtmlPrimitive } from '../primitives';\r\n\r\nexport class HtmlCollection {\r\n  private _collection: HtmlPrimitive[] = [];\r\n\r\n  get length() {\r\n    return this._collection.length;\r\n  }\r\n\r\n  get(index: number) {\r\n    return this._collection[index];\r\n  }\r\n\r\n  add(options: any): HtmlPrimitive {\r\n    const html = new HtmlPrimitive(options, this);\r\n    this._collection.push(html);\r\n\r\n    return html;\r\n  }\r\n\r\n  remove(html: HtmlPrimitive): boolean {\r\n    const index = this._collection.indexOf(html);\r\n    if (index === (-1)) {\r\n      return false;\r\n    }\r\n\r\n    this._collection[index].remove();\r\n    this._collection.splice(index, 1);\r\n    return true;\r\n  }\r\n\r\n  update() {\r\n    for (let i = 0, len = this._collection.length; i < len; i++) {\r\n      this._collection[i].update();\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    while (this._collection.length > 0) {\r\n      const html = this._collection.pop();\r\n      html.remove();\r\n    }\r\n  }\r\n\r\n  contains(html: HtmlPrimitive): boolean {\r\n    return defined(html) && html.collection === this;\r\n  }\r\n\r\n  destroy() {\r\n    this.removeAll();\r\n  }\r\n}\r\n","declare var Cesium: any;\r\nimport { HtmlPrimitive } from './primitives';\r\nimport { HtmlCollection } from './collections';\r\n\r\nexport class CesiumExtender {\r\n  static extend() {\r\n    Cesium.HtmlPrimitive = HtmlPrimitive;\r\n    Cesium.HtmlCollection = HtmlCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AcHtmlManager {\r\n  private _entities: Map<any, any>;\r\n\r\n  constructor() {\r\n    this._entities = new Map<any, any>();\r\n  }\r\n\r\n  has(id: string): boolean {\r\n    return this._entities.has(id);\r\n  }\r\n\r\n  get(id: string): { entity: any, primitive: any } {\r\n    return this._entities.get(id);\r\n  }\r\n\r\n  addOrUpdate(id: any, info: { entity: any, primitive: any }) {\r\n    this._entities.set(id, info);\r\n  }\r\n\r\n  remove(id: string) {\r\n    this._entities.delete(id);\r\n  }\r\n\r\n  forEach(callback: any) {\r\n    this._entities.forEach(callback);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\r\n\r\nexport class AcHtmlContext {\r\n  constructor(\r\n    public id: any,\r\n    public context: any\r\n  ) {\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[acHtml]',\r\n})\r\nexport class AcHtmlDirective implements OnInit {\r\n\r\n  private _views = new Map<any, { viewRef: any, context: any }>();\r\n\r\n  constructor(\r\n    private _templateRef: TemplateRef<AcHtmlContext>,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _changeDetector: ChangeDetectorRef,\r\n    private _layerService: LayerService,\r\n    private _acHtmlManager: AcHtmlManager\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  private _handleView(id: any, primitive: any, entity: any) {\r\n    if (!this._views.has(id) && primitive.show) {\r\n      const context = new AcHtmlContext(id, {$implicit: entity});\r\n      const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\r\n      this._views.set(id, {viewRef, context});\r\n      this._changeDetector.detectChanges();\r\n    }  else if (this._views.has(id) && primitive.show) {\r\n      this._changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  addOrUpdate(id: any, primitive: any) {\r\n    const context = this._layerService.context;\r\n    const entity = context[this._layerService.getEntityName()];\r\n\r\n    if (this._views.has(id)) {\r\n      this._views.get(id).context.context.$implicit = entity;\r\n    }\r\n\r\n    this._acHtmlManager.addOrUpdate(id, {entity, primitive});\r\n    this._handleView(id, primitive, entity);\r\n  }\r\n\r\n  remove(id: any, primitive: any) {\r\n    if (!this._views.has(id)) {\r\n      return;\r\n    }\r\n\r\n    const {viewRef} = this._views.get(id);\r\n    this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\r\n    this._views.delete(id);\r\n    this._acHtmlManager.remove(id);\r\n    primitive.element = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\r\n\r\n@Directive({\r\n  selector: '[acHtmlContainer]'\r\n})\r\nexport class AcHtmlContainerDirective implements OnInit {\r\n\r\n  private _id: any;\r\n\r\n  constructor(\r\n    private _element: ElementRef,\r\n    private _acHtmlManager: AcHtmlManager\r\n  ) {\r\n  }\r\n\r\n  @Input()\r\n  set acHtmlContainer(id: string) {\r\n    this._id = id;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this._id === undefined) {\r\n      throw new Error(`AcHtml container ERROR: entity id not defined`);\r\n    }\r\n\r\n    const entity = this._acHtmlManager.get(this._id);\r\n    entity.primitive.element = this._element.nativeElement;\r\n  }\r\n}\r\n","import { Component, ContentChild, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\r\nimport { AcHtmlDirective } from '../../directives/ac-html/ac-html.directive';\r\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\r\n\r\n/**\r\n *  This is an html implementation.\r\n *  The ac-html element must be a child of ac-layer element.\r\n *  <br>\r\n *  [props] accepts position(Cartesian3) and show(boolean).\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-layer acFor=\"let html of htmls$\" [context]=\"this\">\r\n <ac-html-desc props=\"{position: html.position, show: html.show}\">\r\n <ng-template let-html>\r\n <div>\r\n <h1>This is ac-html {{html.name}}</h1>\r\n <button (click)=\"changeText(html, 'Test')\">change text</button>\r\n </div>\r\n </ng-template>\r\n </ac-html-desc>\r\n *  <ac-html [props]=\"{position: position, show: true}\">;\r\n *    <p>html element</p>\r\n *  </ac-html>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-html-desc',\r\n  providers: [AcHtmlManager],\r\n  template: `\r\n      <div *acHtml=\"let acHtmlEntityId = id; let acHtmlContext = context\">\r\n          <div [acHtmlContainer]=\"acHtmlEntityId\">\r\n              <ng-template [ngTemplateOutlet]=\"acHtmlTemplate\"\r\n                           [ngTemplateOutletContext]=\"acHtmlContext\"></ng-template>\r\n          </div>\r\n      </div>`\r\n})\r\nexport class AcHtmlDescComponent extends BasicDesc implements OnInit {\r\n\r\n  @ViewChild(AcHtmlDirective, {static: true}) acHtmlCreator: AcHtmlDirective;\r\n  @ContentChild(TemplateRef, {static: true}) acHtmlTemplate: TemplateRef<any>;\r\n\r\n  constructor(htmlDrawer: HtmlDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(htmlDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (!this.acHtmlCreator) {\r\n      throw new Error(`AcHtml desc ERROR: ac html directive not found.`);\r\n    }\r\n\r\n    if (!this.acHtmlTemplate) {\r\n      throw new Error(`AcHtml desc ERROR: html template not found.`);\r\n    }\r\n  }\r\n\r\n  draw(context: any, id: any): any {\r\n    const cesiumProps = this._propsEvaluator(context);\r\n    if (!this._cesiumObjectsMap.has(id)) {\r\n      const primitive = this._drawer.add(cesiumProps);\r\n      this._cesiumObjectsMap.set(id, primitive);\r\n      this.acHtmlCreator.addOrUpdate(id, primitive);\r\n    } else {\r\n      const primitive = this._cesiumObjectsMap.get(id);\r\n      this._drawer.update(primitive, cesiumProps);\r\n      this.acHtmlCreator.addOrUpdate(id, primitive);\r\n    }\r\n  }\r\n\r\n  remove(id: string): void {\r\n    const primitive = this._cesiumObjectsMap.get(id);\r\n    this._drawer.remove(primitive);\r\n    this._cesiumObjectsMap.delete(id);\r\n    this.acHtmlCreator.remove(id, primitive);\r\n  }\r\n\r\n  removeAll(): void {\r\n    this._cesiumObjectsMap.forEach(((primitive, id) => {\r\n      this.acHtmlCreator.remove(id, primitive);\r\n    }));\r\n    this._cesiumObjectsMap.clear();\r\n    this._drawer.removeAll();\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AcNotification } from '../../models/ac-notification';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { IDescription } from '../../models/description';\r\nimport { get } from 'lodash';\r\nimport { AcLayerComponent } from '../ac-layer/ac-layer.component';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\n\r\n/**\r\n *  This is component represents an array under `ac-layer`.\r\n *  The element must be a child of ac-layer element.\r\n *  + acFor `{string}` - get the tracked array and entityName (see the example).\r\n *  + idGetter `{Function}` - a function that gets the id for a given element in the array -should be defined for maximum performance.\r\n *  + show `{boolean}` - show/hide array's entities.\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *<ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [store]=\"true\">\r\n *  <ac-array-desc acFor=\"let arrayItem of track.array\" [idGetter]=\"trackArrayIdGetter\">\r\n *    <ac-array-desc acFor=\"let innerArrayItem of arrayItem.innerArray\" [idGetter]=\"trackArrayIdGetter\">\r\n *      <ac-point-desc props=\"{\r\n *        position: innerArrayItem.pos,\r\n *        pixelSize: 10,\r\n *        color: getTrackColor(track),\r\n *        outlineColor: Color.BLUE,\r\n *        outlineWidth: 1\r\n *      }\">\r\n *      </ac-point-desc>\r\n *    </ac-array-desc>\r\n *  </ac-array-desc>\r\n *</ac-layer>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-array-desc',\r\n  template: `\r\n    <ac-layer #layer [acFor]=\"getAcForString()\"\r\n              [context]=\"layerService.context\"\r\n              [options]=\"layerService.options\"\r\n              [show]=\"layerService.show && show\"\r\n              [zIndex]=\"layerService.zIndex\">\r\n      <ng-content #content></ng-content>\r\n    </ac-layer>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcArrayDescComponent implements OnChanges, OnInit, AfterContentInit, OnDestroy, IDescription {\r\n\r\n  @Input() acFor: string;\r\n\r\n  @Input() idGetter: (item: any, index: number) => string;\r\n\r\n  @Input() show = true;\r\n  @ViewChild('layer', {static: true}) private layer: AcLayerComponent;\r\n  @ContentChildren(BasicDesc, {descendants: false}) private basicDescs: any;\r\n  @ContentChildren(AcArrayDescComponent, {descendants: false}) private arrayDescs: any;\r\n  private entitiesMap = new Map<string, string[]>();\r\n  private layerServiceSubscription: Subscription;\r\n  private id = 0;\r\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\r\n  entityName: string;\r\n  arrayPath: string;\r\n  arrayObservable$ = new Subject<AcNotification>();\r\n\r\n  constructor(public layerService: LayerService, private cd: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['acFor'].firstChange) {\r\n      const acForString = changes['acFor'].currentValue;\r\n      if (!this.acForRgx.test(acForString)) {\r\n        throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${acForString}`);\r\n      }\r\n      const acForArr = changes['acFor'].currentValue.split(' ');\r\n      this.arrayPath = acForArr[3];\r\n      this.entityName = acForArr[1];\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.layer) {\r\n      this.layer.getLayerService().cache = false;\r\n    }\r\n\r\n    this.layerServiceSubscription = this.layerService.layerUpdates().subscribe(() => {\r\n      this.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.layerService.context['arrayObservable$'] = this.arrayObservable$;\r\n    this.layerService.registerDescription(this);\r\n    this.basicDescs._results.forEach((component: BasicDesc) => {\r\n      component.setLayerService(this.layer.getLayerService());\r\n    });\r\n    this.arrayDescs._results.splice(0, 1);\r\n    this.arrayDescs._results.forEach((component: AcArrayDescComponent) => {\r\n      this.layerService.unregisterDescription(component);\r\n      this.layer.getLayerService().registerDescription(component);\r\n      component.layerService = this.layer.getLayerService();\r\n      component.setLayerService(this.layer.getLayerService());\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.layerServiceSubscription) {\r\n      this.layerServiceSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  setLayerService(layerService: LayerService) {\r\n    this.layerService = layerService;\r\n  }\r\n\r\n  draw(context: any, id: string, contextEntity: any) {\r\n    const entitiesArray: any[] = get(context, this.arrayPath);\r\n    if (!entitiesArray) {\r\n      return;\r\n    }\r\n    const previousEntitiesIdArray = this.entitiesMap.get(id);\r\n    const entitiesIdArray: any[] = [];\r\n    this.entitiesMap.set(id, entitiesIdArray);\r\n\r\n    entitiesArray.forEach((item, index) => {\r\n      this.layerService.context[this.entityName] = item;\r\n      const arrayItemId = this.generateCombinedId(id, item, index);\r\n      entitiesIdArray.push(arrayItemId);\r\n      this.layer.update(contextEntity, arrayItemId);\r\n    });\r\n\r\n    if (previousEntitiesIdArray) {\r\n      const entitiesToRemove = this.idGetter ?\r\n        previousEntitiesIdArray.filter((entityId) => entitiesIdArray.indexOf(entityId) < 0) :\r\n        previousEntitiesIdArray;\r\n      if (entitiesToRemove) {\r\n        entitiesToRemove.forEach((entityId) => this.layer.remove(entityId));\r\n      }\r\n    }\r\n  }\r\n\r\n  remove(id: string) {\r\n    const entitiesIdArray = this.entitiesMap.get(id);\r\n    if (entitiesIdArray) {\r\n      entitiesIdArray.forEach((entityId) => this.layer.remove(entityId));\r\n    }\r\n    this.entitiesMap.delete(id);\r\n  }\r\n\r\n  removeAll() {\r\n    this.layer.removeAll();\r\n    this.entitiesMap.clear();\r\n  }\r\n\r\n  getAcForString() {\r\n    return `let ${this.entityName + '___temp'} of arrayObservable$`;\r\n  }\r\n\r\n  private generateCombinedId(entityId: string, arrayItem: any, index: number): string {\r\n    let arrayItemId;\r\n    if (this.idGetter) {\r\n      arrayItemId = this.idGetter(arrayItem, index);\r\n    } else {\r\n      arrayItemId = (this.id++) % Number.MAX_SAFE_INTEGER;\r\n    }\r\n    return entityId + arrayItemId;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\r\n\r\n/**\r\n *  This is a label primitive implementation.\r\n *  The ac-label element must be a child of ac-layer element.\r\n *  The properties of props are:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Point.html\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    <ac-point-primitive-desc props=\"{\r\n *      position: track.position,\r\n *      color: Color.RED\r\n *    }\">\r\n *    </ac-point-primitive-desc>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-point-primitive-desc',\r\n  template: '',\r\n})\r\nexport class AcPointPrimitiveDescComponent extends BasicDesc {\r\n\r\n  constructor(pointPrimitiveDrawerService: PointPrimitiveDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(pointPrimitiveDrawerService, layerService, computationCache, cesiumProperties);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\r\n\r\n/**\r\n *  This is a polyline implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Polyline Primitive:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *  <ac-polyline [props]=\"{\r\n *    position: position,\r\n *    text: 'labelText',\r\n *    font: '30px sans-serif'\r\n *    color: Color.GREEN\r\n *  }\">;\r\n *  </ac-polyline>\r\n *  ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ac-primitive-polyline',\r\n  template: '',\r\n})\r\nexport class AcPrimitivePolylineComponent extends EntityOnMapComponent {\r\n\r\n  constructor(polylineDrawer: PolylinePrimitiveDrawerService, mapLayers: MapLayersService) {\r\n    super(polylineDrawer, mapLayers);\r\n  }\r\n}\r\n","import { PixelOffsetPipe } from './pixel-offset/pixel-offset.pipe';\r\nimport { RadiansToDegreesPipe } from './radians-to-degrees/radians-to-degrees.pipe';\r\n\r\n// For angular parse usage\r\nexport default [\r\n  {pipeName: 'pixelOffset', pipeInstance: new PixelOffsetPipe()},\r\n  {pipeName: 'radiansToDegrees', pipeInstance: new RadiansToDegreesPipe()},\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\n\r\n/**\r\n *  This is a czml implementation.\r\n *  The ac-czml-desc element must be a child of ac-layer element.\r\n *\r\n *  See CZML Guide for the structure of props.czmlPacket:\r\n *  + https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Structure\r\n *\r\n *  Attention: the first czmlPacket in the stream needs to be a document\r\n *  with an id and a name attribute. See this example\r\n *  + https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML%20Point%20-%20Time%20Dynamic.html&label=CZML\r\n *\r\n *  To see a working example, use the demo app and\r\n *  + uncomment <czml-layer></czml-layer> in demo-map.component.html\r\n *  + set the properties 'timeline', 'animation' and 'shouldAnimate' true in viewerOptions of demo-map.component.ts\r\n *\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-czml-desc props=\"{\r\n *      czmlPacket: czmlPacket\r\n *    }\">\r\n *    </ac-czml-desc>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-czml-desc',\r\n  template: '',\r\n})\r\nexport class AcCzmlDescComponent extends BasicDesc implements OnInit {\r\n  constructor(czmlDrawer: CzmlDrawerService, layerService: LayerService,\r\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n    super(czmlDrawer, layerService, computationCache, cesiumProperties);\r\n  }\r\n\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\r\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\n\r\n/**\r\n *  This is a rectangle implementation.\r\n *  The ac-label element must be a child of ac-map element.\r\n *  The properties of props are the same as the properties of Entity and RectangleGraphics:\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *    <ac-rectangle props=\"{\r\n *      coordinates: rectangle.coordinates,\r\n *      material: rectangle.material,\r\n *      height: rectangle.height\r\n *    }\">\r\n *    </ac-rectangle>\r\n *  ```\r\n */\r\n@Component({\r\n  selector: 'ac-rectangle',\r\n  template: ''\r\n})\r\nexport class AcRectangleComponent extends EntityOnMapComponent {\r\n  constructor(rectangleDrawer: RectangleDrawerService, mapLayers: MapLayersService) {\r\n    super(rectangleDrawer, mapLayers);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AcMapComponent } from './components/ac-map/ac-map.component';\r\nimport { AcLayerComponent } from './components/ac-layer/ac-layer.component';\r\nimport { AcBillboardComponent } from './components/ac-billboard/ac-billboard.component';\r\nimport { AcBillboardDescComponent } from './components/ac-billborad-desc/ac-billborad-desc.component';\r\nimport { AcEllipseDescComponent } from './components/ac-ellipse-desc/ac-ellipse-desc.component';\r\nimport { AcPolylineDescComponent } from './components/ac-polyline-desc/ac-polyline-desc.component';\r\nimport { Angular2ParseModule, PIPES_CONFIG } from '@auscope/angular2parse';\r\nimport { PixelOffsetPipe } from './pipes/pixel-offset/pixel-offset.pipe';\r\nimport { RadiansToDegreesPipe } from './pipes/radians-to-degrees/radians-to-degrees.pipe';\r\nimport { JsonMapper } from './services/json-mapper/json-mapper.service';\r\nimport { CesiumProperties } from './services/cesium-properties/cesium-properties.service';\r\nimport { AcLabelDescComponent } from './components/ac-label-desc/ac-label-desc.component';\r\nimport { UtilsModule } from './utils/utils.module';\r\nimport { ViewerFactory } from './services/viewer-factory/viewer-factory.service';\r\nimport { GeoUtilsService } from './services/geo-utils/geo-utils.service';\r\nimport { AcCircleDescComponent } from './components/ac-circle-desc/ac-circle-desc.component';\r\nimport { AcArcDescComponent } from './components/ac-arc-desc/ac-arc-desc.component';\r\nimport { AcMapLayerProviderComponent } from './components/ac-map-layer-provider/ac-map-layer-provider.component';\r\nimport { AcMapTerrainProviderComponent } from './components/ac-map-terrain-provider/ac-map-terrain-provider.component';\r\nimport { AcPointDescComponent } from './components/ac-point-desc/ac-point-desc.component';\r\nimport { AcLabelComponent } from './components/ac-label/ac-label.component';\r\nimport { AcPolylineComponent } from './components/ac-polyline/ac-polyline.component';\r\nimport { AcEllipseComponent } from './components/ac-ellipse/ac-ellipse.component';\r\nimport { AcPointComponent } from './components/ac-point/ac-point.component';\r\nimport { AcHtmlComponent } from './components/ac-html/ac-html.component';\r\nimport { AcCircleComponent } from './components/ac-circle/ac-circle.component';\r\nimport { AcArcComponent } from './components/ac-arc/ac-arc.component';\r\nimport { AcPolygonDescComponent } from './components/ac-polygon-desc/ac-polygon-desc.component';\r\nimport { AcDefaultPlonterComponent } from './components/ac-default-plonter/ac-default-plonter.component';\r\nimport { AcPolygonComponent } from './components/ac-polygon/ac-polygon.component';\r\nimport { MapsManagerService } from './services/maps-manager/maps-manager.service';\r\nimport { AcStaticEllipseDescComponent } from './components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component';\r\nimport { AcDynamicEllipseDescComponent } from './components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component';\r\nimport { AcDynamicPolylineDescComponent } from './components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component';\r\nimport { AcStaticPolygonDescComponent } from './components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component';\r\nimport { AcStaticCircleDescComponent } from './components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component';\r\nimport { AcDynamicCircleDescComponent } from './components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component';\r\nimport { AcStaticPolylineDescComponent } from './components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component';\r\nimport { AcModelDescComponent } from './components/ac-model-desc/ac-model-desc.component';\r\nimport { AcTileset3dComponent } from './components/ac-3d-tileset/ac-tileset-3d.component';\r\nimport { AcBoxDescComponent } from './components/ac-box-desc/ac-box-desc.component';\r\nimport { AcCylinderDescComponent } from './components/ac-cylinder-desc/ac-cylinder-desc.component';\r\nimport { AcCorridorDescComponent } from './components/ac-corridor-desc/ac-corridor-desc.component';\r\nimport { AcEllipsoidDescComponent } from './components/ac-ellipsoid-desc/ac-ellipsoid-desc.component';\r\nimport { AcPolylineVolumeDescComponent } from './components/ac-polyline-volume-desc/ac-polyline-volume-desc.component';\r\nimport { AcWallDescComponent } from './components/ac-wall-desc/ac-wall-desc.component';\r\nimport { AcRectangleDescComponent } from './components/ac-rectangle-desc/ac-rectangle-desc.component';\r\nimport { AcBillboardPrimitiveDescComponent } from './components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component';\r\nimport { AcLabelPrimitiveDescComponent } from './components/ac-label-primitive-desc/ac-label-primitive-desc.component';\r\nimport { AcPolylinePrimitiveDescComponent } from './components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component';\r\nimport { ModuleConfiguration } from './models/module-options';\r\nimport { ANGULAR_CESIUM_CONFIG, ConfigurationService } from './cesium-enhancements/ConfigurationService';\r\nimport { CesiumExtender } from '../cesium-extender/extender';\r\nimport { AcHtmlDescComponent } from './components/ac-html-desc/ac-html-desc.component';\r\nimport { AcHtmlDirective } from './directives/ac-html/ac-html.directive';\r\nimport { AcHtmlContainerDirective } from './directives/ac-html-container/ac-html-container.directive';\r\nimport { AcContextMenuWrapperComponent } from './components/ac-context-menu-wrapper/ac-context-menu-wrapper.component';\r\nimport { AcArrayDescComponent } from './components/ac-array-desc/ac-array-desc.component';\r\nimport { AcPointPrimitiveDescComponent } from './components/ac-point-primitive-desc/ac-point-primitive-desc.component';\r\nimport { AcPrimitivePolylineComponent } from './components/ac-primitive-polyline/ac-primitive-polyline.component';\r\nimport PARSE_PIPES_CONFIG_MAP from './pipes/pipe-config-map';\r\n\r\nimport { AcCzmlDescComponent } from './components/ac-czml-desc/ac-czml-desc.component';\r\nimport { AcRectangleComponent } from './components/ac-rectangle/ac-rectangle.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    Angular2ParseModule,\r\n    UtilsModule,\r\n  ],\r\n  declarations: [\r\n    AcMapComponent,\r\n    AcLayerComponent,\r\n    AcBillboardComponent,\r\n    AcBillboardDescComponent,\r\n    AcBillboardPrimitiveDescComponent,\r\n    AcLabelDescComponent,\r\n    AcLabelPrimitiveDescComponent,\r\n    AcEllipseDescComponent,\r\n    AcPolylineDescComponent,\r\n    AcPolylinePrimitiveDescComponent,\r\n    PixelOffsetPipe,\r\n    RadiansToDegreesPipe,\r\n    AcCircleDescComponent,\r\n    AcArcDescComponent,\r\n    AcMapLayerProviderComponent,\r\n    AcMapTerrainProviderComponent,\r\n    AcPointDescComponent,\r\n    AcLabelComponent,\r\n    AcPolylineComponent,\r\n    AcPrimitivePolylineComponent,\r\n    AcEllipseComponent,\r\n    AcPointComponent,\r\n    AcBillboardComponent,\r\n    AcHtmlComponent,\r\n    AcCircleComponent,\r\n    AcArcComponent,\r\n    AcPolygonDescComponent,\r\n    AcPolygonComponent,\r\n    AcDefaultPlonterComponent,\r\n    AcModelDescComponent,\r\n    AcTileset3dComponent,\r\n    AcBoxDescComponent,\r\n    AcCylinderDescComponent,\r\n    AcCorridorDescComponent,\r\n    AcEllipsoidDescComponent,\r\n    AcPolylineVolumeDescComponent,\r\n    AcWallDescComponent,\r\n    AcRectangleDescComponent,\r\n    AcContextMenuWrapperComponent,\r\n    AcPointPrimitiveDescComponent,\r\n    AcHtmlDescComponent,\r\n    AcHtmlDirective,\r\n    AcHtmlContainerDirective,\r\n    AcArrayDescComponent,\r\n    AcCzmlDescComponent,\r\n\r\n    AcStaticEllipseDescComponent,\r\n    AcDynamicEllipseDescComponent,\r\n    AcDynamicPolylineDescComponent,\r\n    AcStaticPolylineDescComponent,\r\n    AcDynamicCircleDescComponent,\r\n    AcStaticCircleDescComponent,\r\n    AcStaticPolygonDescComponent,\r\n    AcRectangleComponent\r\n  ],\r\n  exports: [\r\n    AcMapComponent,\r\n    AcBillboardComponent,\r\n    AcBillboardDescComponent,\r\n    AcBillboardPrimitiveDescComponent,\r\n    AcLabelDescComponent,\r\n    AcLabelPrimitiveDescComponent,\r\n    AcEllipseDescComponent,\r\n    AcPolylineDescComponent,\r\n    AcPolylinePrimitiveDescComponent,\r\n    AcLayerComponent,\r\n    AcCircleDescComponent,\r\n    AcArcDescComponent,\r\n    AcMapLayerProviderComponent,\r\n    AcMapTerrainProviderComponent,\r\n    AcPointDescComponent,\r\n    AcLabelComponent,\r\n    AcPolylineComponent,\r\n    AcPrimitivePolylineComponent,\r\n    AcEllipseComponent,\r\n    AcPointComponent,\r\n    AcBillboardComponent,\r\n    AcHtmlComponent,\r\n    AcCircleComponent,\r\n    AcArcComponent,\r\n    AcPolygonDescComponent,\r\n    AcPolygonComponent,\r\n    AcDefaultPlonterComponent,\r\n    AcModelDescComponent,\r\n    AcTileset3dComponent,\r\n    AcBoxDescComponent,\r\n    AcCylinderDescComponent,\r\n    AcCorridorDescComponent,\r\n    AcEllipsoidDescComponent,\r\n    AcPolylineVolumeDescComponent,\r\n    AcWallDescComponent,\r\n    AcRectangleDescComponent,\r\n    AcPointPrimitiveDescComponent,\r\n    AcHtmlDescComponent,\r\n    AcArrayDescComponent,\r\n    AcCzmlDescComponent,\r\n    AcRectangleComponent,\r\n    AcStaticEllipseDescComponent,\r\n    AcDynamicEllipseDescComponent,\r\n    AcDynamicPolylineDescComponent,\r\n    AcStaticPolylineDescComponent,\r\n    AcDynamicCircleDescComponent,\r\n    AcStaticCircleDescComponent,\r\n    AcStaticPolygonDescComponent,\r\n  ],\r\n})\r\nexport class AngularCesiumModule {\r\n  static forRoot(config?: ModuleConfiguration): ModuleWithProviders<AngularCesiumModule> {\r\n    return {\r\n      ngModule: AngularCesiumModule,\r\n      providers: [\r\n        JsonMapper, CesiumProperties, GeoUtilsService, ViewerFactory, MapsManagerService, ConfigurationService,\r\n        {provide: ANGULAR_CESIUM_CONFIG, useValue: config},\r\n        {provide: PIPES_CONFIG, multi: true, useValue: config && config.customPipes || []},\r\n        {provide: PIPES_CONFIG, multi: true, useValue: PARSE_PIPES_CONFIG_MAP},\r\n      ],\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    CesiumExtender.extend();\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nexport class DisposableObservable<T> extends Observable<T> {\r\n  dispose: Function;\r\n}\r\n","import { KeyboardEventModifier } from 'cesium';\r\n/**\r\n * EventModifier options for registration on map-event-manager.\r\n */\r\nexport enum CesiumEventModifier {\r\n  ALT = KeyboardEventModifier.ALT,\r\n  CTRL = KeyboardEventModifier.CTRL,\r\n  SHIFT = KeyboardEventModifier.SHIFT,\r\n}\r\n","import { filter, map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { AcEntity } from '../../models/ac-entity';\r\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\r\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\r\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\r\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\r\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\r\n\r\n\r\nexport interface SelectionOptions {\r\n  event?: CesiumEvent;\r\n  modifier?: CesiumEventModifier;\r\n  entityType?: any;\r\n}\r\n\r\n/**\r\n * Manages entity selection service for any given mouse event and modifier\r\n * the service will manage the list of selected items.\r\n * check out the example\r\n * you must provide the service yourself\r\n *\r\n *  __Usage :__\r\n * ```\r\n * // provide the service in some component\r\n * @Component({\r\n * //...\r\n *  providers: [SelectionManagerService]\r\n * }\r\n *\r\n * // Usage example:\r\n * // init selection\r\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\r\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\r\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\r\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\r\n * // Get selected\r\n * const selected = selectionManagerService.selected();\r\n *\r\n * // Or as observer\r\n * const selected$ = selectionManagerService.selected$();\r\n *\r\n * ```\r\n *\r\n */\r\n@Injectable()\r\nexport class SelectionManagerService {\r\n  selectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\r\n  selectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\r\n  private mapEventsManagerService: MapEventsManagerService;\r\n\r\n  constructor(private mapsManager: MapsManagerService) {\r\n  }\r\n\r\n  selectedEntities$(): Observable<AcEntity[]> {\r\n    return this.selectedEntitiesItems$.asObservable();\r\n  }\r\n\r\n  selectedEntities(): AcEntity[] {\r\n    return this.selectedEntitiesItems$.getValue();\r\n  }\r\n\r\n  selectedEntity$() {\r\n    return this.selectedEntitySubject$;\r\n  }\r\n\r\n  toggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\r\n    const current = this.selectedEntities();\r\n    if (current.indexOf(entity) === -1) {\r\n      this.addToSelected(entity, addSelectedIndicator);\r\n    } else {\r\n      this.removeSelected(entity, addSelectedIndicator);\r\n    }\r\n  }\r\n\r\n  private addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\r\n    if (addSelectedIndicator) {\r\n      entity['selected'] = true;\r\n    }\r\n\r\n    const current = this.selectedEntities();\r\n    this.selectedEntitySubject$.next(entity);\r\n    this.selectedEntitiesItems$.next([...current, entity]);\r\n  }\r\n\r\n  private removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\r\n    if (addSelectedIndicator) {\r\n      entity['selected'] = false;\r\n    }\r\n\r\n    const current = this.selectedEntities();\r\n    const entityIndex = current.indexOf(entity);\r\n    if (entityIndex !== -1) {\r\n      current.splice(entityIndex, 1);\r\n      this.selectedEntitiesItems$.next(current);\r\n      this.selectedEntitySubject$.next(entity);\r\n    }\r\n  }\r\n\r\n  initSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\r\n    const mapComponent = this.mapsManager.getMap(mapId);\r\n    if (!mapComponent) {\r\n      return;\r\n    }\r\n\r\n    this.mapEventsManagerService = mapComponent.getMapEventsManager();\r\n\r\n    if (!selectionOptions) {\r\n      Object.assign(selectionOptions, {event: CesiumEvent.LEFT_CLICK});\r\n    }\r\n\r\n    const eventSubscription = this.mapEventsManagerService.register({\r\n      event: selectionOptions.event,\r\n      pick: PickOptions.PICK_ONE,\r\n      modifier: selectionOptions.modifier,\r\n      entityType: selectionOptions.entityType,\r\n      priority: eventPriority,\r\n    });\r\n\r\n    eventSubscription.pipe(\r\n      map(result => result.entities),\r\n      filter(entities => entities && entities.length > 0))\r\n      .subscribe(entities => {\r\n        const entity = entities[0];\r\n        this.toggleSelection(entity, addSelectedIndicator);\r\n      });\r\n  }\r\n}\r\n","// import './src/angular-cesium/operators';\r\n\r\nexport * from './angular-cesium.module';\r\nexport * from './services';\r\nexport * from './models';\r\nexport * from './components';\r\nexport * from './pipes';\r\n","export enum EditModes {\r\n  CREATE,\r\n  EDIT,\r\n  CREATE_OR_EDIT\r\n}\r\n","export enum EditActions {\r\n  INIT,\r\n  MOUSE_MOVE,\r\n  ADD_POINT,\r\n  ADD_LAST_POINT,\r\n  CHANGE_TO_EDIT,\r\n  REMOVE_POINT,\r\n  DRAG_POINT,\r\n  DRAG_POINT_FINISH,\r\n  DRAG_SHAPE,\r\n  DRAG_SHAPE_FINISH,\r\n  DONE,\r\n  DISABLE,\r\n  ENABLE,\r\n  DISPOSE,\r\n  SET_EDIT_LABELS_RENDER_CALLBACK,\r\n  UPDATE_EDIT_LABELS,\r\n  SET_MANUALLY,\r\n  TRANSFORM,\r\n}\r\n","import { CallbackProperty, Cartesian3 } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\n//import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\r\nimport { PointProps } from './point-edit-options';\r\n\r\nexport class EditPoint extends AcEntity {\r\n  static counter = 0;\r\n  private id: string;\r\n  private editedEntityId: string;\r\n  private position: Cartesian3;\r\n  private _virtualEditPoint: boolean;\r\n  private pointProps: PointProps;\r\n  private _show = true;\r\n\r\n  constructor(entityId: string, position: Cartesian3, pointProps?: PointProps, virtualPoint = false) {\r\n    super();\r\n    this.editedEntityId = entityId;\r\n    this.position = position;\r\n    this.id = this.generateId();\r\n    this.pointProps = {...pointProps};\r\n    this._virtualEditPoint = virtualPoint;\r\n  }\r\n\r\n  get show() {\r\n    return this._show;\r\n  }\r\n\r\n  set show(value) {\r\n    this._show = value;\r\n  }\r\n\r\n  get props(): PointProps {\r\n    return this.pointProps;\r\n  }\r\n\r\n  set props(value: PointProps) {\r\n    this.pointProps = value;\r\n  }\r\n\r\n  isVirtualEditPoint(): boolean {\r\n    return this._virtualEditPoint;\r\n  }\r\n\r\n  setVirtualEditPoint(value: boolean) {\r\n    this._virtualEditPoint = value;\r\n  }\r\n\r\n  getEditedEntityId(): string {\r\n    return this.editedEntityId;\r\n  }\r\n\r\n  getPosition(): Cartesian3 {\r\n    return this.position.clone();\r\n  }\r\n\r\n  getPositionCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getPosition.bind(this), false);\r\n  }\r\n\r\n\r\n  setPosition(position: Cartesian3) {\r\n    this.position.x = position.x;\r\n    this.position.y = position.y;\r\n    this.position.z = position.z;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  private generateId(): string {\r\n    return 'edit-point-' + EditPoint.counter++;\r\n  }\r\n}\r\n","import { Cartesian3, Cartesian2, Color, HeightReference, HorizontalOrigin, LabelStyle as cLabelStyle, VerticalOrigin } from 'cesium';\r\n\r\nexport interface LabelStyle {\r\n  show?: boolean;\r\n  font?: string;\r\n  style?: any;\r\n  fillColor?: any;\r\n  outlineColor?: any;\r\n  backgroundColor?: any;\r\n  backgroundPadding?: any;\r\n  showBackground?: boolean;\r\n  scale?: number;\r\n  distanceDisplayCondition?: any;\r\n  heightReference?: any;\r\n  horizontalOrigin?: any;\r\n  eyeOffset?: Cartesian3;\r\n  position?: Cartesian3;\r\n  pixelOffset?: Cartesian2;\r\n  pixelOffsetScaleByDistance?: any;\r\n  outlineWidth?: any;\r\n  scaleByDistance?: any;\r\n  translucencyByDistance?: any;\r\n  verticalOrigin?: any;\r\n  disableDepthTestDistance?: number;\r\n}\r\n\r\nexport interface LabelProps {\r\n  text: string;\r\n  show?: boolean;\r\n  font?: string;\r\n  style?: any;\r\n  fillColor?: any;\r\n  outlineColor?: any;\r\n  backgroundColor?: any;\r\n  backgroundPadding?: any;\r\n  showBackground?: boolean;\r\n  scale?: number;\r\n  distanceDisplayCondition?: any;\r\n  heightReference?: any;\r\n  horizontalOrigin?: any;\r\n  eyeOffset?: Cartesian3;\r\n  position?: Cartesian3;\r\n  pixelOffset?: Cartesian2;\r\n  pixelOffsetScaleByDistance?: any;\r\n  outlineWidth?: any;\r\n  scaleByDistance?: any;\r\n  translucencyByDistance?: any;\r\n  verticalOrigin?: any;\r\n  disableDepthTestDistance?: number;\r\n}\r\n\r\nexport const defaultLabelProps: LabelProps = {\r\n  backgroundColor: new Color(0.165, 0.165, 0.165, 0.7),\r\n  backgroundPadding: new Cartesian2(25, 20),\r\n  distanceDisplayCondition: undefined,\r\n  fillColor: Color.WHITE,\r\n  font: '30px sans-serif',\r\n  heightReference: HeightReference.NONE,\r\n  horizontalOrigin: HorizontalOrigin.LEFT,\r\n  outlineColor: Color.BLACK,\r\n  outlineWidth: 1.0,\r\n  pixelOffset: Cartesian2.ZERO,\r\n  pixelOffsetScaleByDistance: undefined,\r\n  scale: 1.0,\r\n  scaleByDistance: undefined,\r\n  show: true,\r\n  showBackground: false,\r\n  style: cLabelStyle.FILL,\r\n  text: '',\r\n  translucencyByDistance: undefined,\r\n  verticalOrigin: VerticalOrigin.BASELINE,\r\n  eyeOffset: Cartesian3.ZERO,\r\n  disableDepthTestDistance: 0,\r\n};\r\n","import { Color, CallbackProperty, Cartesian3 } from 'cesium';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from './edit-point';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\nimport { PointEditOptions, PointProps } from './point-edit-options';\r\n\r\ninterface PositionWithPointProps {\r\n  position: Cartesian3;\r\n  pointProp?: PointProps;\r\n}\r\n\r\nexport class EditablePoint extends AcEntity {\r\n  private point: EditPoint;\r\n  private _enableEdit = true;\r\n  private _props: PointProps;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(private id: string,\r\n              private pointLayer: AcLayerComponent,\r\n              private coordinateConverter: CoordinateConverter,\r\n              private editOptions: PointEditOptions,\r\n              position?: Cartesian3) {\r\n    super();\r\n    this._props = {...editOptions.pointProps};\r\n    if (position) {\r\n      this.createFromExisting(position);\r\n    }\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels) {\r\n      return;\r\n    }\r\n    const position = this.point.getPosition();\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        label.position = position;\r\n      }\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get props(): PointProps {\r\n    return this._props;\r\n  }\r\n\r\n  set props(value: PointProps) {\r\n    this._props = value;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    if (value) {\r\n      this.point.props.color = Color.WHITE;\r\n    } else {\r\n      this.point.props.color = Color.DIMGREY;\r\n      this.point.props.pixelSize = 10;\r\n    }\r\n    this.updatePointLayer();\r\n  }\r\n\r\n  private createFromExisting(position: Cartesian3) {\r\n    this.point = new EditPoint(this.id, position, this._props);\r\n    this.updatePointLayer();\r\n  }\r\n\r\n  private hasPosition(point: PositionWithPointProps | Cartesian3): point is PositionWithPointProps {\r\n    if ((point as PositionWithPointProps).position) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setManually(point: PositionWithPointProps | Cartesian3, props?: PointProps) {\r\n    if (!this.enableEdit) {\r\n      throw new Error('Update manually only in edit mode, after point is created');\r\n    }\r\n    let newProps = props;\r\n    if (this.hasPosition(point)) {\r\n      newProps = point.pointProp ? point.pointProp : props;\r\n      this.point.setPosition(point.position);\r\n    } else {\r\n      this.point.setPosition(point);\r\n    }\r\n    this.point.props = newProps;\r\n    this.updatePointLayer();\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    this.point.setPosition(position);\r\n    this.updatePointLayer();\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3) {\r\n    if (!this.point) {\r\n      this.point = new EditPoint(this.id, toPosition, this._props);\r\n    } else {\r\n      this.point.setPosition(toPosition);\r\n    }\r\n    this.updatePointLayer();\r\n  }\r\n\r\n  getCurrentPoint(): EditPoint {\r\n    return this.point;\r\n  }\r\n\r\n  getPosition(): Cartesian3 {\r\n    return this.point.getPosition();\r\n  }\r\n\r\n  getPositionCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getPosition.bind(this), false);\r\n  }\r\n\r\n  private updatePointLayer() {\r\n    this.pointLayer.update(this.point, this.point.getId());\r\n  }\r\n\r\n  update() {\r\n    this.updatePointLayer();\r\n  }\r\n\r\n  dispose() {\r\n    this.pointLayer.remove(this.point.getId());\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { PointEditOptions } from '../../../models/point-edit-options';\r\nimport { EditablePoint } from '../../../models/editable-point';\r\n\r\n@Injectable()\r\nexport class PointsManagerService {\r\n  points: Map<string, EditablePoint> = new Map<string, EditablePoint>();\r\n\r\n  createEditablePoint(id: string,\r\n                      editPointLayer: AcLayerComponent,\r\n                      coordinateConverter: CoordinateConverter,\r\n                      editOptions?: PointEditOptions,\r\n                      position?: Cartesian3) {\r\n    const editablePoint = new EditablePoint(\r\n      id,\r\n      editPointLayer,\r\n      coordinateConverter,\r\n      editOptions,\r\n      position);\r\n    this.points.set(id, editablePoint\r\n    );\r\n  }\r\n\r\n  enableAll() {\r\n    this.points.forEach(point => point.enableEdit = true);\r\n  }\r\n\r\n  disableAll() {\r\n    this.points.forEach(point => point.enableEdit = false);\r\n  }\r\n\r\n  dispose(id: string) {\r\n    const point = this.points.get(id);\r\n    if (point.getCurrentPoint()) {\r\n      point.dispose();\r\n    }\r\n    this.points.delete(id);\r\n  }\r\n\r\n  get(id: string): EditablePoint {\r\n    return this.points.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.points.forEach(point => point.dispose());\r\n    this.points.clear();\r\n  }\r\n}\r\n","export function generateKey(length = 12): string {\r\n  let id = '';\r\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (let i = 0; i < length; i++) {\r\n    id += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    const context = this;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(context, args), wait);\r\n  };\r\n}\r\n","import { publish, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Color, Cartesian3 } from 'cesium';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\nimport { PointsManagerService } from './points-manager.service';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { generateKey } from '../../utils';\r\nimport { CesiumService } from '../../../../angular-cesium';\r\nimport { PointEditOptions, PointProps } from '../../../models/point-edit-options';\r\nimport { PointEditUpdate } from '../../../models/point-edit-update';\r\nimport { PointEditorObservable } from '../../../models/point-editor-observable';\r\n\r\nexport const DEFAULT_POINT_OPTIONS: PointEditOptions = {\r\n  addLastPointEvent: CesiumEvent.LEFT_CLICK,\r\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  allowDrag: true,\r\n  pointProps: {\r\n    color: Color.WHITE.withAlpha(0.95),\r\n    outlineColor: Color.BLACK.withAlpha(0.5),\r\n    outlineWidth: 1,\r\n    pixelSize: 10,\r\n    show: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n};\r\n\r\n/**\r\n * Service for creating editable point\r\n *\r\n *  * You must provide `PointsEditorService` yourself.\r\n * PolygonsEditorService works together with `<points-editor>` component. Therefor you need to create `<points-editor>`\r\n * for each `PointsEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PointEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PointEditorObservable`.\r\n * + To stop editing call `dsipose()` from the `PointEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over editted shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `PointEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating point\r\n *  const editing$ = pointEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit point from existing point cartesian3 positions\r\n *  const editing$ = this.pointEditor.edit(initialPos);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class PointsEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<PointEditUpdate>();\r\n  private updatePublisher = publish<PointEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private pointManager: PointsManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n  private cesiumScene;\r\n\r\n  init(mapEventsManager: MapEventsManagerService,\r\n       coordinateConverter: CoordinateConverter,\r\n       cameraService: CameraService,\r\n       pointManager: PointsManagerService,\r\n       cesiumViewer: CesiumService) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.pointManager = pointManager;\r\n    this.updatePublisher.connect();\r\n\r\n    this.cesiumScene = cesiumViewer.getScene();\r\n  }\r\n\r\n  onUpdate(): Observable<PointEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  private screenToPosition(cartesian2) {\r\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\r\n\r\n    // If cartesian3 is undefined then the point inst on the globe\r\n    if (cartesian3) {\r\n      const ray = this.cameraService.getCamera().getPickRay(cartesian2);\r\n      return this.cesiumScene.globe.pick(ray, this.cesiumScene);\r\n    }\r\n    return cartesian3;\r\n  }\r\n\r\n  create(options = DEFAULT_POINT_OPTIONS, eventPriority = 100): PointEditorObservable {\r\n    const id = generateKey();\r\n    const pointOptions = this.setOptions(options);\r\n\r\n    const clientEditSubject = new BehaviorSubject<PointEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      pointOptions: pointOptions,\r\n    });\r\n\r\n    const finishCreation = (position: Cartesian3) => {\r\n      return this.switchToEditMode(\r\n        id,\r\n        clientEditSubject,\r\n        position,\r\n        eventPriority,\r\n        pointOptions,\r\n        editorObservable,\r\n        true\r\n      );\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n      pickConfig: options.pickConfiguration,\r\n    });\r\n    const addLastPointRegistration = this.mapEventsManager.register({\r\n      event: pointOptions.addLastPointEvent,\r\n      modifier: pointOptions.addLastPointModifier,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n      pickConfig: options.pickConfiguration,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addLastPointRegistration]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.screenToPosition(endPosition);\r\n      if (position) {\r\n\r\n        this.updateSubject.next({\r\n          id,\r\n          position,\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        });\r\n      }\r\n    });\r\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.screenToPosition(endPosition);\r\n      finishedCreate = finishCreation(position);\r\n    });\r\n    return editorObservable;\r\n  }\r\n\r\n  private switchToEditMode(id,\r\n                           clientEditSubject,\r\n                           position: Cartesian3,\r\n                           eventPriority,\r\n                           pointOptions,\r\n                           editorObservable,\r\n                           finishedCreate: boolean) {\r\n    const update = {\r\n      id,\r\n      position: position,\r\n      editMode: EditModes.CREATE_OR_EDIT,\r\n      updatedPosition: position,\r\n      editAction: EditActions.ADD_LAST_POINT,\r\n    };\r\n    this.updateSubject.next(update);\r\n    clientEditSubject.next({\r\n      ...update,\r\n      position: position,\r\n      point: this.getPoint(id),\r\n    });\r\n\r\n    const changeMode = {\r\n      id,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.CHANGE_TO_EDIT,\r\n    };\r\n    this.updateSubject.next(changeMode);\r\n    clientEditSubject.next(changeMode);\r\n    if (this.observablesMap.has(id)) {\r\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n    }\r\n    this.observablesMap.delete(id);\r\n    this.editPoint(id, position, eventPriority, clientEditSubject, pointOptions, editorObservable);\r\n    finishedCreate = true;\r\n    return finishedCreate;\r\n  }\r\n\r\n  edit(position: Cartesian3, options = DEFAULT_POINT_OPTIONS, priority = 100): PointEditorObservable {\r\n    const id = generateKey();\r\n    const pointOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<PointEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT\r\n    });\r\n    const update = {\r\n      id,\r\n      position: position,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      pointOptions: pointOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n      position: position,\r\n      point: this.getPoint(id),\r\n    });\r\n    return this.editPoint(\r\n      id,\r\n      position,\r\n      priority,\r\n      editSubject,\r\n      pointOptions\r\n    );\r\n  }\r\n\r\n  private editPoint(id: string,\r\n                       position: Cartesian3,\r\n                       priority: number,\r\n                       editSubject: Subject<PointEditUpdate>,\r\n                       options: PointEditOptions,\r\n                       editObservable?: PointEditorObservable) {\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: options.dragPointEvent,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    const pointRemoveRegistration = this.mapEventsManager.register({\r\n      event: options.removePointEvent,\r\n      modifier: options.removePointModifier,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    pointDragRegistration.pipe(\r\n      tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\r\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\r\n        const updatedPosition = this.screenToPosition(endPosition);\r\n        if (!updatedPosition) {\r\n          return;\r\n        }\r\n        const update = {\r\n          id,\r\n          editMode: EditModes.EDIT,\r\n          updatedPosition,\r\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n          position: updatedPosition,\r\n          point: this.getPoint(id),\r\n        });\r\n\r\n      });\r\n\r\n    const observables = [pointDragRegistration, pointRemoveRegistration];\r\n    this.observablesMap.set(id, observables);\r\n    return this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private setOptions(options: PointEditOptions) {\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POINT_OPTIONS));\r\n    const pointOptions: PointEditOptions = Object.assign(defaultClone, options);\r\n    pointOptions.pointProps = {...DEFAULT_POINT_OPTIONS.pointProps, ...options.pointProps};\r\n    pointOptions.pointProps = {...DEFAULT_POINT_OPTIONS.pointProps, ...options.pointProps};\r\n    return pointOptions;\r\n  }\r\n\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\r\n                                                                                                    : PointEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        position: this.getPosition(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        position: this.getPosition(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setManually = (point: {\r\n      position: Cartesian3,\r\n      pointProp?: PointProps\r\n    } | Cartesian3, pointProps?: PointProps) => {\r\n      const newPoint = this.pointManager.get(id);\r\n      newPoint.setManually(point, pointProps);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      });\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      });\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Points editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation(null);\r\n    };\r\n\r\n    observableToExtend.getCurrentPoint = () => this.getPoint(id);\r\n\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n\r\n    observableToExtend.getLabels = (): LabelProps[] => this.pointManager.get(id).labels;\r\n\r\n    return observableToExtend as PointEditorObservable;\r\n  }\r\n\r\n  private getPosition(id: string) {\r\n    const point = this.pointManager.get(id);\r\n    return point.getPosition();\r\n  }\r\n\r\n  private getPoint(id: string) {\r\n    const point = this.pointManager.get(id);\r\n    if (point) {\r\n      return point.getCurrentPoint();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport * as Cesium from 'cesium';\r\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { PointsEditorService } from '../../services/entity-editors/points-editor/points-editor.service';\r\nimport { PointsManagerService } from '../../services/entity-editors/points-editor/points-manager.service';\r\nimport { PointEditUpdate } from '../../models/point-edit-update';\r\nimport { EditablePoint } from '../../models/editable-point';\r\nimport { LabelProps } from '../../models/label-props';\r\n\r\n@Component({\r\n  selector: 'points-editor',\r\n  template: /*html*/ `\r\n    <ac-layer #editPointLayer acFor=\"let point of editPoint$\" [context]=\"this\">\r\n      <ac-point-desc\r\n        props=\"{\r\n        position: point.getPositionCallbackProperty(),\r\n        pixelSize: getPointSize(point),\r\n        color: point.props.color,\r\n        outlineColor: point.props.outlineColor,\r\n        outlineWidth: point.props.outlineWidth,\r\n        show: getPointShow(point),\r\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n        heightReference: point.props.heightReference,\r\n    }\"\r\n      ></ac-point-desc>\r\n    </ac-layer>\r\n\r\n    <ac-layer #pointLabelsLayer acFor=\"let pointLabels of pointLabels$\" [context]=\"this\">\r\n      <ac-array-desc acFor=\"let label of pointLabels.labels\" [idGetter]=\"getLabelId\">\r\n        <ac-label-primitive-desc\r\n          props=\"{\r\n            position: label.position,\r\n            backgroundColor: label.backgroundColor,\r\n            backgroundPadding: label.backgroundPadding,\r\n            distanceDisplayCondition: label.distanceDisplayCondition,\r\n            eyeOffset: label.eyeOffset,\r\n            fillColor: label.fillColor,\r\n            font: label.font,\r\n            heightReference: label.heightReference,\r\n            horizontalOrigin: label.horizontalOrigin,\r\n            outlineColor: label.outlineColor,\r\n            outlineWidth: label.outlineWidth,\r\n            pixelOffset: label.pixelOffset,\r\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n            scale: label.scale,\r\n            scaleByDistance: label.scaleByDistance,\r\n            show: label.show,\r\n            showBackground: label.showBackground,\r\n            style: label.style,\r\n            text: label.text,\r\n            translucencyByDistance: label.translucencyByDistance,\r\n            verticalOrigin: label.verticalOrigin,\r\n            disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\"\r\n        >\r\n        </ac-label-primitive-desc>\r\n      </ac-array-desc>\r\n    </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, PointsManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PointsEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: PointEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoint$ = new Subject<AcNotification>();\r\n  public pointLabels$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editPointLayer') private editPointLayer: AcLayerComponent;\r\n  @ViewChild('pointLabelsLayer') private pointLabelsLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private pointsEditor: PointsEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private pointsManager: PointsManagerService,\r\n    private cesiumService: CesiumService,\r\n  ) {\r\n    this.pointsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, pointsManager, this.cesiumService);\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.pointsEditor.onUpdate().subscribe((update: PointEditUpdate) => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(point: EditablePoint, update: PointEditUpdate, labels?: LabelProps[]) {\r\n    if (labels) {\r\n      point.labels = labels;\r\n      this.pointLabelsLayer.update(point, point.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    update.position = point.getPosition();\r\n    update.point = point.getCurrentPoint();\r\n    point.labels = this.editLabelsRenderFn(update, point.labels);\r\n    this.pointLabelsLayer.update(point, point.getId());\r\n  }\r\n\r\n  removeEditLabels(point: EditablePoint) {\r\n    point.labels = [];\r\n    this.pointLabelsLayer.remove(point.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: PointEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.pointsManager.createEditablePoint(\r\n          update.id,\r\n          this.editPointLayer,\r\n          this.coordinateConverter,\r\n          update.pointOptions,\r\n          update.position\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.ADD_LAST_POINT: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          point.addLastPoint(update.updatedPosition);\r\n          this.renderEditLabels(point, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          point.movePoint(update.updatedPosition);\r\n          this.renderEditLabels(point, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (point && point.getCurrentPoint()) {\r\n          this.removeEditLabels(point);\r\n        }\r\n        this.pointsManager.dispose(update.id);\r\n        this.editLabelsRenderFn = undefined;\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const point = this.pointsManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(point, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const point = this.pointsManager.get(update.id);\r\n        this.renderEditLabels(point, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const point = this.pointsManager.get(update.id);\r\n        this.renderEditLabels(point, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: PointEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.pointsManager.createEditablePoint(\r\n          update.id,\r\n          this.editPointLayer,\r\n          this.coordinateConverter,\r\n          update.pointOptions,\r\n          update.position,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (point && point.enableEdit) {\r\n          point.movePoint(update.updatedPosition);\r\n          this.renderEditLabels(point, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (point && point.enableEdit) {\r\n          point.movePoint(update.updatedPosition);\r\n          this.renderEditLabels(point, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (point) {\r\n          point.enableEdit = false;\r\n          this.renderEditLabels(point, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const point = this.pointsManager.get(update.id);\r\n        if (point) {\r\n          point.enableEdit = true;\r\n          this.renderEditLabels(point, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pointsManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n","import { CallbackProperty, Cartesian3 } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { PolylineProps } from './polyline-edit-options';\r\n\r\nexport class EditPolyline extends AcEntity {\r\n  static counter = 0;\r\n  private editedEntityId: string;\r\n  private id: string;\r\n  private positions: Cartesian3[];\r\n  private _polylineProps: PolylineProps;\r\n\r\n  constructor(entityId: string, startPosition: Cartesian3, endPosition: Cartesian3, polylineProps?: PolylineProps) {\r\n    super();\r\n    this.editedEntityId = entityId;\r\n    this.id = this.generateId();\r\n    this.positions = [startPosition, endPosition];\r\n    this._polylineProps = {...polylineProps};\r\n  }\r\n\r\n  get props(): PolylineProps {\r\n    return this._polylineProps;\r\n  }\r\n\r\n  set props(value: PolylineProps) {\r\n    this._polylineProps = value;\r\n  }\r\n\r\n  getEditedEntityId(): string {\r\n    return this.editedEntityId;\r\n  }\r\n\r\n  getPositions(): any[] {\r\n    return this.positions.map(p => p.clone());\r\n  }\r\n\r\n\r\n  getPositionsCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getPositions.bind(this), false);\r\n  }\r\n\r\n  validatePositions(): boolean {\r\n    return this.positions[0] !== undefined && this.positions[1] !== undefined;\r\n  }\r\n\r\n  getStartPosition() {\r\n    return this.positions[0];\r\n  }\r\n\r\n  getEndPosition() {\r\n    return this.positions[1];\r\n  }\r\n\r\n  setStartPosition(position: Cartesian3) {\r\n    this.positions[0] = position;\r\n  }\r\n\r\n  setEndPosition(position: Cartesian3) {\r\n    this.positions[1] = position;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  private generateId(): string {\r\n    return 'edit-polyline-' + EditPolyline.counter++;\r\n  }\r\n}\r\n","import { Cartesian3, PolygonHierarchy, CallbackProperty } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditPolyline } from './edit-polyline';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { PolygonEditOptions, PolygonProps } from './polygon-edit-options';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PolylineProps } from './polyline-edit-options';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\n\r\nexport class EditablePolygon extends AcEntity {\r\n  private positions: EditPoint[] = [];\r\n  private polylines: EditPolyline[] = [];\r\n  private movingPoint: EditPoint;\r\n  private doneCreation = false;\r\n  private _enableEdit = true;\r\n  private _polygonProps: PolygonProps;\r\n  private _defaultPointProps: PointProps;\r\n  private _defaultPolylineProps: PolylineProps;\r\n  private lastDraggedToPosition: Cartesian3;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(private id: string,\r\n              private polygonsLayer: AcLayerComponent,\r\n              private pointsLayer: AcLayerComponent,\r\n              private polylinesLayer: AcLayerComponent,\r\n              private coordinateConverter: CoordinateConverter,\r\n              private polygonOptions: PolygonEditOptions,\r\n              positions?: Cartesian3[]) {\r\n    super();\r\n    this.polygonProps = {...polygonOptions.polygonProps};\r\n    this.defaultPointProps = {...polygonOptions.pointProps};\r\n    this.defaultPolylineProps = {...polygonOptions.polylineProps};\r\n    if (positions && positions.length >= 3) {\r\n      this.createFromExisting(positions);\r\n    }\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels) {\r\n      return;\r\n    }\r\n    const positions = this.getRealPositions();\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        label.position = positions[index];\r\n      }\r\n\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get defaultPolylineProps(): PolylineProps {\r\n    return this._defaultPolylineProps;\r\n  }\r\n\r\n  set defaultPolylineProps(value: PolylineProps) {\r\n    this._defaultPolylineProps = value;\r\n  }\r\n\r\n  get defaultPointProps(): PointProps {\r\n    return this._defaultPointProps;\r\n  }\r\n\r\n  get polygonProps(): PolygonProps {\r\n    return this._polygonProps;\r\n  }\r\n\r\n  set polygonProps(value: PolygonProps) {\r\n    this._polygonProps = value;\r\n  }\r\n\r\n  set defaultPointProps(value: PointProps) {\r\n    this._defaultPointProps = value;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    this.positions.forEach(point => {\r\n      point.show = value;\r\n      this.updatePointsLayer(false, point);\r\n    });\r\n  }\r\n\r\n  private createFromExisting(positions: Cartesian3[]) {\r\n    positions.forEach((position) => {\r\n      this.addPointFromExisting(position);\r\n    });\r\n    this.addAllVirtualEditPoints();\r\n    this.updatePolygonsLayer();\r\n    this.doneCreation = true;\r\n  }\r\n\r\n  setPointsManually(points: { position: Cartesian3, pointProps: PointProps }[] | Cartesian3[], polygonProps?: PolygonProps) {\r\n    if (!this.doneCreation) {\r\n      throw new Error('Update manually only in edit mode, after polygon is created');\r\n    }\r\n\r\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\r\n    const newPoints: EditPoint[] = [];\r\n    for (let i = 0; i < points.length; i++) {\r\n      const pointOrCartesian: any = points[i];\r\n      let newPoint = null;\r\n      if (pointOrCartesian.pointProps) {\r\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\r\n      } else {\r\n        newPoint = new EditPoint(this.id, pointOrCartesian, this.defaultPointProps);\r\n      }\r\n      newPoints.push(newPoint);\r\n    }\r\n    this.positions = newPoints;\r\n    this.polygonProps = polygonProps ? polygonProps : this.polygonProps;\r\n    this.updatePointsLayer(true, ...this.positions);\r\n    this.addAllVirtualEditPoints();\r\n    this.updatePolygonsLayer();\r\n  }\r\n\r\n  private addAllVirtualEditPoints() {\r\n    const currentPoints = [...this.positions];\r\n    currentPoints.forEach((pos, index) => {\r\n      const currentPoint = pos;\r\n      const nextIndex = (index + 1) % (currentPoints.length);\r\n      const nextPoint = currentPoints[nextIndex];\r\n      const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\r\n      this.updatePointsLayer(false, midPoint);\r\n    });\r\n  }\r\n\r\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\r\n    const midPointCartesian3 = Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cartesian3());\r\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this.defaultPointProps);\r\n    midPoint.setVirtualEditPoint(true);\r\n\r\n    const firstIndex = this.positions.indexOf(firstP);\r\n    this.positions.splice(firstIndex + 1, 0, midPoint);\r\n    return midPoint;\r\n  }\r\n\r\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\r\n    const midPointCartesian3 = Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cartesian3());\r\n    virtualEditPoint.setPosition(midPointCartesian3);\r\n  }\r\n\r\n  changeVirtualPointToRealPoint(point: EditPoint) {\r\n    point.setVirtualEditPoint(false); // virtual point becomes a real point\r\n    const pointsCount = this.positions.length;\r\n    const pointIndex = this.positions.indexOf(point);\r\n    const nextIndex = (pointIndex + 1) % (pointsCount);\r\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\r\n\r\n    const nextPoint = this.positions[nextIndex];\r\n    const prePoint = this.positions[preIndex];\r\n\r\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\r\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\r\n    this.updatePointsLayer(true, firstMidPoint, secMidPoint, point);\r\n    this.updatePolygonsLayer();\r\n\r\n  }\r\n\r\n  private renderPolylines() {\r\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\r\n    this.polylines = [];\r\n    const realPoints = this.positions.filter(pos => !pos.isVirtualEditPoint());\r\n    realPoints.forEach((point, index) => {\r\n      const nextIndex = (index + 1) % (realPoints.length);\r\n      const nextPoint = realPoints[nextIndex];\r\n      const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.defaultPolylineProps);\r\n      this.polylines.push(polyline);\r\n      this.polylinesLayer.update(polyline, polyline.getId());\r\n    });\r\n  }\r\n\r\n  addPointFromExisting(position: Cartesian3) {\r\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\r\n    this.positions.push(newPoint);\r\n    this.updatePointsLayer(true, newPoint);\r\n  }\r\n\r\n\r\n  addPoint(position: Cartesian3) {\r\n    if (this.doneCreation) {\r\n      return;\r\n    }\r\n    const isFirstPoint = !this.positions.length;\r\n    if (isFirstPoint) {\r\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\r\n      this.positions.push(firstPoint);\r\n      this.updatePointsLayer(true, firstPoint);\r\n    }\r\n\r\n    this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\r\n    this.positions.push(this.movingPoint);\r\n\r\n    this.updatePointsLayer(true, this.movingPoint);\r\n    this.updatePolygonsLayer();\r\n  }\r\n\r\n  movePointFinish(editPoint: EditPoint) {\r\n    if (this.polygonOptions.clampHeightTo3D) {\r\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\r\n      this.updatePointsLayer(false, editPoint);\r\n    }\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\r\n    editPoint.setPosition(toPosition);\r\n    if (this.doneCreation) {\r\n      if (editPoint.props.disableDepthTestDistance && this.polygonOptions.clampHeightTo3D) {\r\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\r\n        editPoint.props.disableDepthTestDistance = undefined;\r\n        return; // ignore first move because the pickPosition() could be wrong\r\n      }\r\n\r\n      if (editPoint.isVirtualEditPoint()) {\r\n        this.changeVirtualPointToRealPoint(editPoint);\r\n      }\r\n      const pointsCount = this.positions.length;\r\n      const pointIndex = this.positions.indexOf(editPoint);\r\n      const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\r\n      const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\r\n      const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\r\n      const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\r\n      this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\r\n      this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\r\n    }\r\n    this.updatePolygonsLayer();\r\n    this.updatePointsLayer(true, editPoint);\r\n  }\r\n\r\n  moveTempMovingPoint(toPosition: Cartesian3) {\r\n    if (this.movingPoint) {\r\n      this.movePoint(toPosition, this.movingPoint);\r\n    }\r\n  }\r\n\r\n  movePolygon(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\r\n    if (!this.doneCreation) {\r\n      return;\r\n    }\r\n    if (!this.lastDraggedToPosition) {\r\n      this.lastDraggedToPosition = startMovingPosition;\r\n    }\r\n\r\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\r\n    this.positions.forEach(point => {\r\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\r\n      point.setPosition(newPos);\r\n    });\r\n    this.updatePointsLayer();\r\n    this.lastDraggedToPosition = draggedToPosition;\r\n    this.positions.forEach(point => this.updatePointsLayer(true, point));\r\n  }\r\n\r\n  endMovePolygon() {\r\n    this.lastDraggedToPosition = undefined;\r\n  }\r\n\r\n  removePoint(pointToRemove: EditPoint) {\r\n    this.removePosition(pointToRemove);\r\n    this.positions\r\n      .filter(p => p.isVirtualEditPoint())\r\n      .forEach(p => this.removePosition(p));\r\n    this.addAllVirtualEditPoints();\r\n\r\n    this.renderPolylines();\r\n    if (this.getPointsCount() >= 3) {\r\n      this.polygonsLayer.update(this, this.id);\r\n    }\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    this.doneCreation = true;\r\n    this.removePosition(this.movingPoint); // remove movingPoint\r\n    this.movingPoint = null;\r\n    this.updatePolygonsLayer();\r\n\r\n    this.addAllVirtualEditPoints();\r\n  }\r\n\r\n  getRealPositions(): Cartesian3[] {\r\n    return this.getRealPoints().map(position => position.getPosition());\r\n  }\r\n\r\n  getRealPoints(): EditPoint[] {\r\n    return this.positions.filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\r\n  }\r\n\r\n  getPoints(): EditPoint[] {\r\n    return this.positions.filter(position => position !== this.movingPoint);\r\n  }\r\n\r\n  getPositionsHierarchy(): PolygonHierarchy {\r\n    const positions = this.positions.filter(position => !position.isVirtualEditPoint()).map(position => position.getPosition().clone());\r\n    return new PolygonHierarchy(positions);\r\n  }\r\n\r\n  getPositionsHierarchyCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getPositionsHierarchy.bind(this), false);\r\n  }\r\n\r\n  private removePosition(point: EditPoint) {\r\n    const index = this.positions.findIndex((p) => p === point);\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n    this.positions.splice(index, 1);\r\n    this.pointsLayer.remove(point.getId());\r\n  }\r\n\r\n  private updatePolygonsLayer() {\r\n    if (this.getPointsCount() >= 3) {\r\n      this.polygonsLayer.update(this, this.id);\r\n    }\r\n  }\r\n\r\n  private updatePointsLayer(renderPolylines = true, ...points: EditPoint[]) {\r\n    if (renderPolylines) {\r\n      this.renderPolylines();\r\n    }\r\n    points.forEach(p => this.pointsLayer.update(p, p.getId()));\r\n  }\r\n\r\n  dispose() {\r\n    this.polygonsLayer.remove(this.id);\r\n\r\n    this.positions.forEach(editPoint => {\r\n      this.pointsLayer.remove(editPoint.getId());\r\n    });\r\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\r\n    if (this.movingPoint) {\r\n      this.pointsLayer.remove(this.movingPoint.getId());\r\n      this.movingPoint = undefined;\r\n    }\r\n    this.positions.length = 0;\r\n  }\r\n\r\n  getPointsCount(): number {\r\n    return this.positions.length;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Cartesian3 } from 'cesium';\r\nimport { EditablePolygon } from '../../../models/editable-polygon';\r\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\r\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\n@Injectable()\r\nexport class PolygonsManagerService {\r\n  polygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\r\n\r\n  createEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\r\n                        editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\r\n                        polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\r\n    const editablePolygon = new EditablePolygon(\r\n      id,\r\n      editPolygonsLayer,\r\n      editPointsLayer,\r\n      editPolylinesLayer,\r\n      coordinateConverter,\r\n      polygonOptions,\r\n      positions);\r\n    this.polygons.set(id, editablePolygon\r\n    );\r\n  }\r\n\r\n  dispose(id: string) {\r\n    this.polygons.get(id).dispose();\r\n    this.polygons.delete(id);\r\n  }\r\n\r\n  get(id: string): EditablePolygon {\r\n    return this.polygons.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.polygons.forEach(polygon => polygon.dispose());\r\n    this.polygons.clear();\r\n  }\r\n}\r\n","import { publish, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Color, ClassificationType, sampleTerrain, Cartographic, HeightReference, Cartesian3 } from 'cesium';\r\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { PolygonEditUpdate } from '../../../models/polygon-edit-update';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\nimport { PolygonsManagerService } from './polygons-manager.service';\r\nimport { PolygonEditorObservable } from '../../../models/polygon-editor-observable';\r\nimport { EditablePolygon } from '../../../models/editable-polygon';\r\nimport { PolygonEditOptions, PolygonProps } from '../../../models/polygon-edit-options';\r\nimport { ClampTo3DOptions } from '../../../models/polyline-edit-options';\r\nimport { PointProps } from '../../../models/point-edit-options';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { debounce, generateKey } from '../../utils';\r\nimport { when } from 'when';\r\n\r\nexport const DEFAULT_POLYGON_OPTIONS: PolygonEditOptions = {\r\n  addPointEvent: CesiumEvent.LEFT_CLICK,\r\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\r\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  allowDrag: true,\r\n  pointProps: {\r\n    color: Color.WHITE.withAlpha(0.95),\r\n    outlineColor: Color.BLACK.withAlpha(0.2),\r\n    outlineWidth: 1,\r\n    pixelSize: 13,\r\n    virtualPointPixelSize: 8,\r\n    show: true,\r\n    showVirtual: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n  polygonProps: {\r\n    material: Color.CORNFLOWERBLUE.withAlpha(0.4),\r\n    fill: true,\r\n    classificationType: ClassificationType.BOTH,\r\n    zIndex: 0,\r\n  },\r\n  polylineProps: {\r\n    material: () => Color.WHITE,\r\n    width: 3,\r\n    clampToGround: false,\r\n    zIndex: 0,\r\n    classificationType: ClassificationType.BOTH,\r\n  },\r\n  clampHeightTo3D: false,\r\n  clampHeightTo3DOptions: {\r\n    clampToTerrain: false,\r\n    clampMostDetailed: true,\r\n    clampToHeightPickWidth: 2,\r\n  },\r\n};\r\n\r\n/**\r\n * Service for creating editable polygons\r\n *\r\n * You must provide `PolygonsEditorService` yourself.\r\n * PolygonsEditorService works together with `<polygons-editor>` component. Therefor you need to create `<polygons-editor>`\r\n * for each `PolygonsEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolygonEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolygonEditorObservable`.\r\n * + To stop editing call `dsipose()` from the `PolygonEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over edited shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `PolygonEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating polygon\r\n *  const editing$ = polygonsEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit polygon from existing polygon positions\r\n *  const editing$ = this.polygonsEditorService.edit(initialPos);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class PolygonsEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<PolygonEditUpdate>();\r\n  private updatePublisher = publish<PolygonEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private polygonsManager: PolygonsManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n  private cesiumScene: any;\r\n\r\n  private clampPointsDebounced = debounce((id, clampHeightTo3D: boolean, clampHeightTo3DOptions) => {\r\n    this.clampPoints(id, clampHeightTo3D, clampHeightTo3DOptions);\r\n  }, 300);\r\n\r\n  init(mapEventsManager: MapEventsManagerService,\r\n       coordinateConverter: CoordinateConverter,\r\n       cameraService: CameraService,\r\n       polygonsManager: PolygonsManagerService,\r\n       cesiumViewer: CesiumService,\r\n  ) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.polygonsManager = polygonsManager;\r\n    this.updatePublisher.connect();\r\n\r\n    this.cesiumScene = cesiumViewer.getScene();\r\n  }\r\n\r\n  onUpdate(): Observable<PolygonEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  private clampPoints(id, clampHeightTo3D: boolean, { clampToTerrain, clampMostDetailed, clampToHeightPickWidth }: ClampTo3DOptions) {\r\n    if (clampHeightTo3D && clampMostDetailed) {\r\n      const polygon = this.polygonsManager.get(id);\r\n      const points = polygon.getPoints();\r\n\r\n      if (!clampToTerrain) {\r\n        // 3dTiles\r\n        points.forEach(point => {\r\n          point.setPosition(this.cesiumScene.clampToHeight(point.getPosition(), undefined, clampToHeightPickWidth));\r\n        });\r\n        // const cartesians = points.map(point => point.getPosition());\r\n        // const promise = this.cesiumScene.clampToHeightMostDetailed(cartesians, undefined, clampToHeightPickWidth);\r\n        // promise.then((updatedCartesians) => {\r\n        //   points.forEach((point, index) => {\r\n        //     point.setPosition(updatedCartesians[index]);\r\n        //   });\r\n        // });\r\n      } else {\r\n        const cartographics = points.map(point => this.coordinateConverter.cartesian3ToCartographic(point.getPosition()));\r\n        const promise = sampleTerrain(this.cesiumScene.terrainProvider, 11, cartographics);\r\n        when(promise, (updatedPositions) => {\r\n          points.forEach((point, index) => {\r\n            point.setPosition(Cartographic.toCartesian(updatedPositions[index]));\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private screenToPosition(cartesian2, clampHeightTo3D: boolean, { clampToHeightPickWidth, clampToTerrain }: ClampTo3DOptions) {\r\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\r\n\r\n    // If cartesian3 is undefined then the point inst on the globe\r\n    if (clampHeightTo3D && cartesian3) {\r\n      const globePositionPick = () => {\r\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\r\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\r\n      };\r\n\r\n      // is terrain?\r\n      if (clampToTerrain) {\r\n        return globePositionPick();\r\n      } else {\r\n        const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\r\n        const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\r\n        if (latLon.height < 0) {// means nothing picked -> Validate it\r\n          return globePositionPick();\r\n        }\r\n        return this.cesiumScene.clampToHeight(cartesian3PickPosition, undefined, clampToHeightPickWidth);\r\n      }\r\n    }\r\n\r\n    return cartesian3;\r\n  }\r\n\r\n  create(options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\r\n    const positions: Cartesian3[] = [];\r\n    const id = generateKey();\r\n    const polygonOptions = this.setOptions(options);\r\n\r\n    const clientEditSubject = new BehaviorSubject<PolygonEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      positions,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      polygonOptions: polygonOptions,\r\n    });\r\n\r\n    const finishCreation = (position: Cartesian3) => {\r\n      return this.switchToEditMode(\r\n        id,\r\n        position,\r\n        clientEditSubject,\r\n        positions,\r\n        priority,\r\n        polygonOptions,\r\n        editorObservable,\r\n        finishedCreate);\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n    const addPointRegistration = this.mapEventsManager.register({\r\n      event: polygonOptions.addPointEvent,\r\n      modifier: polygonOptions.addPointModifier,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n    const addLastPointRegistration = this.mapEventsManager.register({\r\n      event: polygonOptions.addLastPointEvent,\r\n      modifier: polygonOptions.addLastPointModifier,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\r\n\r\n      if (position) {\r\n        this.updateSubject.next({\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        });\r\n      }\r\n    });\r\n\r\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (finishedCreate) {\r\n        return;\r\n      }\r\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const allPositions = this.getPositions(id);\r\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\r\n        return;\r\n      }\r\n\r\n      const updateValue = {\r\n        id,\r\n        positions: allPositions,\r\n        editMode: EditModes.CREATE,\r\n        updatedPosition: position,\r\n        editAction: EditActions.ADD_POINT,\r\n      };\r\n      this.updateSubject.next(updateValue);\r\n      clientEditSubject.next({\r\n        ...updateValue,\r\n        positions: this.getPositions(id),\r\n        points: this.getPoints(id),\r\n      });\r\n\r\n      if (polygonOptions.maximumNumberOfPoints && allPositions.length + 1 === polygonOptions.maximumNumberOfPoints) {\r\n        finishedCreate = finishCreation(position);\r\n      }\r\n    });\r\n\r\n\r\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      // Add last point to positions if not already added\r\n      const allPositions = this.getPositions(id);\r\n      if (!allPositions.find((cartesian) => cartesian.equals(position))) {\r\n        const updateValue = {\r\n          id,\r\n          positions: allPositions,\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.ADD_POINT,\r\n        };\r\n        this.updateSubject.next(updateValue);\r\n        clientEditSubject.next({\r\n          ...updateValue,\r\n          positions: this.getPositions(id),\r\n          points: this.getPoints(id),\r\n        });\r\n      }\r\n\r\n      finishedCreate = finishCreation(position);\r\n    });\r\n\r\n    return editorObservable;\r\n  }\r\n\r\n  private switchToEditMode(id,\r\n                           position,\r\n                           clientEditSubject,\r\n                           positions: Cartesian3[],\r\n                           priority,\r\n                           polygonOptions,\r\n                           editorObservable,\r\n                           finishedCreate: boolean) {\r\n    const updateValue = {\r\n      id,\r\n      positions: this.getPositions(id),\r\n      editMode: EditModes.CREATE,\r\n      updatedPosition: position,\r\n      editAction: EditActions.ADD_LAST_POINT,\r\n    };\r\n    this.updateSubject.next(updateValue);\r\n    clientEditSubject.next({\r\n      ...updateValue,\r\n      positions: this.getPositions(id),\r\n      points: this.getPoints(id),\r\n    });\r\n\r\n    const changeMode = {\r\n      id,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.CHANGE_TO_EDIT,\r\n    };\r\n    this.updateSubject.next(changeMode);\r\n    clientEditSubject.next(changeMode);\r\n    if (this.observablesMap.has(id)) {\r\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n    }\r\n    this.observablesMap.delete(id);\r\n    this.editPolygon(id, positions, priority, clientEditSubject, polygonOptions, editorObservable);\r\n    finishedCreate = true;\r\n    return finishedCreate;\r\n  }\r\n\r\n  edit(positions: Cartesian3[], options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\r\n    if (positions.length < 3) {\r\n      throw new Error('Polygons editor error edit(): polygon should have at least 3 positions');\r\n    }\r\n    const id = generateKey();\r\n    const polygonOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<PolygonEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT\r\n    });\r\n    const update = {\r\n      id,\r\n      positions: positions,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      polygonOptions: polygonOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n      positions: this.getPositions(id),\r\n      points: this.getPoints(id),\r\n    });\r\n    return this.editPolygon(\r\n      id,\r\n      positions,\r\n      priority,\r\n      editSubject,\r\n      polygonOptions\r\n    );\r\n  }\r\n\r\n  private editPolygon(id: string,\r\n                      positions: Cartesian3[],\r\n                      priority: number,\r\n                      editSubject: Subject<PolygonEditUpdate>,\r\n                      options: PolygonEditOptions,\r\n                      editObservable?: PolygonEditorObservable): PolygonEditorObservable {\r\n    this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: options.dragPointEvent,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    let shapeDragRegistration;\r\n    if (options.allowDrag) {\r\n      shapeDragRegistration = this.mapEventsManager.register({\r\n        event: options.dragShapeEvent,\r\n        entityType: EditablePolygon,\r\n        pick: PickOptions.PICK_FIRST,\r\n        pickConfig: options.pickConfiguration,\r\n        priority,\r\n        pickFilter: entity => id === entity.id,\r\n      });\r\n    }\r\n    const pointRemoveRegistration = this.mapEventsManager.register({\r\n      event: options.removePointEvent,\r\n      entityType: EditPoint,\r\n      modifier: options.removePointModifier,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    pointDragRegistration.pipe(\r\n      tap(({ movement: { drop } }) => this.polygonsManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\r\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n        if (!position) {\r\n          return;\r\n        }\r\n        const point: EditPoint = entities[0];\r\n\r\n        const update = {\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.EDIT,\r\n          updatedPosition: position,\r\n          updatedPoint: point,\r\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n          positions: this.getPositions(id),\r\n          points: this.getPoints(id),\r\n        });\r\n\r\n        this.clampPointsDebounced(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n      });\r\n\r\n    if (shapeDragRegistration) {\r\n      shapeDragRegistration\r\n        .pipe(tap(({ movement: { drop } }) => this.polygonsManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\r\n          const endDragPosition = this.screenToPosition(endPosition, false, options.clampHeightTo3DOptions);\r\n          const startDragPosition = this.screenToPosition(startPosition, false, options.clampHeightTo3DOptions);\r\n          if (!endDragPosition) {\r\n            return;\r\n          }\r\n\r\n          const update = {\r\n            id,\r\n            positions: this.getPositions(id),\r\n            editMode: EditModes.EDIT,\r\n            updatedPosition: endDragPosition,\r\n            draggedPosition: startDragPosition,\r\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\r\n          };\r\n          this.updateSubject.next(update);\r\n          editSubject.next({\r\n            ...update,\r\n            positions: this.getPositions(id),\r\n            points: this.getPoints(id),\r\n          });\r\n        });\r\n    }\r\n\r\n    pointRemoveRegistration.subscribe(({ entities }) => {\r\n      const point: EditPoint = entities[0];\r\n      const allPositions = [...this.getPositions(id)];\r\n      if (allPositions.length < 4) {\r\n        return;\r\n      }\r\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\r\n      if (index < 0) {\r\n        return;\r\n      }\r\n\r\n      const update = {\r\n        id,\r\n        positions: allPositions,\r\n        editMode: EditModes.EDIT,\r\n        updatedPoint: point,\r\n        editAction: EditActions.REMOVE_POINT,\r\n      };\r\n      this.updateSubject.next(update);\r\n      editSubject.next({\r\n        ...update,\r\n        positions: this.getPositions(id),\r\n        points: this.getPoints(id),\r\n      });\r\n\r\n      this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n    });\r\n\r\n    const observables = [pointDragRegistration, pointRemoveRegistration];\r\n    if (shapeDragRegistration) {\r\n      observables.push(shapeDragRegistration);\r\n    }\r\n\r\n    this.observablesMap.set(id, observables);\r\n    return editObservable || this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private setOptions(options: PolygonEditOptions) {\r\n    if (options.maximumNumberOfPoints && options.maximumNumberOfPoints < 3) {\r\n      console.warn('Warn: PolygonEditor invalid option.' +\r\n        ' maximumNumberOfPoints smaller then 3, maximumNumberOfPoints changed to 3');\r\n      options.maximumNumberOfPoints = 3;\r\n    }\r\n\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYGON_OPTIONS));\r\n    const polygonOptions: PolygonEditOptions = Object.assign(defaultClone, options);\r\n    polygonOptions.pointProps = { ...DEFAULT_POLYGON_OPTIONS.pointProps, ...options.pointProps};\r\n    polygonOptions.polygonProps = {...DEFAULT_POLYGON_OPTIONS.polygonProps, ...options.polygonProps};\r\n    polygonOptions.polylineProps = {...DEFAULT_POLYGON_OPTIONS.polylineProps, ...options.polylineProps};\r\n    polygonOptions.clampHeightTo3DOptions = { ...DEFAULT_POLYGON_OPTIONS.clampHeightTo3DOptions, ...options.clampHeightTo3DOptions};\r\n\r\n    if (options.clampHeightTo3D) {\r\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\r\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\r\n      }\r\n\r\n      if (this.cesiumScene.pickTranslucentDepth) {\r\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\r\n      }\r\n\r\n      if (polygonOptions.pointProps.color.alpha === 1 || polygonOptions.pointProps.outlineColor.alpha === 1) {\r\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\r\n      }\r\n\r\n      polygonOptions.allowDrag = false;\r\n      polygonOptions.polylineProps.clampToGround = true;\r\n      polygonOptions.pointProps.heightReference = polygonOptions.clampHeightTo3DOptions.clampToTerrain ?\r\n        HeightReference.CLAMP_TO_GROUND : HeightReference.RELATIVE_TO_GROUND;\r\n      polygonOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\r\n    }\r\n    return polygonOptions;\r\n  }\r\n\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\r\n                                                                                                        : PolygonEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      });\r\n    };\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n      });\r\n    };\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n      });\r\n    };\r\n    observableToExtend.setManually = (points: {\r\n      position: Cartesian3, pointProps: PointProps\r\n    }[] | Cartesian3[], polygonProps?: PolygonProps) => {\r\n      const polygon = this.polygonsManager.get(id);\r\n      polygon.setPointsManually(points, polygonProps);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      });\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      });\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Polygons editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation(null);\r\n    };\r\n\r\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\r\n\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n\r\n    observableToExtend.getLabels = (): LabelProps[] => this.polygonsManager.get(id).labels;\r\n\r\n    return observableToExtend as PolygonEditorObservable;\r\n  }\r\n\r\n  private getPositions(id: string) {\r\n    const polygon = this.polygonsManager.get(id);\r\n    return polygon.getRealPositions();\r\n  }\r\n\r\n  private getPoints(id: string) {\r\n    const polygon = this.polygonsManager.get(id);\r\n    return polygon.getRealPoints();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { PolygonEditUpdate } from '../../models/polygon-edit-update';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { PolygonsManagerService } from '../../services/entity-editors/polygons-editor/polygons-manager.service';\r\nimport { PolygonsEditorService } from '../../services/entity-editors/polygons-editor/polygons-editor.service';\r\nimport { LabelProps } from '../../models/label-props';\r\nimport { EditablePolygon } from '../../models/editable-polygon';\r\n\r\n@Component({\r\n  selector: 'polygons-editor',\r\n  template: /*html*/ `\r\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\r\n      <ac-polyline-desc\r\n        props=\"{\r\n        positions: polyline.getPositionsCallbackProperty(),\r\n        width: polyline.props.width,\r\n        material: polyline.props.material(),\r\n        clampToGround: polyline.props.clampToGround,\r\n        zIndex: polyline.props.zIndex,\r\n        classificationType: polyline.props.classificationType,\r\n      }\"\r\n      >\r\n      </ac-polyline-desc>\r\n    </ac-layer>\r\n\r\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\r\n      <ac-point-desc\r\n        props=\"{\r\n        position: point.getPositionCallbackProperty(),\r\n        pixelSize: getPointSize(point),\r\n        color: point.props.color,\r\n        outlineColor: point.props.outlineColor,\r\n        outlineWidth: point.props.outlineWidth,\r\n        show: getPointShow(point),\r\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n        heightReference: point.props.heightReference,\r\n    }\"\r\n      >\r\n      </ac-point-desc>\r\n    </ac-layer>\r\n\r\n    <ac-layer #editPolygonsLayer acFor=\"let polygon of editPolygons$\" [context]=\"this\">\r\n      <ac-polygon-desc\r\n        props=\"{\r\n          hierarchy: polygon.getPositionsHierarchyCallbackProperty(),\r\n          material: polygon.polygonProps.material,\r\n          fill: polygon.polygonProps.fill,\r\n          classificationType: polygon.polygonProps.classificationType,\r\n          zIndex: polygon.polygonProps.zIndex,\r\n        }\"\r\n      >\r\n      </ac-polygon-desc>\r\n      <ac-array-desc acFor=\"let label of polygon.labels\" [idGetter]=\"getLabelId\">\r\n        <ac-label-primitive-desc\r\n          props=\"{\r\n            position: label.position,\r\n            backgroundColor: label.backgroundColor,\r\n            backgroundPadding: label.backgroundPadding,\r\n            distanceDisplayCondition: label.distanceDisplayCondition,\r\n            eyeOffset: label.eyeOffset,\r\n            fillColor: label.fillColor,\r\n            font: label.font,\r\n            heightReference: label.heightReference,\r\n            horizontalOrigin: label.horizontalOrigin,\r\n            outlineColor: label.outlineColor,\r\n            outlineWidth: label.outlineWidth,\r\n            pixelOffset: label.pixelOffset,\r\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n            scale: label.scale,\r\n            scaleByDistance: label.scaleByDistance,\r\n            show: label.show,\r\n            showBackground: label.showBackground,\r\n            style: label.style,\r\n            text: label.text,\r\n            translucencyByDistance: label.translucencyByDistance,\r\n            verticalOrigin: label.verticalOrigin,\r\n            disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\"\r\n        >\r\n        </ac-label-primitive-desc>\r\n      </ac-array-desc>\r\n    </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, PolygonsManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PolygonsEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: PolygonEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoints$ = new Subject<AcNotification>();\r\n  public editPolylines$ = new Subject<AcNotification>();\r\n  public editPolygons$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editPolygonsLayer') private editPolygonsLayer: AcLayerComponent;\r\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\r\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private polygonsEditor: PolygonsEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private polygonsManager: PolygonsManagerService,\r\n    private cesiumService: CesiumService\r\n  ) {\r\n    this.polygonsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.polygonsManager, this.cesiumService);\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.polygonsEditor.onUpdate().subscribe((update: PolygonEditUpdate) => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(polygon: EditablePolygon, update: PolygonEditUpdate, labels?: LabelProps[]) {\r\n    update.positions = polygon.getRealPositions();\r\n    update.points = polygon.getRealPoints();\r\n\r\n    if (labels) {\r\n      polygon.labels = labels;\r\n      this.editPolygonsLayer.update(polygon, polygon.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    polygon.labels = this.editLabelsRenderFn(update, polygon.labels);\r\n    this.editPolygonsLayer.update(polygon, polygon.getId());\r\n  }\r\n\r\n  removeEditLabels(polygon: EditablePolygon) {\r\n    polygon.labels = [];\r\n    this.editPolygonsLayer.update(polygon, polygon.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: PolygonEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.polygonsManager.createEditablePolygon(\r\n          update.id,\r\n          this.editPolygonsLayer,\r\n          this.editPointsLayer,\r\n          this.editPolylinesLayer,\r\n          this.coordinateConverter,\r\n          update.polygonOptions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          polygon.moveTempMovingPoint(update.updatedPosition);\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_POINT: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          polygon.moveTempMovingPoint(update.updatedPosition);\r\n          polygon.addPoint(update.updatedPosition);\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_LAST_POINT: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          polygon.addLastPoint(update.updatedPosition);\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon) {\r\n          polygon.dispose();\r\n          this.removeEditLabels(polygon);\r\n          this.editLabelsRenderFn = undefined;\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(polygon, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        this.renderEditLabels(polygon, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        this.renderEditLabels(polygon, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: PolygonEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.polygonsManager.createEditablePolygon(\r\n          update.id,\r\n          this.editPolygonsLayer,\r\n          this.editPointsLayer,\r\n          this.editPolylinesLayer,\r\n          this.coordinateConverter,\r\n          update.polygonOptions,\r\n          update.positions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon && polygon.enableEdit) {\r\n          polygon.movePoint(update.updatedPosition, update.updatedPoint);\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon && polygon.enableEdit) {\r\n          polygon.movePointFinish(update.updatedPoint);\r\n\r\n          if (update.updatedPoint.isVirtualEditPoint()) {\r\n            polygon.changeVirtualPointToRealPoint(update.updatedPoint);\r\n            this.renderEditLabels(polygon, update);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.REMOVE_POINT: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon && polygon.enableEdit) {\r\n          polygon.removePoint(update.updatedPoint);\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon) {\r\n          polygon.enableEdit = false;\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon && polygon.enableEdit) {\r\n          polygon.movePolygon(update.draggedPosition, update.updatedPosition);\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case EditActions.DRAG_SHAPE_FINISH: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon && polygon.enableEdit) {\r\n          polygon.endMovePolygon();\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const polygon = this.polygonsManager.get(update.id);\r\n        if (polygon) {\r\n          polygon.enableEdit = true;\r\n          this.renderEditLabels(polygon, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.polygonsManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { PolylineProps } from './polyline-edit-options';\r\n\r\nexport class EditArc extends AcEntity {\r\n  static counter = 0;\r\n  private id: string;\r\n  private editedEntityId: string;\r\n  private _center: Cartesian3;\r\n  private _radius: number;\r\n  private _delta: number;\r\n  private _angle: number;\r\n\r\n  constructor(entityId: string, center: Cartesian3, radius: number, delta: number, angle: number, private _arcProps: PolylineProps) {\r\n    super();\r\n    this.id = this.generateId();\r\n    this.editedEntityId = entityId;\r\n    this._center = center;\r\n    this._radius = radius;\r\n    this._delta = delta;\r\n    this._angle = angle;\r\n  }\r\n\r\n  get props() {\r\n    return this._arcProps;\r\n  }\r\n\r\n  set props(props: PolylineProps) {\r\n    this._arcProps = props;\r\n  }\r\n\r\n  get angle(): number {\r\n    return this._angle;\r\n  }\r\n\r\n  set angle(value: number) {\r\n    this._angle = value;\r\n  }\r\n\r\n  get delta(): number {\r\n    return this._delta;\r\n  }\r\n\r\n  set delta(value: number) {\r\n    this._delta = value;\r\n  }\r\n\r\n  get radius(): number {\r\n    return this._radius;\r\n  }\r\n\r\n  set radius(value: number) {\r\n    this._radius = value;\r\n  }\r\n\r\n  get center(): Cartesian3 {\r\n    return this._center;\r\n  }\r\n\r\n  set center(value: Cartesian3) {\r\n    this._center = value;\r\n  }\r\n\r\n  updateCenter(center: Cartesian3) {\r\n    this._center.x = center.x;\r\n    this._center.y = center.y;\r\n    this._center.z = center.z;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  private generateId(): string {\r\n    return 'edit-arc-' + EditArc.counter++;\r\n  }\r\n}\r\n","import { CallbackProperty, Cartesian3 } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { EditPoint } from './edit-point';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\n//import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\r\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { EditArc } from './edit-arc';\r\nimport { CircleEditOptions } from './circle-edit-options';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PolylineProps } from './polyline-edit-options';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\nimport { EllipseProps } from './ellipse-edit-options';\r\n\r\nexport class EditableCircle extends AcEntity {\r\n  private _center: EditPoint;\r\n  private _radiusPoint: EditPoint;\r\n  private _outlineArc: EditArc;\r\n  private doneCreation = false;\r\n  private _enableEdit = true;\r\n  private lastDraggedToPosition: any;\r\n  private _circleProps: EllipseProps;\r\n  private _pointProps: PointProps;\r\n  private _polylineProps: PolylineProps;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(\r\n    private id: string,\r\n    private circlesLayer: AcLayerComponent,\r\n    private pointsLayer: AcLayerComponent,\r\n    private arcsLayer: AcLayerComponent,\r\n    private options: CircleEditOptions,\r\n  ) {\r\n    super();\r\n    this._circleProps = {...options.circleProps};\r\n    this._pointProps = {...options.pointProps};\r\n    this._polylineProps = {...options.polylineProps};\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels || !this._center || !this._radiusPoint) {\r\n      return;\r\n    }\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        if (index !== labels.length - 1) {\r\n          label.position = this._center.getPosition();\r\n        } else {\r\n          label.position = this._radiusPoint.getPosition();\r\n        }\r\n      }\r\n\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get polylineProps(): PolylineProps {\r\n    return this._polylineProps;\r\n  }\r\n\r\n  set polylineProps(value: PolylineProps) {\r\n    this._polylineProps = value;\r\n  }\r\n\r\n  get pointProps(): PointProps {\r\n    return this._pointProps;\r\n  }\r\n\r\n  set pointProps(value: PointProps) {\r\n    this._pointProps = value;\r\n  }\r\n\r\n  get circleProps(): EllipseProps {\r\n    return this._circleProps;\r\n  }\r\n\r\n  set circleProps(value: EllipseProps) {\r\n    this._circleProps = value;\r\n  }\r\n\r\n  get center(): EditPoint {\r\n    return this._center;\r\n  }\r\n\r\n  get radiusPoint(): EditPoint {\r\n    return this._radiusPoint;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    this._center.show = value;\r\n    this._radiusPoint.show = value;\r\n    this.updatePointsLayer();\r\n  }\r\n\r\n  setManually(\r\n    center: Cartesian3,\r\n    radiusPoint: Cartesian3,\r\n    centerPointProp = this.pointProps,\r\n    radiusPointProp = this.pointProps,\r\n    circleProp = this.circleProps,\r\n  ) {\r\n    if (!this._center) {\r\n      this._center = new EditPoint(this.id, center, centerPointProp);\r\n    } else {\r\n      this._center.setPosition(center);\r\n    }\r\n\r\n    if (!this._radiusPoint) {\r\n      this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);\r\n    } else {\r\n      this._radiusPoint.setPosition(radiusPoint);\r\n    }\r\n\r\n    if (!this._outlineArc) {\r\n      this.createOutlineArc();\r\n    } else {\r\n      this._outlineArc.radius = this.getRadius();\r\n    }\r\n\r\n    this.circleProps = circleProp;\r\n    this.doneCreation = true;\r\n    this.updateArcsLayer();\r\n    this.updatePointsLayer();\r\n    this.updateCirclesLayer();\r\n  }\r\n\r\n  addPoint(position: Cartesian3) {\r\n    if (this.doneCreation) {\r\n      return;\r\n    }\r\n\r\n    if (!this._center) {\r\n      this._center = new EditPoint(this.id, position, this.pointProps);\r\n      this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\r\n      if (!this._outlineArc) {\r\n        this.createOutlineArc();\r\n      }\r\n    }\r\n\r\n    this.updateArcsLayer();\r\n    this.updatePointsLayer();\r\n    this.updateCirclesLayer();\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    if (this.doneCreation || !this._center || !this._radiusPoint) {\r\n      return;\r\n    }\r\n\r\n    this._radiusPoint.setPosition(position);\r\n    this.doneCreation = true;\r\n\r\n    this.updatePointsLayer();\r\n    this.updateCirclesLayer();\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3) {\r\n    if (!this._center || !this._radiusPoint) {\r\n      return;\r\n    }\r\n\r\n    this._radiusPoint.setPosition(toPosition);\r\n    this._outlineArc.radius = this.getRadius();\r\n\r\n    this.updateArcsLayer();\r\n    this.updatePointsLayer();\r\n    this.updateCirclesLayer();\r\n  }\r\n\r\n  moveCircle(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\r\n    if (!this.doneCreation) {\r\n      return;\r\n    }\r\n    if (!this.lastDraggedToPosition) {\r\n      this.lastDraggedToPosition = dragStartPosition;\r\n    }\r\n\r\n    const radius = this.getRadius();\r\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\r\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\r\n    this._center.setPosition(newCenterPosition);\r\n    this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));\r\n    this._outlineArc.radius = this.getRadius();\r\n    this._outlineArc.center = this._center.getPosition();\r\n    this.updateArcsLayer();\r\n    this.updatePointsLayer();\r\n    this.updateCirclesLayer();\r\n    this.lastDraggedToPosition = dragEndPosition;\r\n  }\r\n\r\n  endMovePolygon() {\r\n    this.lastDraggedToPosition = undefined;\r\n  }\r\n\r\n  getRadius(): number {\r\n    if (!this._center || !this._radiusPoint) {\r\n      return 0;\r\n    }\r\n    return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());\r\n  }\r\n\r\n  getRadiusCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getRadius.bind(this), false);\r\n  }\r\n\r\n  getCenter(): Cartesian3 {\r\n    return this._center ? this._center.getPosition() : undefined;\r\n  }\r\n\r\n  getCenterCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getCenter.bind(this), false);\r\n  }\r\n\r\n  getRadiusPoint(): Cartesian3 {\r\n    return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;\r\n  }\r\n\r\n  dispose() {\r\n    if (this._center) {\r\n      this.pointsLayer.remove(this._center.getId());\r\n    }\r\n\r\n    if (this._radiusPoint) {\r\n      this.pointsLayer.remove(this._radiusPoint.getId());\r\n    }\r\n\r\n    if (this._outlineArc) {\r\n      this.arcsLayer.remove(this._outlineArc.getId());\r\n    }\r\n\r\n    this.circlesLayer.remove(this.id);\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  private updateCirclesLayer() {\r\n    this.circlesLayer.update(this, this.id);\r\n  }\r\n\r\n  private updatePointsLayer() {\r\n    if (this._center) {\r\n      this.pointsLayer.update(this._center, this._center.getId());\r\n    }\r\n    if (this._radiusPoint) {\r\n      this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());\r\n    }\r\n  }\r\n\r\n  private updateArcsLayer() {\r\n    if (!this._outlineArc) {\r\n      return;\r\n    }\r\n    this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());\r\n  }\r\n\r\n  private createOutlineArc() {\r\n    if (!this._center || !this._radiusPoint) {\r\n      return;\r\n    }\r\n    this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EditableCircle } from '../../../models/editable-circle';\r\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\r\n\r\n@Injectable()\r\nexport class CirclesManagerService {\r\n  private circles = new Map<string, EditableCircle>();\r\n\r\n  createEditableCircle(id: string,\r\n                       editCirclesLayer: AcLayerComponent,\r\n                       editPointsLayer: AcLayerComponent,\r\n                       editArcsLayer: AcLayerComponent,\r\n                       circleOptions: CircleEditOptions): EditableCircle {\r\n    const editableCircle = new EditableCircle(id, editCirclesLayer, editPointsLayer, editArcsLayer, circleOptions);\r\n    this.circles.set(id, editableCircle);\r\n    return editableCircle;\r\n  }\r\n\r\n  dispose(id: string) {\r\n    const circle = this.circles.get(id);\r\n    if (circle) {\r\n      circle.dispose();\r\n    }\r\n    this.circles.delete(id);\r\n  }\r\n\r\n  get(id: string): EditableCircle {\r\n    return this.circles.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.circles.forEach(circle => circle.dispose());\r\n    this.circles.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { publish, tap } from 'rxjs/operators';\r\nimport { Color, ClassificationType, ShadowMode, Cartesian3 } from 'cesium';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { GeoUtilsService } from '../../../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\r\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\r\nimport { CircleEditUpdate } from '../../../models/circle-edit-update';\r\nimport { CircleEditorObservable } from '../../../models/circle-editor-observable';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { EditableCircle } from '../../../models/editable-circle';\r\nimport { EllipseProps } from '../../../models/ellipse-edit-options';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { PointProps } from '../../../models/point-edit-options';\r\nimport { generateKey } from '../../utils';\r\nimport { CirclesManagerService } from './circles-manager.service';\r\n\r\nexport const DEFAULT_CIRCLE_OPTIONS: CircleEditOptions = {\r\n  addPointEvent: CesiumEvent.LEFT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  allowDrag: true,\r\n  circleProps: {\r\n    material: Color.CORNFLOWERBLUE.withAlpha(0.4),\r\n    fill: true,\r\n    outline: false,\r\n    outlineWidth: 1,\r\n    outlineColor: Color.WHITE.withAlpha(0.8),\r\n    classificationType: ClassificationType.BOTH,\r\n    zIndex: 0,\r\n    shadows: ShadowMode.DISABLED,\r\n  },\r\n  pointProps: {\r\n    color: Color.WHITE,\r\n    outlineColor: Color.BLACK.withAlpha(0.2),\r\n    outlineWidth: 1,\r\n    pixelSize: 13,\r\n    virtualPointPixelSize: 8,\r\n    show: true,\r\n    showVirtual: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n  polylineProps: {\r\n    width: 1,\r\n    material: () => Color.WHITE.withAlpha(0.8),\r\n  },\r\n};\r\n\r\n/**\r\n * Service for creating editable circles\r\n *\r\n * You must provide `CircleEditorService` yourself.\r\n * PolygonsEditorService works together with `<circle-editor>` component. Therefor you need to create `<circle-editor>`\r\n * for each `CircleEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `CircleEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `CircleEditorObservable`.\r\n * + To stop editing call `dsipose()` from the `CircleEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over editted shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `CircleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating circle\r\n *  const editing$ = circlesEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit circle from existing center point and radius\r\n *  const editing$ = this.circlesEditorService.edit(center, radius);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class CirclesEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<CircleEditUpdate>();\r\n  private updatePublisher = publish<CircleEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private circlesManager: CirclesManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n\r\n  init(\r\n    mapEventsManager: MapEventsManagerService,\r\n    coordinateConverter: CoordinateConverter,\r\n    cameraService: CameraService,\r\n    circlesManager: CirclesManagerService,\r\n  ) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.circlesManager = circlesManager;\r\n    this.updatePublisher.connect();\r\n  }\r\n\r\n  onUpdate(): Observable<CircleEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  create(options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\r\n    let center: any;\r\n    const id = generateKey();\r\n    const circleOptions = this.setOptions(options);\r\n    const clientEditSubject = new BehaviorSubject<CircleEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE,\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      circleOptions,\r\n    });\r\n\r\n    const finishCreation = (position: Cartesian3) => {\r\n      const update = {\r\n        id,\r\n        center,\r\n        radiusPoint: position,\r\n        editMode: EditModes.CREATE,\r\n        editAction: EditActions.ADD_LAST_POINT,\r\n      };\r\n      this.updateSubject.next(update);\r\n      clientEditSubject.next({\r\n        ...update,\r\n        ...this.getCircleProperties(id),\r\n      });\r\n\r\n      const changeMode = {\r\n        id,\r\n        center,\r\n        radiusPoint: position,\r\n        editMode: EditModes.CREATE,\r\n        editAction: EditActions.CHANGE_TO_EDIT,\r\n      };\r\n\r\n      this.updateSubject.next(changeMode);\r\n      clientEditSubject.next({\r\n        ...update,\r\n        ...this.getCircleProperties(id),\r\n      });\r\n      if (this.observablesMap.has(id)) {\r\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.editCircle(id, priority, clientEditSubject, circleOptions, editorObservable);\r\n      finishedCreate = true;\r\n      return finishedCreate;\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n    const addPointRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.LEFT_CLICK,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (finishedCreate) {\r\n        return;\r\n      }\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      if (!center) {\r\n        const update = {\r\n          id,\r\n          center: position,\r\n          editMode: EditModes.CREATE,\r\n          editAction: EditActions.ADD_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        clientEditSubject.next({\r\n          ...update,\r\n          ...this.getCircleProperties(id),\r\n        });\r\n        center = position;\r\n      } else {\r\n        finishedCreate = finishCreation(position);\r\n      }\r\n    });\r\n\r\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (!center) {\r\n        return;\r\n      }\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n\r\n      if (position) {\r\n        const update = {\r\n          id,\r\n          center,\r\n          radiusPoint: position,\r\n          editMode: EditModes.CREATE,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        };\r\n        this.updateSubject.next(update);\r\n        clientEditSubject.next({\r\n          ...update,\r\n          ...this.getCircleProperties(id),\r\n        });\r\n      }\r\n    });\r\n\r\n    return editorObservable;\r\n  }\r\n\r\n  edit(center: Cartesian3, radius: number, options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\r\n    const id = generateKey();\r\n    const circleOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<CircleEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT,\r\n    });\r\n\r\n    const radiusPoint: Cartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\r\n\r\n    const update = {\r\n      id,\r\n      center,\r\n      radiusPoint,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      circleOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n      ...this.getCircleProperties(id),\r\n    });\r\n\r\n    return this.editCircle(id, priority, editSubject, circleOptions);\r\n  }\r\n\r\n  private editCircle(\r\n    id: string,\r\n    priority: number,\r\n    editSubject: Subject<CircleEditUpdate>,\r\n    options: CircleEditOptions,\r\n    editObservable?: CircleEditorObservable,\r\n  ): CircleEditorObservable {\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.LEFT_CLICK_DRAG,\r\n      entityType: EditPoint,\r\n      pickConfig: options.pickConfiguration,\r\n      pick: PickOptions.PICK_FIRST,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    let shapeDragRegistration;\r\n    if (options.allowDrag) {\r\n      shapeDragRegistration = this.mapEventsManager.register({\r\n        event: CesiumEvent.LEFT_CLICK_DRAG,\r\n        entityType: EditableCircle,\r\n        pickConfig: options.pickConfiguration,\r\n        pick: PickOptions.PICK_FIRST,\r\n        priority: priority,\r\n        pickFilter: entity => id === entity.id,\r\n      });\r\n    }\r\n\r\n    pointDragRegistration\r\n      .pipe(tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\r\n      .subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\r\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\r\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\r\n        if (!endDragPosition) {\r\n          return;\r\n        }\r\n\r\n        const point: EditPoint = entities[0];\r\n        const pointIsCenter = point === this.getCenterPoint(id);\r\n        let editAction;\r\n        if (drop) {\r\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\r\n        } else {\r\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\r\n        }\r\n\r\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\r\n          this.cameraService.enableInputs(true);\r\n          return;\r\n        }\r\n\r\n        const update = {\r\n          id,\r\n          center: this.getCenterPosition(id),\r\n          radiusPoint: this.getRadiusPosition(id),\r\n          startDragPosition,\r\n          endDragPosition,\r\n          editMode: EditModes.EDIT,\r\n          editAction,\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n          ...this.getCircleProperties(id),\r\n        });\r\n      });\r\n\r\n    if (shapeDragRegistration) {\r\n      shapeDragRegistration\r\n        .pipe(tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\r\n        .subscribe(({ movement: { startPosition, endPosition, drop } }) => {\r\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\r\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\r\n          if (!endDragPosition || !startDragPosition) {\r\n            return;\r\n          }\r\n\r\n          const update = {\r\n            id,\r\n            center: this.getCenterPosition(id),\r\n            radiusPoint: this.getRadiusPosition(id),\r\n            startDragPosition,\r\n            endDragPosition,\r\n            editMode: EditModes.EDIT,\r\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\r\n          };\r\n          this.updateSubject.next(update);\r\n          editSubject.next({\r\n            ...update,\r\n            ...this.getCircleProperties(id),\r\n          });\r\n        });\r\n    }\r\n\r\n    const observables = [pointDragRegistration];\r\n    if (shapeDragRegistration) {\r\n      observables.push(shapeDragRegistration);\r\n    }\r\n\r\n    this.observablesMap.set(id, observables);\r\n    return editObservable || this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\r\n                                                                                                        : CircleEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        center: this.getCenterPosition(id),\r\n        radiusPoint: this.getRadiusPosition(id),\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        center: this.getCenterPosition(id),\r\n        radiusPoint: this.getRadiusPosition(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        center: this.getCenterPosition(id),\r\n        radiusPoint: this.getRadiusPosition(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setManually = (\r\n      center: Cartesian3,\r\n      radius: number,\r\n      centerPointProp?: PointProps,\r\n      radiusPointProp?: PointProps,\r\n      circleProp?: EllipseProps,\r\n    ) => {\r\n      const radiusPoint = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\r\n      const circle = this.circlesManager.get(id);\r\n      circle.setManually(center, radiusPoint, centerPointProp, radiusPointProp, circleProp);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      });\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      });\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Circles editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation(null);\r\n    };\r\n\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n\r\n    observableToExtend.getLabels = (): LabelProps[] => this.circlesManager.get(id).labels;\r\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\r\n    observableToExtend.getRadius = (): number => this.getRadius(id);\r\n\r\n    return observableToExtend as CircleEditorObservable;\r\n  }\r\n\r\n  private setOptions(options: CircleEditOptions): CircleEditOptions {\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_CIRCLE_OPTIONS));\r\n    const circleOptions = Object.assign(defaultClone, options);\r\n    circleOptions.pointProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.pointProps, options.pointProps);\r\n    circleOptions.circleProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.circleProps, options.circleProps);\r\n    circleOptions.polylineProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.polylineProps, options.polylineProps);\r\n    return circleOptions;\r\n  }\r\n\r\n  private getCenterPosition(id: string): Cartesian3 {\r\n    return this.circlesManager.get(id).getCenter();\r\n  }\r\n\r\n  private getCenterPoint(id: string): EditPoint {\r\n    return this.circlesManager.get(id).center;\r\n  }\r\n\r\n  private getRadiusPosition(id: string): Cartesian3 {\r\n    return this.circlesManager.get(id).getRadiusPoint();\r\n  }\r\n\r\n  private getRadius(id: string): number {\r\n    return this.circlesManager.get(id).getRadius();\r\n  }\r\n\r\n  private getCircleProperties(id: string) {\r\n    const circle = this.circlesManager.get(id);\r\n    return {\r\n      center: circle.getCenter(),\r\n      radiusPoint: circle.getRadiusPoint(),\r\n      radius: circle.getRadius(),\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { CirclesManagerService } from '../../services/entity-editors/circles-editor/circles-manager.service';\r\nimport { CirclesEditorService } from '../../services/entity-editors/circles-editor/circles-editor.service';\r\nimport { CircleEditUpdate } from '../../models/circle-edit-update';\r\nimport { LabelProps } from '../../models/label-props';\r\nimport { EditableCircle } from '../../models/editable-circle';\r\n\r\n@Component({\r\n  selector: 'circles-editor',\r\n  template: /*html*/ `\r\n      <ac-layer #editArcsLayer acFor=\"let arc of editArcs$\" [context]=\"this\">\r\n          <ac-arc-desc\r\n                  props=\"{\r\n        angle: arc.angle,\r\n        delta: arc.delta,\r\n        center: arc.center,\r\n        radius: arc.radius,\r\n        quality: 30,\r\n        color: arc.props.material()\r\n    }\"\r\n          >\r\n          </ac-arc-desc>\r\n      </ac-layer>\r\n\r\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\r\n          <ac-point-desc\r\n                  props=\"{\r\n                    position: point.getPositionCallbackProperty(),\r\n                    pixelSize: getPointSize(point),\r\n                    color: point.props.color,\r\n                    outlineColor: point.props.outlineColor,\r\n                    outlineWidth: point.props.outlineWidth,\r\n                    show: getPointShow(point),\r\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n                    heightReference: point.props.heightReference,\r\n    }\"\r\n          >\r\n          </ac-point-desc>\r\n      </ac-layer>\r\n\r\n      <ac-layer #editCirclesLayer acFor=\"let circle of editCircles$\" [context]=\"this\" [zIndex]=\"0\">\r\n          <ac-ellipse-desc\r\n                  props=\"{\r\n                  position: circle.getCenterCallbackProperty(),\r\n                  semiMajorAxis: circle.getRadiusCallbackProperty(),\r\n                  semiMinorAxis: circle.getRadiusCallbackProperty(),\r\n                  material: circle.circleProps.material,\r\n                  outline: circle.circleProps.outline,\r\n                  height: 0\r\n                  outlineWidth: circle.circleProps.outlineWidth,\r\n                  outlineColor: circle.circleProps.outlineColor,\r\n                  fill: circle.circleProps.fill,\r\n                  classificationType: circle.circleProps.classificationType,\r\n                  zIndex: circle.circleProps.zIndex,\r\n                  shadows: circle.circleProps.shadows,\r\n    }\"\r\n          >\r\n          </ac-ellipse-desc>\r\n\r\n          <ac-array-desc acFor=\"let label of circle.labels\" [idGetter]=\"getLabelId\">\r\n              <ac-label-primitive-desc\r\n                      props=\"{\r\n            position: label.position,\r\n            backgroundColor: label.backgroundColor,\r\n            backgroundPadding: label.backgroundPadding,\r\n            distanceDisplayCondition: label.distanceDisplayCondition,\r\n            eyeOffset: label.eyeOffset,\r\n            fillColor: label.fillColor,\r\n            font: label.font,\r\n            heightReference: label.heightReference,\r\n            horizontalOrigin: label.horizontalOrigin,\r\n            outlineColor: label.outlineColor,\r\n            outlineWidth: label.outlineWidth,\r\n            pixelOffset: label.pixelOffset,\r\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n            scale: label.scale,\r\n            scaleByDistance: label.scaleByDistance,\r\n            show: label.show,\r\n            showBackground: label.showBackground,\r\n            style: label.style,\r\n            text: label.text,\r\n            translucencyByDistance: label.translucencyByDistance,\r\n            verticalOrigin: label.verticalOrigin,\r\n            disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\"\r\n              >\r\n              </ac-label-primitive-desc>\r\n          </ac-array-desc>\r\n      </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, CirclesManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CirclesEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: CircleEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoints$ = new Subject<AcNotification>();\r\n  public editCircles$ = new Subject<AcNotification>();\r\n  public editArcs$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editCirclesLayer') private editCirclesLayer: AcLayerComponent;\r\n  @ViewChild('editArcsLayer') private editArcsLayer: AcLayerComponent;\r\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private circlesEditor: CirclesEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private circlesManager: CirclesManagerService,\r\n  ) {\r\n    this.circlesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.circlesManager);\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.circlesEditor.onUpdate().subscribe(update => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(circle: EditableCircle, update: CircleEditUpdate, labels?: LabelProps[]) {\r\n    update.center = circle.getCenter();\r\n    update.radiusPoint = circle.getRadiusPoint();\r\n    update.radius = circle.getRadius();\r\n\r\n    if (labels) {\r\n      circle.labels = labels;\r\n      this.editCirclesLayer.update(circle, circle.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    circle.labels = this.editLabelsRenderFn(update, circle.labels);\r\n    this.editCirclesLayer.update(circle, circle.getId());\r\n  }\r\n\r\n  removeEditLabels(circle: EditableCircle) {\r\n    circle.labels = [];\r\n    this.editCirclesLayer.update(circle, circle.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: CircleEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.circlesManager.createEditableCircle(\r\n          update.id,\r\n          this.editCirclesLayer,\r\n          this.editPointsLayer,\r\n          this.editArcsLayer,\r\n          update.circleOptions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (update.radiusPoint) {\r\n          circle.movePoint(update.radiusPoint);\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_POINT: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (update.center) {\r\n          circle.addPoint(update.center);\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_LAST_POINT: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (update.radiusPoint) {\r\n          circle.addLastPoint(update.radiusPoint);\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (circle) {\r\n          this.removeEditLabels(circle);\r\n          this.circlesManager.dispose(update.id);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(circle, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        this.renderEditLabels(circle, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        this.renderEditLabels(circle, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: CircleEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        const circle = this.circlesManager.createEditableCircle(\r\n          update.id,\r\n          this.editCirclesLayer,\r\n          this.editPointsLayer,\r\n          this.editArcsLayer,\r\n          update.circleOptions,\r\n        );\r\n        circle.setManually(update.center, update.radiusPoint);\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH:\r\n      case EditActions.DRAG_POINT: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (circle && circle.enableEdit) {\r\n          circle.movePoint(update.endDragPosition);\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (circle && circle.enableEdit) {\r\n          circle.moveCircle(update.startDragPosition, update.endDragPosition);\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE_FINISH: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (circle && circle.enableEdit) {\r\n          circle.endMovePolygon();\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (circle) {\r\n          circle.enableEdit = false;\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const circle = this.circlesManager.get(update.id);\r\n        if (circle) {\r\n          circle.enableEdit = true;\r\n          this.renderEditLabels(circle, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.circlesManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n","import { Cartesian3, CallbackProperty, Math as cMath } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { EditPoint } from './edit-point';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { EllipseEditOptions, EllipseProps } from './ellipse-edit-options';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PolylineProps } from './polyline-edit-options';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\nexport class EditableEllipse extends AcEntity {\r\n  private _center: EditPoint;\r\n  private _majorRadiusPoint: EditPoint;\r\n  private _majorRadius: number;\r\n  private _minorRadius: number;\r\n  private _rotation = 0;\r\n  private doneCreation = false;\r\n  private _enableEdit = true;\r\n  private _minorRadiusPoints: EditPoint[] = [];\r\n  private lastDraggedToPosition: any;\r\n  private _ellipseProps: EllipseProps;\r\n  private _pointProps: PointProps;\r\n  private _polylineProps: PolylineProps;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(\r\n    private id: string,\r\n    private ellipsesLayer: AcLayerComponent,\r\n    private pointsLayer: AcLayerComponent,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private options: EllipseEditOptions,\r\n  ) {\r\n    super();\r\n    this._ellipseProps = {...options.ellipseProps};\r\n    this._pointProps = {...options.pointProps};\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels || !this._center) {\r\n      return;\r\n    }\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        if (index === 0) {\r\n          label.position = this._center.getPosition();\r\n        } else if (index === 1) {\r\n          label.position = this._majorRadiusPoint\r\n            ? Cartesian3.midpoint(this.getCenter(), this._majorRadiusPoint.getPosition(), new Cartesian3())\r\n            : new Cartesian3();\r\n        } else if (index === 2) {\r\n          label.position =\r\n            this._minorRadiusPoints.length > 0 && this._minorRadius\r\n              ? Cartesian3.midpoint(this.getCenter(), this.getMinorRadiusPointPosition(), new Cartesian3())\r\n              : new Cartesian3();\r\n        }\r\n      }\r\n\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get polylineProps(): PolylineProps {\r\n    return this._polylineProps;\r\n  }\r\n\r\n  set polylineProps(value: PolylineProps) {\r\n    this._polylineProps = value;\r\n  }\r\n\r\n  get pointProps(): PointProps {\r\n    return this._pointProps;\r\n  }\r\n\r\n  set pointProps(value: PointProps) {\r\n    this._pointProps = value;\r\n  }\r\n\r\n  get ellipseProps(): EllipseProps {\r\n    return this._ellipseProps;\r\n  }\r\n\r\n  set ellipseProps(value: EllipseProps) {\r\n    this._ellipseProps = value;\r\n  }\r\n\r\n  get center(): EditPoint {\r\n    return this._center;\r\n  }\r\n\r\n  get majorRadiusPoint(): EditPoint {\r\n    return this._majorRadiusPoint;\r\n  }\r\n\r\n  getMajorRadiusPointPosition() {\r\n    if (!this._majorRadiusPoint) {\r\n      return undefined;\r\n    }\r\n\r\n    return this._majorRadiusPoint.getPosition();\r\n  }\r\n\r\n  getMinorRadiusPointPosition(): Cartesian3 {\r\n    if (this._minorRadiusPoints.length < 1) {\r\n      return undefined;\r\n    }\r\n\r\n    return this._minorRadiusPoints[0].getPosition();\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    this._center.show = value;\r\n    this._majorRadiusPoint.show = value;\r\n    this.updatePointsLayer();\r\n  }\r\n\r\n  setManually(\r\n    center: Cartesian3,\r\n    majorRadius: number,\r\n    rotation = Math.PI / 2,\r\n    minorRadius?: number,\r\n    centerPointProp = this.pointProps,\r\n    radiusPointProp = this.pointProps,\r\n    ellipseProp = this.ellipseProps,\r\n  ) {\r\n    if (majorRadius < minorRadius) {\r\n      throw new Error('Major radius muse be equal or greater than minor radius');\r\n    }\r\n    this._rotation = rotation;\r\n    this._majorRadius = majorRadius;\r\n    if (!this._center) {\r\n      this._center = new EditPoint(this.id, center, centerPointProp);\r\n    } else {\r\n      this._center.setPosition(center);\r\n    }\r\n\r\n    const majorRadiusPosition = GeoUtilsService.pointByLocationDistanceAndAzimuth(this.center.getPosition(), majorRadius, rotation);\r\n\r\n    if (!this._majorRadiusPoint) {\r\n      this._majorRadiusPoint = new EditPoint(this.id, majorRadiusPosition, radiusPointProp);\r\n    } else {\r\n      this._majorRadiusPoint.setPosition(majorRadiusPosition);\r\n    }\r\n\r\n    if (minorRadius) {\r\n      this._minorRadius = minorRadius;\r\n    }\r\n\r\n    this.ellipseProps = ellipseProp;\r\n    this.doneCreation = true;\r\n    this.updateMinorRadiusEditPoints();\r\n    this.updatePointsLayer();\r\n    this.updateEllipsesLayer();\r\n  }\r\n\r\n  addPoint(position: Cartesian3) {\r\n    if (this.doneCreation) {\r\n      return;\r\n    }\r\n\r\n    if (!this._center) {\r\n      this._center = new EditPoint(this.id, position, this.pointProps);\r\n      this._majorRadiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\r\n      this._majorRadius = 0;\r\n    }\r\n\r\n    this.updateRotation();\r\n    this.updateMinorRadiusEditPoints();\r\n    this.updatePointsLayer();\r\n    this.updateEllipsesLayer();\r\n  }\r\n\r\n  transformToEllipse() {\r\n    if (this._minorRadius) {\r\n      return;\r\n    }\r\n\r\n    this._minorRadius = this.getMajorRadius();\r\n    this.updateMinorRadiusEditPoints();\r\n    this.updatePointsLayer();\r\n    this.updateEllipsesLayer();\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    if (this.doneCreation || !this._center || !this._majorRadiusPoint) {\r\n      return;\r\n    }\r\n\r\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), position);\r\n    this._majorRadiusPoint.setPosition(position);\r\n    this._majorRadius = newRadius;\r\n    this.doneCreation = true;\r\n\r\n    if (!this.options.circleToEllipseTransformation) {\r\n      this._minorRadius = this._majorRadius;\r\n    }\r\n\r\n    this.updateRotation();\r\n    this.updateMinorRadiusEditPoints();\r\n    this.updatePointsLayer();\r\n    this.updateEllipsesLayer();\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\r\n    if (!this._center || !this._majorRadiusPoint) {\r\n      return;\r\n    }\r\n\r\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), toPosition);\r\n    if (this.majorRadiusPoint === editPoint) {\r\n      if (newRadius < this._minorRadius) {\r\n        this._majorRadius = this._minorRadius;\r\n        this._majorRadiusPoint.setPosition(\r\n          GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), this._minorRadius, this._rotation),\r\n        );\r\n      } else {\r\n        this.majorRadiusPoint.setPosition(toPosition);\r\n        this._majorRadius = newRadius;\r\n      }\r\n    } else {\r\n      if (newRadius > this._majorRadius) {\r\n        this._minorRadius = this._majorRadius;\r\n      } else {\r\n        this._minorRadius = newRadius;\r\n      }\r\n    }\r\n\r\n    this.updateRotation();\r\n    this.updateMinorRadiusEditPoints();\r\n    this.updatePointsLayer();\r\n    this.updateEllipsesLayer();\r\n  }\r\n\r\n  moveEllipse(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\r\n    if (!this.doneCreation) {\r\n      return;\r\n    }\r\n    if (!this.lastDraggedToPosition) {\r\n      this.lastDraggedToPosition = dragStartPosition;\r\n    }\r\n\r\n    const majorRadius = this.getMajorRadius();\r\n    const rotation = this.getRotation();\r\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\r\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\r\n    this._center.setPosition(newCenterPosition);\r\n    this.majorRadiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), majorRadius, rotation));\r\n    this.updatePointsLayer();\r\n    this.updateMinorRadiusEditPoints();\r\n    this.updateEllipsesLayer();\r\n    this.lastDraggedToPosition = dragEndPosition;\r\n  }\r\n\r\n  endMoveEllipse() {\r\n    this.lastDraggedToPosition = undefined;\r\n  }\r\n\r\n  private updateMinorRadiusEditPoints() {\r\n    if (this._minorRadius === undefined) {\r\n      return;\r\n    }\r\n    if (this._minorRadiusPoints.length === 0) {\r\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cartesian3(), this.pointProps, true));\r\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cartesian3(), this.pointProps, true));\r\n    }\r\n\r\n    this._minorRadiusPoints[0].setPosition(\r\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() - Math.PI / 2),\r\n    );\r\n\r\n    this._minorRadiusPoints[1].setPosition(\r\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() + Math.PI / 2),\r\n    );\r\n  }\r\n\r\n  getMajorRadius(): number {\r\n    return this._majorRadius || 0;\r\n  }\r\n\r\n  getMinorRadius() {\r\n    if (this._minorRadius === undefined) {\r\n      return this.getMajorRadius();\r\n    } else {\r\n      return this._minorRadius;\r\n    }\r\n  }\r\n\r\n  getRotation(): number {\r\n    return this._rotation || 0;\r\n  }\r\n\r\n  updateRotation(): number {\r\n    if (!this._majorRadiusPoint) {\r\n      return 0;\r\n    }\r\n\r\n    const azimuthInDegrees = this.coordinateConverter.bearingToCartesian(this.getCenter(), this._majorRadiusPoint.getPosition());\r\n    this._rotation = cMath.toRadians(azimuthInDegrees);\r\n    return this._rotation;\r\n  }\r\n\r\n  getRotationCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(() => Math.PI / 2 - this.getRotation(), false);\r\n  }\r\n\r\n  getMinorRadiusCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(() => this.getMinorRadius(), false);\r\n  }\r\n\r\n  getMajorRadiusCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(() => this.getMajorRadius(), false);\r\n  }\r\n\r\n  getCenter(): Cartesian3 {\r\n    return this._center ? this._center.getPosition() : undefined;\r\n  }\r\n\r\n  getCenterCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(() => this.getCenter(), false);\r\n  }\r\n\r\n  dispose() {\r\n    if (this._center) {\r\n      this.pointsLayer.remove(this._center.getId());\r\n    }\r\n\r\n    if (this._majorRadiusPoint) {\r\n      this.pointsLayer.remove(this._majorRadiusPoint.getId());\r\n    }\r\n\r\n    if (this._minorRadiusPoints) {\r\n      this._minorRadiusPoints.forEach(point => this.pointsLayer.remove(point.getId()));\r\n    }\r\n\r\n    this.ellipsesLayer.remove(this.id);\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  private updateEllipsesLayer() {\r\n    this.ellipsesLayer.update(this, this.id);\r\n  }\r\n\r\n  private updatePointsLayer() {\r\n    if (this._center) {\r\n      this.pointsLayer.update(this._center, this._center.getId());\r\n    }\r\n    if (this._majorRadiusPoint) {\r\n      this.pointsLayer.update(this._majorRadiusPoint, this._majorRadiusPoint.getId());\r\n    }\r\n    if (this._minorRadiusPoints.length > 0) {\r\n      this.pointsLayer.update(this._minorRadiusPoints[0], this._minorRadiusPoints[0].getId());\r\n      this.pointsLayer.update(this._minorRadiusPoints[1], this._minorRadiusPoints[1].getId());\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EditableEllipse } from '../../../models/editable-ellipse';\r\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { EllipseEditOptions } from '../../../models/ellipse-edit-options';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\n@Injectable()\r\nexport class EllipsesManagerService {\r\n  private ellipses = new Map<string, EditableEllipse>();\r\n\r\n  createEditableEllipse(id: string,\r\n                        editEllipsesLayer: AcLayerComponent,\r\n                        editPointsLayer: AcLayerComponent,\r\n                        coordinateConverter: CoordinateConverter,\r\n                        ellipseOptions: EllipseEditOptions): EditableEllipse {\r\n    const editableEllipse = new EditableEllipse(id, editEllipsesLayer, editPointsLayer, coordinateConverter, ellipseOptions);\r\n    this.ellipses.set(id, editableEllipse);\r\n    return editableEllipse;\r\n  }\r\n\r\n  dispose(id: string) {\r\n    this.ellipses.get(id).dispose();\r\n    this.ellipses.delete(id);\r\n  }\r\n\r\n  get(id: string): EditableEllipse {\r\n    return this.ellipses.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.ellipses.forEach(ellipse => ellipse.dispose());\r\n    this.ellipses.clear();\r\n  }\r\n}\r\n","import { publish, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Color, ClassificationType, ShadowMode, Cartesian3 } from 'cesium';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\nimport { EllipseEditUpdate } from '../../../models/ellipse-edit-update';\r\nimport { EllipsesManagerService } from './ellipses-manager.service';\r\nimport { EllipseEditorObservable } from '../../../models/ellipse-editor-observable';\r\nimport { EllipseEditOptions, EllipseProps } from '../../../models/ellipse-edit-options';\r\nimport { EditableEllipse } from '../../../models/editable-ellipse';\r\nimport { PointProps } from '../../../models/point-edit-options';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\r\nimport { generateKey } from '../../utils';\r\nimport { CesiumEventModifier } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum';\r\nimport { CesiumService } from '../../../../angular-cesium';\r\n\r\nexport const DEFAULT_ELLIPSE_OPTIONS: EllipseEditOptions = {\r\n  addPointEvent: CesiumEvent.LEFT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  circleToEllipseTransformEvent: CesiumEvent.LEFT_CLICK,\r\n  circleToEllipseTransformEventModifier: CesiumEventModifier.ALT,\r\n  allowDrag: true,\r\n  ellipseProps: {\r\n    material: Color.CORNFLOWERBLUE.withAlpha(0.4),\r\n    fill: true,\r\n    outline: true,\r\n    outlineWidth: 1,\r\n    outlineColor: Color.WHITE.withAlpha(0.8),\r\n    classificationType: ClassificationType.BOTH,\r\n    zIndex: 0,\r\n    shadows: ShadowMode.DISABLED,\r\n  },\r\n  pointProps: {\r\n    color: Color.WHITE,\r\n    outlineColor: Color.BLACK.withAlpha(0.2),\r\n    outlineWidth: 1,\r\n    pixelSize: 13,\r\n    virtualPointPixelSize: 8,\r\n    show: true,\r\n    showVirtual: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n  polylineProps: {\r\n    width: 1,\r\n    material: () => Color.WHITE,\r\n  },\r\n  circleToEllipseTransformation: false,\r\n};\r\n\r\n/**\r\n * Service for creating editable ellipses\r\n *\r\n * You must provide `EllipsesEditorService` yourself.\r\n * EllipsesEditorService works together with `<ellipse-editor>` component. Therefor you need to create `<ellipse-editor>`\r\n * for each `EllipsesEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `EllipseEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `EllipseEditorObservable`.\r\n * + To stop editing call `dispose()` from the `EllipseEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over edited shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `EllipseEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating ellipse\r\n *  const editing$ = ellipsesEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit ellipse from existing center point, two radiuses and rotation\r\n *  const editing$ = this.ellipsesEditorService.edit(center, majorRadius, rotation, minorRadius);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class EllipsesEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<EllipseEditUpdate>();\r\n  private updatePublisher = publish<EllipseEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private ellipsesManager: EllipsesManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n  private cesiumScene: any;\r\n\r\n  init(\r\n    mapEventsManager: MapEventsManagerService,\r\n    coordinateConverter: CoordinateConverter,\r\n    cameraService: CameraService,\r\n    ellipsesManager: EllipsesManagerService,\r\n    cesiumViewer: CesiumService,\r\n  ) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.ellipsesManager = ellipsesManager;\r\n    this.updatePublisher.connect();\r\n\r\n    this.cesiumScene = cesiumViewer.getScene();\r\n  }\r\n\r\n  onUpdate(): Observable<EllipseEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  create(options = DEFAULT_ELLIPSE_OPTIONS, priority = 100): EllipseEditorObservable {\r\n    let center: any;\r\n    const id = generateKey();\r\n    const ellipseOptions = this.setOptions(options);\r\n    const clientEditSubject = new BehaviorSubject<EllipseEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE,\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      ellipseOptions,\r\n    });\r\n\r\n    const finishCreation = (position: Cartesian3) => {\r\n      const update: EllipseEditUpdate = {\r\n        id,\r\n        center,\r\n        updatedPosition: position,\r\n        editMode: EditModes.CREATE,\r\n        editAction: EditActions.ADD_LAST_POINT,\r\n      };\r\n      this.updateSubject.next(update);\r\n      clientEditSubject.next({\r\n        ...update,\r\n      });\r\n\r\n      const changeMode: EllipseEditUpdate = {\r\n        id,\r\n        center,\r\n        editMode: EditModes.CREATE,\r\n        editAction: EditActions.CHANGE_TO_EDIT,\r\n      };\r\n\r\n      this.updateSubject.next(changeMode);\r\n      clientEditSubject.next({\r\n        ...update,\r\n      });\r\n      if (this.observablesMap.has(id)) {\r\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.editEllipse(id, priority, clientEditSubject, ellipseOptions, editorObservable);\r\n      finishedCreate = true;\r\n      return finishedCreate;\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n    const addPointRegistration = this.mapEventsManager.register({\r\n      event: ellipseOptions.addPointEvent,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (finishedCreate) {\r\n        return;\r\n      }\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      if (!center) {\r\n        const update: EllipseEditUpdate = {\r\n          id,\r\n          center: position,\r\n          editMode: EditModes.CREATE,\r\n          editAction: EditActions.ADD_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        clientEditSubject.next({\r\n          ...update,\r\n        });\r\n        center = position;\r\n      } else {\r\n        finishedCreate = finishCreation(position);\r\n      }\r\n    });\r\n\r\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (!center) {\r\n        return;\r\n      }\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n\r\n      if (position) {\r\n        const update: EllipseEditUpdate = {\r\n          id,\r\n          center,\r\n          updatedPosition: position,\r\n          editMode: EditModes.CREATE,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        };\r\n        this.updateSubject.next(update);\r\n        clientEditSubject.next({\r\n          ...update,\r\n        });\r\n      }\r\n    });\r\n\r\n    return editorObservable;\r\n  }\r\n\r\n  edit(\r\n    center: Cartesian3,\r\n    majorRadius: number,\r\n    rotation = Math.PI / 2,\r\n    minorRadius?: number,\r\n    options = DEFAULT_ELLIPSE_OPTIONS,\r\n    priority = 100,\r\n  ): EllipseEditorObservable {\r\n    const id = generateKey();\r\n    const ellipseOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<EllipseEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT,\r\n    });\r\n\r\n    const update: EllipseEditUpdate = {\r\n      id,\r\n      center,\r\n      majorRadius,\r\n      rotation,\r\n      minorRadius,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      ellipseOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n    });\r\n\r\n    return this.editEllipse(id, priority, editSubject, ellipseOptions);\r\n  }\r\n\r\n  private editEllipse(\r\n    id: string,\r\n    priority: number,\r\n    editSubject: Subject<EllipseEditUpdate>,\r\n    options: EllipseEditOptions,\r\n    editObservable?: EllipseEditorObservable,\r\n  ): EllipseEditorObservable {\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: options.dragPointEvent,\r\n      entityType: EditPoint,\r\n      pickConfig: options.pickConfiguration,\r\n      pick: PickOptions.PICK_FIRST,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    let addSecondRadiusRegistration;\r\n    if (options.circleToEllipseTransformation) {\r\n      addSecondRadiusRegistration = this.mapEventsManager.register({\r\n        event: options.circleToEllipseTransformEvent,\r\n        modifier: options.circleToEllipseTransformEventModifier,\r\n        entityType: EditableEllipse,\r\n        pickConfig: options.pickConfiguration,\r\n        pick: PickOptions.PICK_FIRST,\r\n        priority,\r\n        pickFilter: entity => id === entity.id,\r\n      });\r\n    }\r\n\r\n    let shapeDragRegistration;\r\n    if (options.allowDrag) {\r\n      shapeDragRegistration = this.mapEventsManager.register({\r\n        event: options.dragShapeEvent,\r\n        entityType: EditableEllipse,\r\n        pickConfig: options.pickConfiguration,\r\n        pick: PickOptions.PICK_FIRST,\r\n        priority: priority,\r\n        pickFilter: entity => id === entity.id,\r\n      });\r\n    }\r\n\r\n    pointDragRegistration\r\n      .pipe(tap(({ movement: { drop } }) => this.ellipsesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n      .subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\r\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\r\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\r\n        if (!endDragPosition) {\r\n          return;\r\n        }\r\n\r\n        const point: EditPoint = entities[0];\r\n        const pointIsCenter = point === this.getCenterPoint(id);\r\n        let editAction;\r\n        if (drop) {\r\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\r\n        } else {\r\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\r\n        }\r\n\r\n        if (!options.allowDrag && this.ellipsesManager.get(id).enableEdit &&\r\n          (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\r\n          this.cameraService.enableInputs(true);\r\n          return;\r\n        }\r\n\r\n        const update: EllipseEditUpdate = {\r\n          id,\r\n          updatedPoint: point,\r\n          startDragPosition,\r\n          endDragPosition,\r\n          editMode: EditModes.EDIT,\r\n          editAction,\r\n          ...this.getEllipseProperties(id),\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n        });\r\n      });\r\n\r\n    if (addSecondRadiusRegistration) {\r\n      addSecondRadiusRegistration.subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\r\n        const update: EllipseEditUpdate = {\r\n          id,\r\n          editMode: EditModes.EDIT,\r\n          editAction: EditActions.TRANSFORM,\r\n          ...this.getEllipseProperties(id),\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (shapeDragRegistration) {\r\n      shapeDragRegistration\r\n        .pipe(tap(({ movement: { drop } }) => this.ellipsesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n        .subscribe(({ movement: { startPosition, endPosition, drop } }) => {\r\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\r\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\r\n          if (!endDragPosition || !startDragPosition) {\r\n            return;\r\n          }\r\n\r\n          const update: EllipseEditUpdate = {\r\n            id,\r\n            startDragPosition,\r\n            endDragPosition,\r\n            editMode: EditModes.EDIT,\r\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\r\n            ...this.getEllipseProperties(id),\r\n          };\r\n          this.updateSubject.next(update);\r\n          editSubject.next({\r\n            ...update,\r\n          });\r\n        });\r\n    }\r\n\r\n    const observables = [pointDragRegistration];\r\n    if (shapeDragRegistration) {\r\n      observables.push(shapeDragRegistration);\r\n    }\r\n    if (addSecondRadiusRegistration) {\r\n      observables.push(addSecondRadiusRegistration);\r\n    }\r\n\r\n    this.observablesMap.set(id, observables);\r\n    return editObservable || this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\r\n                                                                                                        : EllipseEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      } as EllipseEditUpdate);\r\n    };\r\n\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n        ...this.getEllipseProperties(id),\r\n      } as EllipseEditUpdate);\r\n    };\r\n\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n        ...this.getEllipseProperties(id),\r\n      } as EllipseEditUpdate);\r\n    };\r\n\r\n    observableToExtend.setManually = (\r\n      center: Cartesian3,\r\n      majorRadius: number,\r\n      rotation?: number,\r\n      minorRadius?: number,\r\n      centerPointProp?: PointProps,\r\n      radiusPointProp?: PointProps,\r\n      ellipseProp?: EllipseProps,\r\n    ) => {\r\n      const ellipse = this.ellipsesManager.get(id);\r\n      ellipse.setManually(center, majorRadius, rotation, minorRadius, centerPointProp, radiusPointProp, ellipseProp);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      } as EllipseEditUpdate);\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      } as EllipseEditUpdate);\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Ellipses editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation(null);\r\n    };\r\n\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n\r\n    observableToExtend.getLabels = (): LabelProps[] => this.ellipsesManager.get(id).labels;\r\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\r\n    observableToExtend.getMajorRadius = (): number => this.getMajorRadius(id);\r\n    observableToExtend.getMinorRadius = (): number => this.getMinorRadius(id);\r\n\r\n    return observableToExtend as EllipseEditorObservable;\r\n  }\r\n\r\n  private setOptions(options: EllipseEditOptions): EllipseEditOptions {\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_ELLIPSE_OPTIONS));\r\n    const ellipseOptions = Object.assign(defaultClone, options);\r\n    ellipseOptions.pointProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.pointProps, options.pointProps);\r\n    ellipseOptions.ellipseProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.ellipseProps, options.ellipseProps);\r\n    ellipseOptions.polylineProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.polylineProps, options.polylineProps);\r\n    return ellipseOptions;\r\n  }\r\n\r\n  private getCenterPosition(id: string): Cartesian3 {\r\n    return this.ellipsesManager.get(id).getCenter();\r\n  }\r\n\r\n  private getCenterPoint(id: string): EditPoint {\r\n    return this.ellipsesManager.get(id).center;\r\n  }\r\n\r\n  private getMajorRadius(id: string): number {\r\n    return this.ellipsesManager.get(id).getMajorRadius();\r\n  }\r\n\r\n  private getMinorRadius(id: string): number {\r\n    return this.ellipsesManager.get(id).getMinorRadius();\r\n  }\r\n\r\n  private getEllipseProperties(id: string) {\r\n    const ellipse = this.ellipsesManager.get(id);\r\n    return {\r\n      center: ellipse.getCenter(),\r\n      rotation: ellipse.getRotation(),\r\n      minorRadius: ellipse.getMinorRadius(),\r\n      majorRadius: ellipse.getMajorRadius(),\r\n      minorRadiusPointPosition: ellipse.getMinorRadiusPointPosition(),\r\n      majorRadiusPointPosition: ellipse.getMajorRadiusPointPosition(),\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { EllipsesManagerService } from '../../services/entity-editors/ellipses-editor/ellipses-manager.service';\r\nimport { EllipsesEditorService } from '../../services/entity-editors/ellipses-editor/ellipses-editor.service';\r\nimport { EllipseEditUpdate } from '../../models/ellipse-edit-update';\r\nimport { LabelProps } from '../../models/label-props';\r\nimport { EditableEllipse } from '../../models/editable-ellipse';\r\n\r\n@Component({\r\n  selector: 'ellipses-editor',\r\n  template: /*html*/ `\r\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\r\n          <ac-point-desc\r\n                  props=\"{\r\n                    position: point.getPositionCallbackProperty(),\r\n                    pixelSize: getPointSize(point),\r\n                    color: point.props.color,\r\n                    outlineColor: point.props.outlineColor,\r\n                    outlineWidth: point.props.outlineWidth,\r\n                    show: getPointShow(point),\r\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n                    heightReference: point.props.heightReference,\r\n    }\"\r\n          >\r\n          </ac-point-desc>\r\n      </ac-layer>\r\n\r\n      <ac-layer #editEllipsesLayer acFor=\"let ellipse of editEllipses$\" [context]=\"this\" [zIndex]=\"0\">\r\n          <ac-ellipse-desc\r\n                  props=\"{\r\n                    position: ellipse.getCenterCallbackProperty(),\r\n                    semiMajorAxis: ellipse.getMajorRadiusCallbackProperty(),\r\n                    semiMinorAxis: ellipse.getMinorRadiusCallbackProperty(),\r\n                    rotation: ellipse.getRotationCallbackProperty(),\r\n                    material: ellipse.ellipseProps.material,\r\n                    outline: ellipse.ellipseProps.outline,\r\n                    outlineWidth: ellipse.ellipseProps.outlineWidth,\r\n                    outlineColor: ellipse.ellipseProps.outlineColor,\r\n                    height: 0,\r\n                    fill: ellipse.ellipseProps.fill,\r\n                    classificationType: ellipse.ellipseProps.classificationType,\r\n                    zIndex: ellipse.ellipseProps.zIndex,\r\n                    shadows: ellipse.ellipseProps.shadows,\r\n    }\"\r\n          >\r\n          </ac-ellipse-desc>\r\n\r\n          <ac-array-desc acFor=\"let label of ellipse.labels\" [idGetter]=\"getLabelId\">\r\n              <ac-label-primitive-desc\r\n                      props=\"{\r\n                        position: label.position,\r\n                        text: label.text,\r\n                        backgroundColor: label.backgroundColor,\r\n                        backgroundPadding: label.backgroundPadding,\r\n                        distanceDisplayCondition: label.distanceDisplayCondition,\r\n                        eyeOffset: label.eyeOffset,\r\n                        fillColor: label.fillColor,\r\n                        font: label.font,\r\n                        heightReference: label.heightReference,\r\n                        horizontalOrigin: label.horizontalOrigin,\r\n                        outlineColor: label.outlineColor,\r\n                        outlineWidth: label.outlineWidth,\r\n                        pixelOffset: label.pixelOffset,\r\n                        pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n                        scale: label.scale,\r\n                        scaleByDistance: label.scaleByDistance,\r\n                        show: label.show,\r\n                        showBackground: label.showBackground,\r\n                        style: label.style,\r\n                        translucencyByDistance: label.translucencyByDistance,\r\n                        verticalOrigin: label.verticalOrigin,\r\n                        disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\"\r\n              >\r\n              </ac-label-primitive-desc>\r\n          </ac-array-desc>\r\n      </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, EllipsesManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EllipsesEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: EllipseEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoints$ = new Subject<AcNotification>();\r\n  public editEllipses$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editEllipsesLayer') private editEllipsesLayer: AcLayerComponent;\r\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private ellipsesEditor: EllipsesEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private ellipsesManager: EllipsesManagerService,\r\n    private cesiumService: CesiumService,\r\n  ) {\r\n    this.ellipsesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.ellipsesManager, this.cesiumService);\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.ellipsesEditor.onUpdate().subscribe(update => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(ellipse: EditableEllipse, update: EllipseEditUpdate, labels?: LabelProps[]) {\r\n    update.center = ellipse.getCenter();\r\n    update.majorRadius = ellipse.getMajorRadius();\r\n    update.minorRadius = ellipse.getMinorRadius();\r\n    update.rotation = ellipse.getRotation();\r\n\r\n    if (labels) {\r\n      ellipse.labels = labels;\r\n      this.editEllipsesLayer.update(ellipse, ellipse.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    ellipse.labels = this.editLabelsRenderFn(update, ellipse.labels);\r\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\r\n  }\r\n\r\n  removeEditLabels(ellipse: EditableEllipse) {\r\n    ellipse.labels = [];\r\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: EllipseEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.ellipsesManager.createEditableEllipse(\r\n          update.id,\r\n          this.editEllipsesLayer,\r\n          this.editPointsLayer,\r\n          this.coordinateConverter,\r\n          update.ellipseOptions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          ellipse.movePoint(update.updatedPosition, ellipse.majorRadiusPoint);\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_POINT: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (update.center) {\r\n          ellipse.addPoint(update.center);\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_LAST_POINT: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          ellipse.addLastPoint(update.updatedPosition);\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse) {\r\n          this.removeEditLabels(ellipse);\r\n          this.ellipsesManager.dispose(update.id);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(ellipse, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        this.renderEditLabels(ellipse, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        this.renderEditLabels(ellipse, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: EllipseEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        const ellipse = this.ellipsesManager.createEditableEllipse(\r\n          update.id,\r\n          this.editEllipsesLayer,\r\n          this.editPointsLayer,\r\n          this.coordinateConverter,\r\n          update.ellipseOptions,\r\n        );\r\n        ellipse.setManually(\r\n          update.center,\r\n          update.majorRadius,\r\n          update.rotation,\r\n          update.minorRadius,\r\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\r\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\r\n          (update.ellipseOptions && update.ellipseOptions.ellipseProps) || undefined,\r\n        );\r\n        this.renderEditLabels(ellipse, update);\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH:\r\n      case EditActions.DRAG_POINT: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse && ellipse.enableEdit) {\r\n          ellipse.movePoint(update.endDragPosition, update.updatedPoint);\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse && ellipse.enableEdit) {\r\n          ellipse.moveEllipse(update.startDragPosition, update.endDragPosition);\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE_FINISH: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse && ellipse.enableEdit) {\r\n          ellipse.endMoveEllipse();\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.TRANSFORM: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse && ellipse.enableEdit) {\r\n          ellipse.transformToEllipse();\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse) {\r\n          ellipse.enableEdit = false;\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const ellipse = this.ellipsesManager.get(update.id);\r\n        if (ellipse) {\r\n          ellipse.enableEdit = true;\r\n          this.renderEditLabels(ellipse, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ellipsesManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n","import { Cartesian3, CallbackProperty } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditPolyline } from './edit-polyline';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PolylineEditOptions, PolylineProps } from './polyline-edit-options';\r\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\n\r\nexport class EditablePolyline extends AcEntity {\r\n  private positions: EditPoint[] = [];\r\n\r\n  private polylines: EditPolyline[] = [];\r\n  private movingPoint: EditPoint;\r\n  private doneCreation = false;\r\n  private _enableEdit = true;\r\n  private _pointProps: PointProps;\r\n  private polylineProps: PolylineProps;\r\n  private lastDraggedToPosition: any;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(private id: string,\r\n              private pointsLayer: AcLayerComponent,\r\n              private polylinesLayer: AcLayerComponent,\r\n              private coordinateConverter: CoordinateConverter,\r\n              private editOptions: PolylineEditOptions,\r\n              positions?: Cartesian3[]) {\r\n    super();\r\n    this._pointProps = {...editOptions.pointProps};\r\n    this.props = {...editOptions.polylineProps};\r\n    if (positions && positions.length >= 2) {\r\n      this.createFromExisting(positions);\r\n    }\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels) {\r\n      return;\r\n    }\r\n    const positions = this.getRealPositions();\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        label.position = positions[index];\r\n      }\r\n\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get props(): PolylineProps {\r\n    return this.polylineProps;\r\n  }\r\n\r\n  set props(value: PolylineProps) {\r\n    this.polylineProps = value;\r\n  }\r\n\r\n  get pointProps(): PointProps {\r\n    return this._pointProps;\r\n  }\r\n\r\n  set pointProps(value: PointProps) {\r\n    this._pointProps = value;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    this.positions.forEach(point => {\r\n      point.show = value;\r\n      this.updatePointsLayer(false, point);\r\n    });\r\n  }\r\n\r\n  private createFromExisting(positions: Cartesian3[]) {\r\n    positions.forEach((position) => {\r\n      this.addPointFromExisting(position);\r\n    });\r\n    this.addAllVirtualEditPoints();\r\n    this.doneCreation = true;\r\n  }\r\n\r\n  setManually(points: {\r\n    position: Cartesian3,\r\n    pointProp?: PointProps\r\n  }[] | Cartesian3[], polylineProps?: PolylineProps) {\r\n    if (!this.doneCreation) {\r\n      throw new Error('Update manually only in edit mode, after polyline is created');\r\n    }\r\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\r\n\r\n    const newPoints: EditPoint[] = [];\r\n    for (let i = 0; i < points.length; i++) {\r\n      const pointOrCartesian: any = points[i];\r\n      let newPoint = null;\r\n      if (pointOrCartesian.pointProps) {\r\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\r\n      } else {\r\n        newPoint = new EditPoint(this.id, pointOrCartesian, this._pointProps);\r\n      }\r\n      newPoints.push(newPoint);\r\n    }\r\n    this.positions = newPoints;\r\n    this.polylineProps = polylineProps ? polylineProps : this.polylineProps;\r\n\r\n    this.updatePointsLayer(true, ...this.positions);\r\n    this.addAllVirtualEditPoints();\r\n  }\r\n\r\n  private addAllVirtualEditPoints() {\r\n    const currentPoints = [...this.positions];\r\n    currentPoints.forEach((pos, index) => {\r\n      if (index !== currentPoints.length - 1) {\r\n        const currentPoint = pos;\r\n        const nextIndex = (index + 1) % (currentPoints.length);\r\n        const nextPoint = currentPoints[nextIndex];\r\n\r\n        const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\r\n\r\n        this.updatePointsLayer(false, midPoint);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\r\n    const pos1 = firstP.getPosition();\r\n    const pos2 = secondP.getPosition()\r\n    const midPointCartesian3 = Cartesian3.lerp(new Cartesian3(pos1.x, pos1.y, pos1.z), new Cartesian3(pos2.x, pos2.y, pos2.z), 0.5, new Cartesian3());\r\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this._pointProps);\r\n    midPoint.setVirtualEditPoint(true);\r\n\r\n    const firstIndex = this.positions.indexOf(firstP);\r\n    this.positions.splice(firstIndex + 1, 0, midPoint);\r\n    return midPoint;\r\n  }\r\n\r\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\r\n    const pos1 = prevPoint.getPosition();\r\n    const pos2 = nextPoint.getPosition(); \r\n    const midPointCartesian3 = Cartesian3.lerp(new Cartesian3(pos1.x, pos1.y, pos1.z), new Cartesian3(pos2.x, pos2.y, pos2.z), 0.5, new Cartesian3());\r\n    virtualEditPoint.setPosition(midPointCartesian3);\r\n  }\r\n\r\n  changeVirtualPointToRealPoint(point: EditPoint) {\r\n    point.setVirtualEditPoint(false); // actual point becomes a real point\r\n    const pointsCount = this.positions.length;\r\n    const pointIndex = this.positions.indexOf(point);\r\n    const nextIndex = (pointIndex + 1) % (pointsCount);\r\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\r\n\r\n    const nextPoint = this.positions[nextIndex];\r\n    const prePoint = this.positions[preIndex];\r\n\r\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\r\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\r\n    this.updatePointsLayer(false, firstMidPoint, secMidPoint, point);\r\n\r\n  }\r\n\r\n  private renderPolylines() {\r\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\r\n    this.polylines = [];\r\n    const realPoints = this.positions.filter(point => !point.isVirtualEditPoint());\r\n    realPoints.forEach((point, index) => {\r\n      if (index !== realPoints.length - 1) {\r\n        const nextIndex = (index + 1);\r\n        const nextPoint = realPoints[nextIndex];\r\n        const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.polylineProps);\r\n        this.polylines.push(polyline);\r\n        this.polylinesLayer.update(polyline, polyline.getId());\r\n      }\r\n    });\r\n  }\r\n\r\n  addPointFromExisting(position: Cartesian3) {\r\n    const newPoint = new EditPoint(this.id, position, this._pointProps);\r\n    this.positions.push(newPoint);\r\n    this.updatePointsLayer(true, newPoint);\r\n  }\r\n\r\n\r\n  addPoint(position: Cartesian3) {\r\n    if (this.doneCreation) {\r\n      return;\r\n    }\r\n    const isFirstPoint = !this.positions.length;\r\n    if (isFirstPoint) {\r\n      const firstPoint = new EditPoint(this.id, position, this._pointProps);\r\n      this.positions.push(firstPoint);\r\n      this.updatePointsLayer(true, firstPoint);\r\n    }\r\n\r\n    this.movingPoint = new EditPoint(this.id, position.clone(), this._pointProps);\r\n    this.positions.push(this.movingPoint);\r\n\r\n    this.updatePointsLayer(true, this.movingPoint);\r\n  }\r\n\r\n  movePointFinish(editPoint: EditPoint) {\r\n    if (this.editOptions.clampHeightTo3D) {\r\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\r\n      this.updatePointsLayer(false, editPoint);\r\n    }\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\r\n    editPoint.setPosition(toPosition);\r\n    if (this.doneCreation) {\r\n      if (editPoint.props.disableDepthTestDistance && this.editOptions.clampHeightTo3D) {\r\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\r\n        editPoint.props.disableDepthTestDistance = undefined;\r\n        return; // ignore first move because the pickPosition() could be wrong\r\n      }\r\n\r\n      if (editPoint.isVirtualEditPoint()) {\r\n        this.changeVirtualPointToRealPoint(editPoint);\r\n      }\r\n      const pointsCount = this.positions.length;\r\n      const pointIndex = this.positions.indexOf(editPoint);\r\n\r\n      if (pointIndex < this.positions.length - 1) {\r\n        const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\r\n        const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\r\n        this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\r\n      }\r\n      if (pointIndex > 0) {\r\n        const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\r\n        const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\r\n        this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\r\n      }\r\n    }\r\n    this.updatePointsLayer(true, editPoint);\r\n  }\r\n\r\n  moveTempMovingPoint(toPosition: Cartesian3) {\r\n    if (this.movingPoint) {\r\n      this.movePoint(toPosition, this.movingPoint);\r\n    }\r\n  }\r\n\r\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\r\n    if (!this.doneCreation) {\r\n      return;\r\n    }\r\n    if (!this.lastDraggedToPosition) {\r\n      this.lastDraggedToPosition = startMovingPosition;\r\n    }\r\n\r\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, new Cartesian3(draggedToPosition.x, draggedToPosition.y, draggedToPosition.z));\r\n    this.positions.forEach(point => {\r\n      const pos = point.getPosition()\r\n      const newPos = GeoUtilsService.addDeltaToPosition(new Cartesian3(pos.x, pos.y, pos.z), delta, true);\r\n      point.setPosition(newPos);\r\n    });\r\n    this.updatePointsLayer(true, ...this.positions);\r\n    this.lastDraggedToPosition = draggedToPosition;\r\n  }\r\n\r\n  endMoveShape() {\r\n    this.lastDraggedToPosition = undefined;\r\n    this.updatePointsLayer(true, ...this.positions);\r\n  }\r\n\r\n  removePoint(pointToRemove: EditPoint) {\r\n    this.removePosition(pointToRemove);\r\n    this.positions\r\n      .filter(p => p.isVirtualEditPoint())\r\n      .forEach(p => this.removePosition(p));\r\n    this.addAllVirtualEditPoints();\r\n\r\n    this.renderPolylines();\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    this.doneCreation = true;\r\n    this.removePosition(this.movingPoint); // remove movingPoint\r\n    this.movingPoint = null;\r\n\r\n    this.addAllVirtualEditPoints();\r\n  }\r\n\r\n  getRealPositions(): Cartesian3[] {\r\n    return this.getRealPoints()\r\n      .map(position => position.getPosition());\r\n  }\r\n\r\n  getRealPoints(): EditPoint[] {\r\n    return this.positions\r\n      .filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\r\n  }\r\n\r\n  getPoints(): EditPoint[] {\r\n    return this.positions.filter(position => position !== this.movingPoint);\r\n  }\r\n\r\n  getPositions(): Cartesian3[] {\r\n    return this.positions.map(position => position.getPosition());\r\n  }\r\n\r\n  getPositionsCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getPositions.bind(this), false);\r\n  }\r\n\r\n  private removePosition(point: EditPoint) {\r\n    const index = this.positions.findIndex((p) => p === point);\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n    this.positions.splice(index, 1);\r\n    this.pointsLayer.remove(point.getId());\r\n  }\r\n\r\n  private updatePointsLayer(renderPolylines = true, ...point: EditPoint[]) {\r\n    if (renderPolylines) {\r\n      this.renderPolylines();\r\n    }\r\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\r\n  }\r\n\r\n  update() {\r\n    this.updatePointsLayer();\r\n  }\r\n\r\n  dispose() {\r\n    this.positions.forEach(editPoint => {\r\n      this.pointsLayer.remove(editPoint.getId());\r\n    });\r\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\r\n    if (this.movingPoint) {\r\n      this.pointsLayer.remove(this.movingPoint.getId());\r\n      this.movingPoint = undefined;\r\n    }\r\n    this.positions.length = 0;\r\n  }\r\n\r\n  getPointsCount(): number {\r\n    return this.positions.length;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { CoordinateConverter } from './../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { AcLayerComponent } from './../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\r\nimport { EditablePolyline } from '../../../models/editable-polyline';\r\n\r\n@Injectable()\r\nexport class PolylinesManagerService {\r\n  polylines: Map<string, EditablePolyline> = new Map<string, EditablePolyline>();\r\n\r\n  createEditablePolyline(id: string, editPolylinesLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\r\n                         coordinateConverter: CoordinateConverter, polylineOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\r\n    const editablePolyline = new EditablePolyline(\r\n      id,\r\n      editPolylinesLayer,\r\n      editPointsLayer,\r\n      coordinateConverter,\r\n      polylineOptions,\r\n      positions);\r\n    this.polylines.set(id, editablePolyline\r\n    );\r\n  }\r\n\r\n  get(id: string): EditablePolyline {\r\n    return this.polylines.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.polylines.forEach(polyline => polyline.dispose());\r\n    this.polylines.clear();\r\n  }\r\n}\r\n","import { Cartesian3, Cartographic, CallbackProperty, Rectangle } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { EditPoint } from './edit-point';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { RectangleEditOptions, RectangleProps } from './rectangle-edit-options';\r\nimport { PointProps } from './point-edit-options';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\n\r\nexport class EditableRectangle extends AcEntity {\r\n  private positions: EditPoint[] = [];\r\n  private movingPoint: EditPoint;\r\n  private done = false;\r\n  private _enableEdit = true;\r\n  private _defaultPointProps: PointProps;\r\n  private _rectangleProps: RectangleProps;\r\n  private lastDraggedToPosition: Cartesian3;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(\r\n    private id: string,\r\n    private pointsLayer: AcLayerComponent,\r\n    private rectangleLayer: AcLayerComponent,\r\n    private coordinateConverter: CoordinateConverter,\r\n    editOptions: RectangleEditOptions,\r\n    positions?: Cartesian3[]\r\n  ) {\r\n    super();\r\n    this.defaultPointProps = {...editOptions.pointProps};\r\n    this.rectangleProps = {...editOptions.rectangleProps};\r\n    if (positions && positions.length === 2) {\r\n      this.createFromExisting(positions);\r\n    } else if (positions) {\r\n      throw new Error('Rectangle consist of 2 points but provided ' + positions.length);\r\n    }\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels) {\r\n      return;\r\n    }\r\n    const positions = this.getRealPositions();\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        label.position = positions[index];\r\n      }\r\n\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get rectangleProps(): RectangleProps {\r\n    return this._rectangleProps;\r\n  }\r\n\r\n  set rectangleProps(value: RectangleProps) {\r\n    this._rectangleProps = value;\r\n  }\r\n\r\n  get defaultPointProps(): PointProps {\r\n    return this._defaultPointProps;\r\n  }\r\n\r\n  set defaultPointProps(value: PointProps) {\r\n    this._defaultPointProps = value;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    this.positions.forEach(point => {\r\n      point.show = value;\r\n      this.updatePointsLayer(point);\r\n    });\r\n  }\r\n\r\n  private createFromExisting(positions: Cartesian3[]) {\r\n    positions.forEach(position => {\r\n      this.addPointFromExisting(position);\r\n    });\r\n    this.updateRectangleLayer();\r\n    this.updatePointsLayer(...this.positions);\r\n    this.done = true;\r\n  }\r\n\r\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\r\n    if (!this.done) {\r\n      throw new Error('Update manually only in edit mode, after rectangle is created');\r\n    }\r\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\r\n    this.positions = points;\r\n    this.updatePointsLayer(...points);\r\n    this.updateRectangleLayer();\r\n  }\r\n\r\n  addPointFromExisting(position: Cartesian3) {\r\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\r\n    this.positions.push(newPoint);\r\n    this.updatePointsLayer(newPoint);\r\n  }\r\n\r\n  addPoint(position: Cartesian3) {\r\n    if (this.done) {\r\n      return;\r\n    }\r\n    const isFirstPoint = !this.positions.length;\r\n    if (isFirstPoint) {\r\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\r\n      this.positions.push(firstPoint);\r\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\r\n      this.positions.push(this.movingPoint);\r\n      this.updatePointsLayer(firstPoint);\r\n    } else {\r\n\r\n      this.updatePointsLayer(...this.positions);\r\n      this.updateRectangleLayer();\r\n      this.done = true;\r\n      this.movingPoint = null;\r\n    }\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\r\n    if (!editPoint.isVirtualEditPoint()) {\r\n      editPoint.setPosition(toPosition);\r\n      this.updatePointsLayer(...this.positions);\r\n      this.updateRectangleLayer();\r\n    }\r\n  }\r\n\r\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\r\n    if (!this.lastDraggedToPosition) {\r\n      this.lastDraggedToPosition = startMovingPosition;\r\n    }\r\n\r\n    const lastDraggedCartographic = Cartographic.fromCartesian(this.lastDraggedToPosition);\r\n    const draggedToPositionCartographic = Cartographic.fromCartesian(draggedToPosition);\r\n    this.getRealPoints().forEach(point => {\r\n      const cartographic = Cartographic.fromCartesian(point.getPosition());\r\n      cartographic.longitude += (draggedToPositionCartographic.longitude - lastDraggedCartographic.longitude);\r\n      cartographic.latitude += (draggedToPositionCartographic.latitude - lastDraggedCartographic.latitude);\r\n      point.setPosition(Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0));\r\n    });\r\n\r\n    this.updatePointsLayer(...this.positions);\r\n    this.updateRectangleLayer();\r\n    this.lastDraggedToPosition = draggedToPosition;\r\n  }\r\n\r\n  endMoveShape() {\r\n    this.lastDraggedToPosition = undefined;\r\n    this.positions.forEach(point => this.updatePointsLayer(point));\r\n    this.updateRectangleLayer();\r\n  }\r\n\r\n  endMovePoint() {\r\n    this.updatePointsLayer(...this.positions);\r\n  }\r\n\r\n  moveTempMovingPoint(toPosition: Cartesian3) {\r\n    if (this.movingPoint) {\r\n      this.movePoint(toPosition, this.movingPoint);\r\n    }\r\n  }\r\n\r\n  removePoint(pointToRemove: EditPoint) {\r\n    this.removePosition(pointToRemove);\r\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    this.done = true;\r\n    this.removePosition(this.movingPoint); // remove movingPoint\r\n    this.movingPoint = null;\r\n  }\r\n\r\n  getRealPositions(): Cartesian3[] {\r\n    return this.getRealPoints().map(position => position.getPosition());\r\n  }\r\n\r\n  getRealPositionsCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getRealPositions.bind(this), false);\r\n  }\r\n\r\n  getRealPoints(): EditPoint[] {\r\n    return this.positions.filter(position => !position.isVirtualEditPoint());\r\n  }\r\n\r\n  getPositions(): Cartesian3[] {\r\n    return this.positions.map(position => position.getPosition());\r\n  }\r\n\r\n  getRectangle(): Rectangle {\r\n    const cartographics = this.getPositions().map(cartesian => Cartographic.fromCartesian(cartesian));\r\n    const longitudes = cartographics.map(position => position.longitude);\r\n    const latitudes = cartographics.map(position =>  position.latitude);\r\n\r\n    return new Rectangle(\r\n      Math.min(...longitudes),\r\n      Math.min(...latitudes),\r\n      Math.max(...longitudes),\r\n      Math.max(...latitudes)\r\n    );\r\n  }\r\n\r\n  getRectangleCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getRectangle.bind(this), false);\r\n  }\r\n\r\n  private removePosition(point: EditPoint) {\r\n    const index = this.positions.findIndex(p => p === point);\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n    this.positions.splice(index, 1);\r\n    this.pointsLayer.remove(point.getId());\r\n  }\r\n\r\n  private updatePointsLayer(...point: EditPoint[]) {\r\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\r\n  }\r\n\r\n  private updateRectangleLayer() {\r\n    this.rectangleLayer.update(this, this.id);\r\n  }\r\n\r\n  dispose() {\r\n    this.rectangleLayer.remove(this.id);\r\n\r\n    this.positions.forEach(editPoint => {\r\n      this.pointsLayer.remove(editPoint.getId());\r\n    });\r\n    if (this.movingPoint) {\r\n      this.pointsLayer.remove(this.movingPoint.getId());\r\n      this.movingPoint = undefined;\r\n    }\r\n    this.positions.length = 0;\r\n  }\r\n\r\n  getPointsCount(): number {\r\n    return this.positions.length;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n\r\n","import { Observable } from 'rxjs';\r\nimport { LabelProps } from './label-props';\r\n\r\nexport class EditorObservable<T> extends Observable<T> {\r\n  dispose: Function;\r\n  enable: Function;\r\n  disable: Function;\r\n  getLabels: () => LabelProps[];\r\n  getEditValue: () => T;\r\n  setLabelsRenderFn: (func: (update: T, labels: LabelProps[]) => LabelProps[]) => void;\r\n  updateLabels: (labels: LabelProps[]) => void;\r\n  finishCreation: () => boolean;\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditorObservable } from './editor-observable';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PointEditUpdate } from './point-edit-update';\r\n\r\nexport class PointEditorObservable extends EditorObservable<PointEditUpdate> {\r\n  setManually: (point: { position: Cartesian3, pointProp?: PointProps } | Cartesian3, pointProps?: PointProps) => void;\r\n  getCurrentPoint: () => EditPoint;\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditorObservable } from './editor-observable';\r\nimport { PolylineEditUpdate } from './polyline-edit-update';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PolylineProps } from './polyline-edit-options';\r\n//import { Cartesian3 } from '../../angular-cesium';\r\n\r\nexport class PolylineEditorObservable extends EditorObservable<PolylineEditUpdate> {\r\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[], polylineProps?: PolylineProps) => void;\r\n  getCurrentPoints: () => EditPoint[];\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditorObservable } from './editor-observable';\r\nimport { PolygonEditUpdate } from './polygon-edit-update';\r\nimport { PointProps } from './point-edit-options';\r\nimport { PolygonProps } from './polygon-edit-options';\r\n\r\n\r\nexport class PolygonEditorObservable extends EditorObservable<PolygonEditUpdate> {\r\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[],\r\n                polygonProps?: PolygonProps) => void;\r\n  getCurrentPoints: () => EditPoint[];\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditorObservable } from './editor-observable';\r\nimport { RectangleEditUpdate } from './rectangle-edit-update';\r\nimport { PointProps } from './point-edit-options';\r\n\r\nexport class RectangleEditorObservable extends EditorObservable<RectangleEditUpdate> {\r\n  setManually: (\r\n    firstPosition: Cartesian3,\r\n    secondPosition: Cartesian3,\r\n    firstPointProp?: PointProps,\r\n    secondPointProp?: PointProps\r\n  ) => void;\r\n  getCurrentPoints: () => EditPoint[];\r\n}\r\n\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditorObservable } from './editor-observable';\r\nimport { CircleEditUpdate } from './circle-edit-update';\r\nimport { PointProps } from './point-edit-options';\r\nimport { EllipseProps } from './ellipse-edit-options';\r\n\r\nexport class CircleEditorObservable extends EditorObservable<CircleEditUpdate> {\r\n  setManually: (center: Cartesian3, radius: number, centerPointProp?: PointProps,\r\n                radiusPointProp?: PointProps, circleProp?: EllipseProps) => void;\r\n  getCenter: () => Cartesian3;\r\n  getRadius: () => number; // meters\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditorObservable } from './editor-observable';\r\n//import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\r\nimport { EllipseEditUpdate } from './ellipse-edit-update';\r\nimport { PointProps } from './point-edit-options';\r\nimport { EllipseProps } from './ellipse-edit-options';\r\n\r\nexport class EllipseEditorObservable extends EditorObservable<EllipseEditUpdate> {\r\n  setManually: (\r\n    center: Cartesian3,\r\n    majorRadius: number,\r\n    rotation?: number,\r\n    minorRadius?: number,\r\n    centerPointProp?: PointProps,\r\n    radiusPointProp?: PointProps,\r\n    ellipseProp?: EllipseProps,\r\n  ) => void;\r\n  getCenter: () => Cartesian3;\r\n  getMinorRadius: () => number; // meters\r\n  getMajorRadius: () => number; // meters\r\n}\r\n","import { Cartesian3 } from 'cesium';\r\nimport { EditPoint } from './edit-point';\r\nimport { EditorObservable } from './editor-observable';\r\nimport { HippodromeEditUpdate } from './hippodrome-edit-update';\r\nimport { PointProps } from './point-edit-options';\r\n\r\nexport class HippodromeEditorObservable extends EditorObservable<HippodromeEditUpdate> {\r\n  setManually: (firstPosition: Cartesian3,\r\n                secondPosition: Cartesian3,\r\n                widthMeters?: number,\r\n                firstPointProp?: PointProps,\r\n                secondPointProp?: PointProps) => void;\r\n  getCurrentPoints: () => EditPoint[];\r\n  getCurrentWidth: () => number; // meters\r\n}\r\n","import { Cartesian3, Math as cMath, CallbackProperty } from 'cesium';\r\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\r\nimport { EditPoint } from './edit-point';\r\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { PointProps } from './point-edit-options';\r\nimport { HippodromeEditOptions, HippodromeProps } from './hippodrome-edit-options';\r\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\r\nimport { defaultLabelProps, LabelProps } from './label-props';\r\n\r\nexport class EditableHippodrome extends AcEntity {\r\n  private positions: EditPoint[] = [];\r\n  private movingPoint: EditPoint;\r\n  private done = false;\r\n  private _enableEdit = true;\r\n  private _defaultPointProps: PointProps;\r\n  private _hippodromeProps: HippodromeProps;\r\n  private lastDraggedToPosition: Cartesian3;\r\n  private _labels: LabelProps[] = [];\r\n\r\n  constructor(\r\n    private id: string,\r\n    private pointsLayer: AcLayerComponent,\r\n    private hippodromeLayer: AcLayerComponent,\r\n    private coordinateConverter: CoordinateConverter,\r\n    editOptions: HippodromeEditOptions,\r\n    positions?: Cartesian3[],\r\n  ) {\r\n    super();\r\n    this.defaultPointProps = {...editOptions.pointProps};\r\n    this.hippodromeProps = {...editOptions.hippodromeProps};\r\n    if (positions && positions.length === 2) {\r\n      this.createFromExisting(positions);\r\n    } else if (positions) {\r\n      throw new Error('Hippodrome consist of 2 points but provided ' + positions.length);\r\n    }\r\n  }\r\n\r\n  get labels(): LabelProps[] {\r\n    return this._labels;\r\n  }\r\n\r\n  set labels(labels: LabelProps[]) {\r\n    if (!labels) {\r\n      return;\r\n    }\r\n    const positions = this.getRealPositions();\r\n    this._labels = labels.map((label, index) => {\r\n      if (!label.position) {\r\n        label.position = positions[index];\r\n      }\r\n\r\n      return Object.assign({}, defaultLabelProps, label);\r\n    });\r\n  }\r\n\r\n  get hippodromeProps(): HippodromeProps {\r\n    return this._hippodromeProps;\r\n  }\r\n\r\n  set hippodromeProps(value: HippodromeProps) {\r\n    this._hippodromeProps = value;\r\n  }\r\n\r\n  get defaultPointProps(): PointProps {\r\n    return this._defaultPointProps;\r\n  }\r\n\r\n  set defaultPointProps(value: PointProps) {\r\n    this._defaultPointProps = value;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this._enableEdit;\r\n  }\r\n\r\n  set enableEdit(value: boolean) {\r\n    this._enableEdit = value;\r\n    this.positions.forEach(point => {\r\n      point.show = value;\r\n      this.updatePointsLayer(point);\r\n    });\r\n  }\r\n\r\n  private createFromExisting(positions: Cartesian3[]) {\r\n    positions.forEach(position => {\r\n      this.addPointFromExisting(position);\r\n    });\r\n    this.createHeightEditPoints();\r\n    this.updateHippdromeLayer();\r\n    this.updatePointsLayer(...this.positions);\r\n    this.done = true;\r\n  }\r\n\r\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\r\n    if (!this.done) {\r\n      throw new Error('Update manually only in edit mode, after polyline is created');\r\n    }\r\n    this.hippodromeProps.width = widthMeters ? widthMeters : this.hippodromeProps.width;\r\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\r\n    this.positions = points;\r\n    this.createHeightEditPoints();\r\n    this.updatePointsLayer(...points);\r\n    this.updateHippdromeLayer();\r\n  }\r\n\r\n  addPointFromExisting(position: Cartesian3) {\r\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\r\n    this.positions.push(newPoint);\r\n    this.updatePointsLayer(newPoint);\r\n  }\r\n\r\n  addPoint(position: Cartesian3) {\r\n    if (this.done) {\r\n      return;\r\n    }\r\n    const isFirstPoint = !this.positions.length;\r\n    if (isFirstPoint) {\r\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\r\n      this.positions.push(firstPoint);\r\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\r\n      this.positions.push(this.movingPoint);\r\n      this.updatePointsLayer(firstPoint);\r\n    } else {\r\n      this.createHeightEditPoints();\r\n\r\n      this.updatePointsLayer(...this.positions);\r\n      this.updateHippdromeLayer();\r\n      this.done = true;\r\n      this.movingPoint = null;\r\n    }\r\n  }\r\n\r\n  private createHeightEditPoints() {\r\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\r\n\r\n    const firstP = this.getRealPoints()[0];\r\n    const secP = this.getRealPoints()[1];\r\n\r\n    const midPointCartesian3 = Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cartesian3());\r\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\r\n\r\n    const upAzimuth = cMath.toRadians(bearingDeg) - Math.PI / 2;\r\n    this.createMiddleEditablePoint(midPointCartesian3, upAzimuth);\r\n    const downAzimuth = cMath.toRadians(bearingDeg) + Math.PI / 2;\r\n    this.createMiddleEditablePoint(midPointCartesian3, downAzimuth);\r\n  }\r\n\r\n  private createMiddleEditablePoint(midPointCartesian3: any, azimuth: number) {\r\n    const upEditCartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(\r\n      midPointCartesian3,\r\n      this.hippodromeProps.width / 2,\r\n      azimuth,\r\n      true,\r\n    );\r\n    const midPoint = new EditPoint(this.id, upEditCartesian3, this.defaultPointProps);\r\n    midPoint.setVirtualEditPoint(true);\r\n    this.positions.push(midPoint);\r\n  }\r\n\r\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\r\n    if (!editPoint.isVirtualEditPoint()) {\r\n      editPoint.setPosition(toPosition);\r\n      this.createHeightEditPoints();\r\n      this.updatePointsLayer(...this.positions);\r\n      this.updateHippdromeLayer();\r\n    } else {\r\n      this.changeWidthByNewPoint(toPosition);\r\n    }\r\n  }\r\n\r\n  private changeWidthByNewPoint(toPosition: Cartesian3) {\r\n    const firstP = this.getRealPoints()[0];\r\n    const secP = this.getRealPoints()[1];\r\n    const midPointCartesian3 = Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cartesian3());\r\n\r\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(midPointCartesian3, toPosition);\r\n    let normalizedBearingDeb = bearingDeg;\r\n    if (bearingDeg > 270) {\r\n      normalizedBearingDeb = bearingDeg - 270;\r\n    } else if (bearingDeg > 180) {\r\n      normalizedBearingDeb = bearingDeg - 180;\r\n    }\r\n    let bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\r\n    if (bearingDegHippodromeDots > 180) {\r\n      bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(secP.getPosition(), firstP.getPosition());\r\n    }\r\n    let fixedBearingDeg =\r\n      bearingDegHippodromeDots > normalizedBearingDeb\r\n        ? bearingDegHippodromeDots - normalizedBearingDeb\r\n        : normalizedBearingDeb - bearingDegHippodromeDots;\r\n\r\n    if (bearingDeg > 270) {\r\n      fixedBearingDeg = bearingDeg - bearingDegHippodromeDots;\r\n    }\r\n\r\n    const distanceMeters = Math.abs(GeoUtilsService.distance(midPointCartesian3, toPosition));\r\n    const radiusWidth = Math.sin(cMath.toRadians(fixedBearingDeg)) * distanceMeters;\r\n\r\n    this.hippodromeProps.width = Math.abs(radiusWidth) * 2;\r\n    this.createHeightEditPoints();\r\n    this.updatePointsLayer(...this.positions);\r\n    this.updateHippdromeLayer();\r\n  }\r\n\r\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\r\n    if (!this.lastDraggedToPosition) {\r\n      this.lastDraggedToPosition = startMovingPosition;\r\n    }\r\n\r\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\r\n    this.getRealPoints().forEach(point => {\r\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\r\n      point.setPosition(newPos);\r\n    });\r\n    this.createHeightEditPoints();\r\n    this.updatePointsLayer(...this.positions);\r\n    this.updateHippdromeLayer();\r\n    this.lastDraggedToPosition = draggedToPosition;\r\n  }\r\n\r\n  endMoveShape() {\r\n    this.lastDraggedToPosition = undefined;\r\n    this.createHeightEditPoints();\r\n    this.positions.forEach(point => this.updatePointsLayer(point));\r\n    this.updateHippdromeLayer();\r\n  }\r\n\r\n  endMovePoint() {\r\n    this.createHeightEditPoints();\r\n    this.updatePointsLayer(...this.positions);\r\n  }\r\n\r\n  moveTempMovingPoint(toPosition: Cartesian3) {\r\n    if (this.movingPoint) {\r\n      this.movePoint(toPosition, this.movingPoint);\r\n    }\r\n  }\r\n\r\n  removePoint(pointToRemove: EditPoint) {\r\n    this.removePosition(pointToRemove);\r\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\r\n  }\r\n\r\n  addLastPoint(position: Cartesian3) {\r\n    this.done = true;\r\n    this.removePosition(this.movingPoint); // remove movingPoint\r\n    this.movingPoint = null;\r\n  }\r\n\r\n  getRealPositions(): Cartesian3[] {\r\n    return this.getRealPoints().map(position => position.getPosition());\r\n  }\r\n\r\n  getRealPositionsCallbackProperty(): CallbackProperty {\r\n    return new CallbackProperty(this.getRealPositions.bind(this), false);\r\n  }\r\n\r\n  getRealPoints(): EditPoint[] {\r\n    return this.positions.filter(position => !position.isVirtualEditPoint());\r\n  }\r\n\r\n  getWidth(): number {\r\n    return this.hippodromeProps.width;\r\n  }\r\n\r\n  getPositions(): Cartesian3[] {\r\n    return this.positions.map(position => position.getPosition());\r\n  }\r\n\r\n  private removePosition(point: EditPoint) {\r\n    const index = this.positions.findIndex(p => p === point);\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n    this.positions.splice(index, 1);\r\n    this.pointsLayer.remove(point.getId());\r\n  }\r\n\r\n  private updatePointsLayer(...point: EditPoint[]) {\r\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\r\n  }\r\n\r\n  private updateHippdromeLayer() {\r\n    this.hippodromeLayer.update(this, this.id);\r\n  }\r\n\r\n  dispose() {\r\n    this.hippodromeLayer.remove(this.id);\r\n\r\n    this.positions.forEach(editPoint => {\r\n      this.pointsLayer.remove(editPoint.getId());\r\n    });\r\n    if (this.movingPoint) {\r\n      this.pointsLayer.remove(this.movingPoint.getId());\r\n      this.movingPoint = undefined;\r\n    }\r\n    this.positions.length = 0;\r\n  }\r\n\r\n  getPointsCount(): number {\r\n    return this.positions.length;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n","import { publish, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Color, ClassificationType, sampleTerrain, Cartographic, HeightReference, Cartesian3 } from 'cesium';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\nimport { PolylinesManagerService } from './polylines-manager.service';\r\nimport { ClampTo3DOptions, PolylineEditOptions, PolylineProps } from '../../../models/polyline-edit-options';\r\nimport { PointProps } from '../../../models/point-edit-options';\r\nimport { PolylineEditUpdate } from '../../../models/polyline-edit-update';\r\nimport { PolylineEditorObservable } from '../../../models/polyline-editor-observable';\r\nimport { EditPolyline } from '../../../models';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { debounce, generateKey } from '../../utils';\r\nimport { CesiumService } from '../../../../angular-cesium';\r\nimport { when } from 'when';\r\n\r\nexport const DEFAULT_POLYLINE_OPTIONS: PolylineEditOptions = {\r\n  addPointEvent: CesiumEvent.LEFT_CLICK,\r\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\r\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  allowDrag: true,\r\n  pointProps: {\r\n    color: Color.WHITE.withAlpha(0.95),\r\n    outlineColor: Color.BLACK.withAlpha(0.5),\r\n    outlineWidth: 1,\r\n    pixelSize: 15,\r\n    virtualPointPixelSize: 8,\r\n    show: true,\r\n    showVirtual: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n  polylineProps: {\r\n    material: () => Color.BLACK,\r\n    width: 3,\r\n    clampToGround: false,\r\n    zIndex: 0,\r\n    classificationType: ClassificationType.BOTH,\r\n  },\r\n  clampHeightTo3D: false,\r\n  clampHeightTo3DOptions: {\r\n    clampToTerrain: false,\r\n    clampMostDetailed: true,\r\n    clampToHeightPickWidth: 2,\r\n  },\r\n};\r\n\r\n/**\r\n * Service for creating editable polylines\r\n *\r\n *  * You must provide `PolylineEditorService` yourself.\r\n * PolygonsEditorService works together with `<polylines-editor>` component. Therefor you need to create `<polylines-editor>`\r\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolylineEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolylineEditorObservable`.\r\n * + To stop editing call `dsipose()` from the `PolylineEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over editted shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `PolylineEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating polyline\r\n *  const editing$ = polylinesEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit polyline from existing polyline cartesian3 positions\r\n *  const editing$ = this.polylinesEditor.edit(initialPos);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class PolylinesEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<PolylineEditUpdate>();\r\n  private updatePublisher = publish<PolylineEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private polylinesManager: PolylinesManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n  private cesiumScene;\r\n\r\n  private clampPointsDebounced = debounce((id, clampHeightTo3D: boolean, clampHeightTo3DOptions) => {\r\n    this.clampPoints(id, clampHeightTo3D, clampHeightTo3DOptions);\r\n  }, 300);\r\n\r\n  init(mapEventsManager: MapEventsManagerService,\r\n       coordinateConverter: CoordinateConverter,\r\n       cameraService: CameraService,\r\n       polylinesManager: PolylinesManagerService,\r\n       cesiumViewer: CesiumService) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.polylinesManager = polylinesManager;\r\n    this.updatePublisher.connect();\r\n\r\n    this.cesiumScene = cesiumViewer.getScene();\r\n  }\r\n\r\n  onUpdate(): Observable<PolylineEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  private clampPoints(id, clampHeightTo3D: boolean, { clampToTerrain, clampMostDetailed, clampToHeightPickWidth }: ClampTo3DOptions) {\r\n    if (clampHeightTo3D && clampMostDetailed) {\r\n      const polyline = this.polylinesManager.get(id);\r\n      const points = polyline.getPoints();\r\n\r\n      if (!clampToTerrain) {\r\n        // 3dTiles\r\n        points.forEach(point => {\r\n          point.setPosition(this.cesiumScene.clampToHeight(point.getPosition(), undefined, clampToHeightPickWidth));\r\n        });\r\n      } else {\r\n        const cartographics = points.map(point => this.coordinateConverter.cartesian3ToCartographic(point.getPosition()));\r\n        const promise = sampleTerrain(this.cesiumScene.terrainProvider, 11, cartographics);\r\n        when(promise, function (updatedPositions) {\r\n          points.forEach((point, index) => {\r\n            point.setPosition(Cartographic.toCartesian(updatedPositions[index]));\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private screenToPosition(cartesian2, clampHeightTo3D: boolean, {clampToHeightPickWidth, clampToTerrain}: ClampTo3DOptions) {\r\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\r\n\r\n    // If cartesian3 is undefined then the point inst on the globe\r\n    if (clampHeightTo3D && cartesian3) {\r\n      const globePositionPick = () => {\r\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\r\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\r\n      };\r\n\r\n      // is terrain?\r\n      if (clampToTerrain) {\r\n        return globePositionPick();\r\n      } else {\r\n        const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\r\n        const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\r\n        if (latLon.height < 0) {// means nothing picked -> Validate it\r\n          return globePositionPick();\r\n        }\r\n        return this.cesiumScene.clampToHeight(cartesian3PickPosition, undefined, clampToHeightPickWidth);\r\n      }\r\n    }\r\n\r\n    return cartesian3;\r\n  }\r\n\r\n  create(options = DEFAULT_POLYLINE_OPTIONS, eventPriority = 100): PolylineEditorObservable {\r\n    const positions: Cartesian3[] = [];\r\n    const id = generateKey();\r\n    const polylineOptions = this.setOptions(options);\r\n\r\n    const clientEditSubject = new BehaviorSubject<PolylineEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      positions,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      polylineOptions: polylineOptions,\r\n    });\r\n\r\n    const finishCreation = (position: Cartesian3) => {\r\n      return this.switchToEditMode(\r\n        id,\r\n        position,\r\n        clientEditSubject,\r\n        positions,\r\n        eventPriority,\r\n        polylineOptions,\r\n        editorObservable,\r\n        finishedCreate);\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n      pickConfig: options.pickConfiguration,\r\n    });\r\n    const addPointRegistration = this.mapEventsManager.register({\r\n      event: polylineOptions.addPointEvent,\r\n      modifier: polylineOptions.addPointModifier,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n      pickConfig: options.pickConfiguration,\r\n    });\r\n    const addLastPointRegistration = this.mapEventsManager.register({\r\n      event: polylineOptions.addLastPointEvent,\r\n      modifier: polylineOptions.addLastPointModifier,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n      pickConfig: options.pickConfiguration,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\r\n      if (position) {\r\n        this.updateSubject.next({\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        });\r\n      }\r\n    });\r\n\r\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (finishedCreate) {\r\n        return;\r\n      }\r\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const allPositions = this.getPositions(id);\r\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\r\n        return;\r\n      }\r\n      const updateValue = {\r\n        id,\r\n        positions: allPositions,\r\n        editMode: EditModes.CREATE,\r\n        updatedPosition: position,\r\n        editAction: EditActions.ADD_POINT,\r\n      };\r\n      this.updateSubject.next(updateValue);\r\n      clientEditSubject.next({\r\n        ...updateValue,\r\n        positions: this.getPositions(id),\r\n        points: this.getPoints(id),\r\n      });\r\n      if (polylineOptions.maximumNumberOfPoints && allPositions.length + 1 === polylineOptions.maximumNumberOfPoints) {\r\n        finishedCreate = finishCreation(position);\r\n      }\r\n    });\r\n\r\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      // Add last point to positions if not already added\r\n      const allPositions = this.getPositions(id);\r\n      if (!allPositions.find((cartesian) => cartesian.equals(position))) {\r\n        const updateValue = {\r\n          id,\r\n          positions: allPositions,\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.ADD_POINT,\r\n        };\r\n        this.updateSubject.next(updateValue);\r\n        clientEditSubject.next({\r\n          ...updateValue,\r\n          positions: this.getPositions(id),\r\n          points: this.getPoints(id),\r\n        });\r\n      }\r\n\r\n      finishedCreate = finishCreation(position);\r\n    });\r\n\r\n    return editorObservable;\r\n  }\r\n\r\n  private switchToEditMode(id,\r\n                           position,\r\n                           clientEditSubject,\r\n                           positions: Cartesian3[],\r\n                           eventPriority,\r\n                           polylineOptions,\r\n                           editorObservable,\r\n                           finishedCreate: boolean) {\r\n    const update = {\r\n      id,\r\n      positions: this.getPositions(id),\r\n      editMode: EditModes.CREATE,\r\n      updatedPosition: position,\r\n      editAction: EditActions.ADD_LAST_POINT,\r\n    };\r\n    this.updateSubject.next(update);\r\n    clientEditSubject.next({\r\n      ...update,\r\n      positions: this.getPositions(id),\r\n      points: this.getPoints(id),\r\n    });\r\n\r\n    const changeMode = {\r\n      id,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.CHANGE_TO_EDIT,\r\n    };\r\n    this.updateSubject.next(changeMode);\r\n    clientEditSubject.next(changeMode);\r\n    if (this.observablesMap.has(id)) {\r\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n    }\r\n    this.observablesMap.delete(id);\r\n    this.editPolyline(id, positions, eventPriority, clientEditSubject, polylineOptions, editorObservable);\r\n    finishedCreate = true;\r\n    return finishedCreate;\r\n  }\r\n\r\n  edit(positions: Cartesian3[], options = DEFAULT_POLYLINE_OPTIONS, priority = 100): PolylineEditorObservable {\r\n    if (positions.length < 2) {\r\n      throw new Error('Polylines editor error edit(): polyline should have at least 2 positions');\r\n    }\r\n    const id = generateKey();\r\n    const polylineOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<PolylineEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT\r\n    });\r\n    const update = {\r\n      id,\r\n      positions: positions,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      polylineOptions: polylineOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n      positions: this.getPositions(id),\r\n      points: this.getPoints(id),\r\n    });\r\n    return this.editPolyline(\r\n      id,\r\n      positions,\r\n      priority,\r\n      editSubject,\r\n      polylineOptions\r\n    );\r\n  }\r\n\r\n  private editPolyline(id: string,\r\n                       positions: Cartesian3[],\r\n                       priority: number,\r\n                       editSubject: Subject<PolylineEditUpdate>,\r\n                       options: PolylineEditOptions,\r\n                       editObservable?: PolylineEditorObservable) {\r\n    this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: options.dragPointEvent,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    const pointRemoveRegistration = this.mapEventsManager.register({\r\n      event: options.removePointEvent,\r\n      modifier: options.removePointModifier,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    let shapeDragRegistration;\r\n    if (options.allowDrag) {\r\n      shapeDragRegistration = this.mapEventsManager.register({\r\n        event: options.dragShapeEvent,\r\n        entityType: EditPolyline,\r\n        pick: PickOptions.PICK_FIRST,\r\n        pickConfig: options.pickConfiguration,\r\n        priority,\r\n        pickFilter: entity => id === entity.editedEntityId,\r\n      });\r\n    }\r\n\r\n    if (shapeDragRegistration) {\r\n      shapeDragRegistration\r\n        .pipe(tap(({ movement: { drop } }) => this.polylinesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\r\n          const endDragPosition = this.screenToPosition(endPosition, false, options.clampHeightTo3DOptions);\r\n          const startDragPosition = this.screenToPosition(startPosition, false, options.clampHeightTo3DOptions);\r\n          if (!endDragPosition) {\r\n            return;\r\n          }\r\n\r\n          const update = {\r\n            id,\r\n            positions: this.getPositions(id),\r\n            editMode: EditModes.EDIT,\r\n            updatedPosition: endDragPosition,\r\n            draggedPosition: startDragPosition,\r\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\r\n          };\r\n          this.updateSubject.next(update);\r\n          editSubject.next({\r\n            ...update,\r\n            positions: this.getPositions(id),\r\n            points: this.getPoints(id),\r\n          });\r\n        });\r\n    }\r\n\r\n    pointDragRegistration.pipe(\r\n      tap(({ movement: { drop } }) => this.polylinesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\r\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n        if (!position) {\r\n          return;\r\n        }\r\n        const point: EditPoint = entities[0];\r\n\r\n        const update = {\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.EDIT,\r\n          updatedPosition: position,\r\n          updatedPoint: point,\r\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n          positions: this.getPositions(id),\r\n          points: this.getPoints(id),\r\n        });\r\n\r\n        this.clampPointsDebounced(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n      });\r\n\r\n    pointRemoveRegistration.subscribe(({ entities }) => {\r\n      const point: EditPoint = entities[0];\r\n      const allPositions = [...this.getPositions(id)];\r\n      if (allPositions.length < 3) {\r\n        return;\r\n      }\r\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\r\n      if (index < 0) {\r\n        return;\r\n      }\r\n\r\n      const update = {\r\n        id,\r\n        positions: allPositions,\r\n        editMode: EditModes.EDIT,\r\n        updatedPoint: point,\r\n        editAction: EditActions.REMOVE_POINT,\r\n      };\r\n      this.updateSubject.next(update);\r\n      editSubject.next({\r\n        ...update,\r\n        positions: this.getPositions(id),\r\n        points: this.getPoints(id),\r\n      });\r\n\r\n      this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\r\n    });\r\n\r\n    const observables = [pointDragRegistration, pointRemoveRegistration];\r\n    if (shapeDragRegistration) {\r\n      observables.push(shapeDragRegistration);\r\n    }\r\n    this.observablesMap.set(id, observables);\r\n    return this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private setOptions(options: PolylineEditOptions) {\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYLINE_OPTIONS));\r\n    const polylineOptions: PolylineEditOptions = Object.assign(defaultClone, options);\r\n    polylineOptions.pointProps = {...DEFAULT_POLYLINE_OPTIONS.pointProps, ...options.pointProps};\r\n    polylineOptions.polylineProps = {...DEFAULT_POLYLINE_OPTIONS.polylineProps, ...options.polylineProps};\r\n    polylineOptions.clampHeightTo3DOptions = {...DEFAULT_POLYLINE_OPTIONS.clampHeightTo3DOptions, ...options.clampHeightTo3DOptions};\r\n\r\n    if (options.clampHeightTo3D) {\r\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\r\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\r\n      }\r\n\r\n      if (this.cesiumScene.pickTranslucentDepth) {\r\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\r\n      }\r\n\r\n      if (polylineOptions.pointProps.color.alpha === 1 || polylineOptions.pointProps.outlineColor.alpha === 1) {\r\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\r\n      }\r\n\r\n      polylineOptions.allowDrag = false;\r\n      polylineOptions.polylineProps.clampToGround = true;\r\n      polylineOptions.pointProps.heightReference = polylineOptions.clampHeightTo3DOptions.clampToTerrain ?\r\n        HeightReference.CLAMP_TO_GROUND : HeightReference.RELATIVE_TO_GROUND;\r\n      polylineOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\r\n    }\r\n    return polylineOptions;\r\n  }\r\n\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\r\n                                                                                                      : PolylineEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setManually = (points: {\r\n      position: Cartesian3,\r\n      pointProp?: PointProps\r\n    }[] | Cartesian3[], polylineProps?: PolylineProps) => {\r\n      const polyline = this.polylinesManager.get(id);\r\n      polyline.setManually(points, polylineProps);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      });\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      });\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Polylines editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation(null);\r\n    };\r\n\r\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\r\n\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n\r\n    observableToExtend.getLabels = (): LabelProps[] => this.polylinesManager.get(id).labels;\r\n\r\n    return observableToExtend as PolylineEditorObservable;\r\n  }\r\n\r\n  private getPositions(id: string) {\r\n    const polyline = this.polylinesManager.get(id);\r\n    return polyline.getRealPositions();\r\n  }\r\n\r\n  private getPoints(id: string) {\r\n    const polyline = this.polylinesManager.get(id);\r\n    return polyline.getRealPoints();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport * as Cesium from 'cesium';\r\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\r\nimport { PolylinesManagerService } from '../../services/entity-editors/polyline-editor/polylines-manager.service';\r\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\r\nimport { EditablePolyline } from '../../models/editable-polyline';\r\nimport { LabelProps } from '../../models/label-props';\r\n\r\n@Component({\r\n  selector: 'polylines-editor',\r\n  template: /*html*/ `\r\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\r\n      <ac-polyline-desc\r\n        props=\"{\r\n        positions: polyline.getPositionsCallbackProperty(),\r\n        width: polyline.props.width,\r\n        material: polyline.props.material(),\r\n        clampToGround: polyline.props.clampToGround,\r\n        zIndex: polyline.props.zIndex,\r\n        classificationType: polyline.props.classificationType,\r\n      }\"\r\n      >\r\n      </ac-polyline-desc>\r\n    </ac-layer>\r\n\r\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\r\n      <ac-point-desc\r\n        props=\"{\r\n        position: point.getPositionCallbackProperty(),\r\n        pixelSize: getPointSize(point),\r\n        color: point.props.color,\r\n        outlineColor: point.props.outlineColor,\r\n        outlineWidth: point.props.outlineWidth,\r\n        show: getPointShow(point),\r\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n        heightReference: point.props.heightReference,\r\n    }\"\r\n      ></ac-point-desc>\r\n    </ac-layer>\r\n\r\n    <ac-layer #polylineLabelsLayer acFor=\"let polylineLabels of polylineLabels$\" [context]=\"this\">\r\n      <ac-array-desc acFor=\"let label of polylineLabels.labels\" [idGetter]=\"getLabelId\">\r\n        <ac-label-primitive-desc\r\n          props=\"{\r\n            position: label.position,\r\n            backgroundColor: label.backgroundColor,\r\n            backgroundPadding: label.backgroundPadding,\r\n            distanceDisplayCondition: label.distanceDisplayCondition,\r\n            eyeOffset: label.eyeOffset,\r\n            fillColor: label.fillColor,\r\n            font: label.font,\r\n            heightReference: label.heightReference,\r\n            horizontalOrigin: label.horizontalOrigin,\r\n            outlineColor: label.outlineColor,\r\n            outlineWidth: label.outlineWidth,\r\n            pixelOffset: label.pixelOffset,\r\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n            scale: label.scale,\r\n            scaleByDistance: label.scaleByDistance,\r\n            show: label.show,\r\n            showBackground: label.showBackground,\r\n            style: label.style,\r\n            text: label.text,\r\n            translucencyByDistance: label.translucencyByDistance,\r\n            verticalOrigin: label.verticalOrigin,\r\n            disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\"\r\n        >\r\n        </ac-label-primitive-desc>\r\n      </ac-array-desc>\r\n    </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, PolylinesManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PolylinesEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoints$ = new Subject<AcNotification>();\r\n  public editPolylines$ = new Subject<AcNotification>();\r\n  public polylineLabels$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\r\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\r\n  @ViewChild('polylineLabelsLayer') private polylineLabelsLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private polylinesEditor: PolylinesEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private polylinesManager: PolylinesManagerService,\r\n    private cesiumService: CesiumService,\r\n  ) {\r\n    this.polylinesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polylinesManager, this.cesiumService);\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.polylinesEditor.onUpdate().subscribe((update: PolylineEditUpdate) => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(polyline: EditablePolyline, update: PolylineEditUpdate, labels?: LabelProps[]) {\r\n    update.positions = polyline.getRealPositions();\r\n    update.points = polyline.getRealPoints();\r\n\r\n    if (labels) {\r\n      polyline.labels = labels;\r\n      this.polylineLabelsLayer.update(polyline, polyline.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    polyline.labels = this.editLabelsRenderFn(update, polyline.labels);\r\n    this.polylineLabelsLayer.update(polyline, polyline.getId());\r\n  }\r\n\r\n  removeEditLabels(polyline: EditablePolyline) {\r\n    polyline.labels = [];\r\n    this.polylineLabelsLayer.remove(polyline.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: PolylineEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.polylinesManager.createEditablePolyline(\r\n          update.id,\r\n          this.editPointsLayer,\r\n          this.editPolylinesLayer,\r\n          this.coordinateConverter,\r\n          update.polylineOptions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          polyline.moveTempMovingPoint(update.updatedPosition);\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_POINT: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          polyline.moveTempMovingPoint(update.updatedPosition);\r\n          polyline.addPoint(update.updatedPosition);\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_LAST_POINT: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          polyline.addLastPoint(update.updatedPosition);\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline) {\r\n          polyline.dispose();\r\n          this.removeEditLabels(polyline);\r\n          this.editLabelsRenderFn = undefined;\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(polyline, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        this.renderEditLabels(polyline, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        this.renderEditLabels(polyline, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: PolylineEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.polylinesManager.createEditablePolyline(\r\n          update.id,\r\n          this.editPointsLayer,\r\n          this.editPolylinesLayer,\r\n          this.coordinateConverter,\r\n          update.polylineOptions,\r\n          update.positions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline && polyline.enableEdit) {\r\n          polyline.movePoint(update.updatedPosition, update.updatedPoint);\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline && polyline.enableEdit) {\r\n          polyline.movePointFinish(update.updatedPoint);\r\n\r\n          if (update.updatedPoint.isVirtualEditPoint()) {\r\n            polyline.changeVirtualPointToRealPoint(update.updatedPoint);\r\n            this.renderEditLabels(polyline, update);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.REMOVE_POINT: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline && polyline.enableEdit) {\r\n          polyline.removePoint(update.updatedPoint);\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline) {\r\n          polyline.enableEdit = false;\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline) {\r\n          polyline.enableEdit = true;\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline && polyline.enableEdit) {\r\n          polyline.moveShape(update.draggedPosition, update.updatedPosition);\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case EditActions.DRAG_SHAPE_FINISH: {\r\n        const polyline = this.polylinesManager.get(update.id);\r\n        if (polyline && polyline.enableEdit) {\r\n          polyline.endMoveShape();\r\n          this.renderEditLabels(polyline, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.polylinesManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Cartesian3 } from 'cesium';\r\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\r\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\r\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\n@Injectable()\r\nexport class HippodromeManagerService {\r\n  hippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\r\n\r\n  createEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\r\n                           coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\r\n                           positions?: Cartesian3[]) {\r\n    const editableHippodrome = new EditableHippodrome(\r\n      id,\r\n      editHippodromeLayer,\r\n      editPointsLayer,\r\n      coordinateConverter,\r\n      hippodromeEditOptions,\r\n      positions);\r\n    this.hippodromes.set(id, editableHippodrome);\r\n  }\r\n\r\n  get(id: string): EditableHippodrome {\r\n    return this.hippodromes.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.hippodromes.forEach(hippodrome => hippodrome.dispose());\r\n    this.hippodromes.clear();\r\n  }\r\n}\r\n","import { publish, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Color, ClassificationType, ShadowMode, Cartesian3 } from 'cesium';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\n//import { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\r\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\r\nimport { HippodromeManagerService } from './hippodrome-manager.service';\r\nimport { HippodromeEditorObservable } from '../../../models/hippodrome-editor-oboservable';\r\nimport { HippodromeEditUpdate } from '../../../models/hippodrome-edit-update';\r\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\r\nimport { PointProps } from '../../../models/point-edit-options';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { generateKey } from '../../utils';\r\n\r\nexport const DEFAULT_HIPPODROME_OPTIONS: HippodromeEditOptions = {\r\n  addPointEvent: CesiumEvent.LEFT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  allowDrag: true,\r\n  hippodromeProps: {\r\n    fill: true,\r\n    material: Color.CORNFLOWERBLUE.withAlpha(0.4),\r\n    outline: true,\r\n    width: 200000.0,\r\n    outlineWidth: 1,\r\n    outlineColor: Color.WHITE.withAlpha(0.8),\r\n    classificationType: ClassificationType.BOTH,\r\n    zIndex: 0,\r\n    shadows: ShadowMode.DISABLED,\r\n  },\r\n  pointProps: {\r\n    color: Color.WHITE,\r\n    outlineColor: Color.BLACK.withAlpha(0.2),\r\n    outlineWidth: 1,\r\n    pixelSize: 13,\r\n    virtualPointPixelSize: 8,\r\n    show: true,\r\n    showVirtual: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n};\r\n\r\n/**\r\n * Service for creating editable hippodromes\r\n *\r\n * You must provide `HippodromeEditorService` yourself.\r\n * HippodromeEditorService works together with `<hippodromes-editor>` component. Therefor you need to create `<hippodromes-editor>`\r\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `HippodromeEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `HippodromeEditorObservable`.\r\n * + To stop editing call `dsipose()` from the `HippodromeEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over editted shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `HippodromeEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating hippodrome\r\n *  const editing$ = hippodromeEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit hippodromes from existing hippodromes cartesian3 positions\r\n *  const editing$ = this.hippodromeEditor.edit(initialPos);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class HippodromeEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<HippodromeEditUpdate>();\r\n  private updatePublisher = publish<HippodromeEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private hippodromeManager: HippodromeManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n\r\n  init(mapEventsManager: MapEventsManagerService,\r\n       coordinateConverter: CoordinateConverter,\r\n       cameraService: CameraService,\r\n       managerService: HippodromeManagerService) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.hippodromeManager = managerService;\r\n    this.updatePublisher.connect();\r\n  }\r\n\r\n  onUpdate(): Observable<HippodromeEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  create(options = DEFAULT_HIPPODROME_OPTIONS, eventPriority = 100): HippodromeEditorObservable {\r\n    const positions: Cartesian3[] = [];\r\n    const id = generateKey();\r\n    const hippodromeOptions = this.setOptions(options);\r\n\r\n    const clientEditSubject = new BehaviorSubject<HippodromeEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      positions,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      hippodromeOptions: hippodromeOptions,\r\n    });\r\n\r\n    const finishCreation = () => {\r\n      const changeMode = {\r\n        id,\r\n        editMode: EditModes.CREATE,\r\n        editAction: EditActions.CHANGE_TO_EDIT,\r\n      };\r\n      this.updateSubject.next(changeMode);\r\n      clientEditSubject.next(changeMode);\r\n      if (this.observablesMap.has(id)) {\r\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.editHippodrome(id, eventPriority, clientEditSubject, hippodromeOptions, editorObservable);\r\n      finishedCreate = true;\r\n      return finishedCreate;\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pickConfig: options.pickConfiguration,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n    });\r\n    const addPointRegistration = this.mapEventsManager.register({\r\n      event: hippodromeOptions.addPointEvent,\r\n      pickConfig: options.pickConfiguration,\r\n      pick: PickOptions.NO_PICK,\r\n      priority: eventPriority,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n\r\n      if (position) {\r\n        this.updateSubject.next({\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        });\r\n      }\r\n    });\r\n\r\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\r\n      if (finishedCreate) {\r\n        return;\r\n      }\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      const allPositions = this.getPositions(id);\r\n      const isFirstPoint = this.getPositions(id).length === 0;\r\n\r\n      const updateValue = {\r\n        id,\r\n        positions: allPositions,\r\n        editMode: EditModes.CREATE,\r\n        updatedPosition: position,\r\n        editAction: EditActions.ADD_POINT,\r\n      };\r\n      this.updateSubject.next(updateValue);\r\n      clientEditSubject.next({\r\n        ...updateValue,\r\n        positions: this.getPositions(id),\r\n        points: this.getPoints(id),\r\n        width: this.getWidth(id),\r\n      });\r\n\r\n      if (!isFirstPoint) {\r\n        finishedCreate = finishCreation();\r\n      }\r\n    });\r\n\r\n    return editorObservable;\r\n  }\r\n\r\n  edit(positions: Cartesian3[], options = DEFAULT_HIPPODROME_OPTIONS, priority = 100): HippodromeEditorObservable {\r\n    if (positions.length !== 2) {\r\n      throw new Error('Hippodrome editor error edit(): polygon should have 2 positions but received ' + positions);\r\n    }\r\n    const id = generateKey();\r\n    const hippodromeEditOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<HippodromeEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT\r\n    });\r\n    const update = {\r\n      id,\r\n      positions: positions,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      hippodromeOptions: hippodromeEditOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n      positions: this.getPositions(id),\r\n      points: this.getPoints(id),\r\n      width: this.getWidth(id),\r\n    });\r\n    return this.editHippodrome(\r\n      id,\r\n      priority,\r\n      editSubject,\r\n      hippodromeEditOptions\r\n    );\r\n  }\r\n\r\n  private editHippodrome(id: string,\r\n                         priority: number,\r\n                         editSubject: Subject<HippodromeEditUpdate>,\r\n                         options: HippodromeEditOptions,\r\n                         editObservable?: HippodromeEditorObservable): HippodromeEditorObservable {\r\n    let shapeDragRegistration;\r\n    if (options.allowDrag) {\r\n      shapeDragRegistration = this.mapEventsManager.register({\r\n        event: options.dragShapeEvent,\r\n        entityType: EditableHippodrome,\r\n        pick: PickOptions.PICK_FIRST,\r\n        pickConfig: options.pickConfiguration,\r\n        priority,\r\n        pickFilter: entity => id === entity.id,\r\n      });\r\n    }\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: options.dragPointEvent,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    pointDragRegistration.pipe(\r\n      tap(({movement: {drop}}) => this.hippodromeManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\r\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n        if (!position) {\r\n          return;\r\n        }\r\n        const point: EditPoint = entities[0];\r\n\r\n        const update = {\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.EDIT,\r\n          updatedPosition: position,\r\n          updatedPoint: point,\r\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n          positions: this.getPositions(id),\r\n          points: this.getPoints(id),\r\n          width: this.getWidth(id),\r\n        });\r\n      });\r\n\r\n    if (shapeDragRegistration) {\r\n      shapeDragRegistration\r\n        .pipe(tap(({movement: {drop}}) => this.hippodromeManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\r\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\r\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\r\n          if (!endDragPosition) {\r\n            return;\r\n          }\r\n\r\n          const update = {\r\n            id,\r\n            positions: this.getPositions(id),\r\n            editMode: EditModes.EDIT,\r\n            updatedPosition: endDragPosition,\r\n            draggedPosition: startDragPosition,\r\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\r\n          };\r\n          this.updateSubject.next(update);\r\n          editSubject.next({\r\n            ...update,\r\n            positions: this.getPositions(id),\r\n            points: this.getPoints(id),\r\n            width: this.getWidth(id),\r\n          });\r\n        });\r\n    }\r\n\r\n    const observables = [pointDragRegistration];\r\n    if (shapeDragRegistration) {\r\n      observables.push(shapeDragRegistration);\r\n    }\r\n\r\n    this.observablesMap.set(id, observables);\r\n    return this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private setOptions(options: HippodromeEditOptions): HippodromeEditOptions {\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_HIPPODROME_OPTIONS));\r\n    const hippodromeOptions = Object.assign(defaultClone, options);\r\n    hippodromeOptions.hippodromeProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.hippodromeProps, options.hippodromeProps);\r\n    hippodromeOptions.pointProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.pointProps, options.pointProps);\r\n    return hippodromeOptions;\r\n  }\r\n\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: () => boolean): HippodromeEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setManually = (firstPosition: Cartesian3,\r\n                                      secondPosition: Cartesian3,\r\n                                      widthMeters: number,\r\n                                      firstPointProp?: PointProps,\r\n                                      secondPointProp?: PointProps) => {\r\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\r\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\r\n\r\n      const hippodrome = this.hippodromeManager.get(id);\r\n      hippodrome.setPointsManually([firstP, secP], widthMeters);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      });\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      });\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Hippodrome editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation();\r\n    };\r\n\r\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n    observableToExtend.getLabels = (): LabelProps[] => this.hippodromeManager.get(id).labels;\r\n    observableToExtend.getCurrentWidth = (): number => this.getWidth(id);\r\n\r\n    return observableToExtend as HippodromeEditorObservable;\r\n  }\r\n\r\n  private getPositions(id: any) {\r\n    const hippodrome = this.hippodromeManager.get(id);\r\n    return hippodrome.getRealPositions();\r\n  }\r\n\r\n  private getPoints(id: any) {\r\n    const hippodrome = this.hippodromeManager.get(id);\r\n    return hippodrome.getRealPoints();\r\n  }\r\n\r\n  private getWidth(id: string) {\r\n    const hippodrome = this.hippodromeManager.get(id);\r\n    return hippodrome.getWidth();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { HippodromeManagerService } from '../../services/entity-editors/hippodrome-editor/hippodrome-manager.service';\r\nimport { HippodromeEditorService } from '../../services/entity-editors/hippodrome-editor/hippodrome-editor.service';\r\nimport { HippodromeEditUpdate } from '../../models/hippodrome-edit-update';\r\nimport { LabelProps } from '../../models/label-props';\r\nimport { EditableHippodrome } from '../../models/editable-hippodrome';\r\n\r\n@Component({\r\n  selector: 'hippodrome-editor',\r\n  template: /*html*/ `\r\n      <ac-layer #editHippodromesLayer acFor=\"let hippodrome of editHippodromes$\" [context]=\"this\">\r\n          <ac-corridor-desc props=\"{\r\n            positions: hippodrome.getRealPositionsCallbackProperty(),\r\n            cornerType: Cesium.CornerType.ROUNDED,\r\n            material: hippodrome.hippodromeProps.material,\r\n            width : hippodrome.hippodromeProps.width,\r\n            outline: hippodrome.hippodromeProps.outline,\r\n            outlineColor: hippodrome.hippodromeProps.outlineColor,\r\n            outlineWidth: hippodrome.hippodromeProps.outlineWidth,\r\n            height: 0,\r\n            classificationType: hippodrome.hippodromeProps.classificationType,\r\n            zIndex: hippodrome.hippodromeProps.zIndex,\r\n            shadows: hippodrome.hippodromeProps.shadows,\r\n    }\">\r\n          </ac-corridor-desc>\r\n\r\n          <ac-array-desc acFor=\"let label of hippodrome.labels\" [idGetter]=\"getLabelId\">\r\n              <ac-label-primitive-desc props=\"{\r\n            position: label.position,\r\n            backgroundColor: label.backgroundColor,\r\n            backgroundPadding: label.backgroundPadding,\r\n            distanceDisplayCondition: label.distanceDisplayCondition,\r\n            eyeOffset: label.eyeOffset,\r\n            fillColor: label.fillColor,\r\n            font: label.font,\r\n            heightReference: label.heightReference,\r\n            horizontalOrigin: label.horizontalOrigin,\r\n            outlineColor: label.outlineColor,\r\n            outlineWidth: label.outlineWidth,\r\n            pixelOffset: label.pixelOffset,\r\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n            scale: label.scale,\r\n            scaleByDistance: label.scaleByDistance,\r\n            show: label.show,\r\n            showBackground: label.showBackground,\r\n            style: label.style,\r\n            text: label.text,\r\n            translucencyByDistance: label.translucencyByDistance,\r\n            verticalOrigin: label.verticalOrigin,\r\n            disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\">\r\n              </ac-label-primitive-desc>\r\n          </ac-array-desc>\r\n      </ac-layer>\r\n\r\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\r\n          <ac-point-desc props=\"{\r\n         position: point.getPositionCallbackProperty(),\r\n         pixelSize: getPointSize(point),\r\n         color: point.props.color,\r\n         outlineColor: point.props.outlineColor,\r\n         outlineWidth: point.props.outlineWidth,\r\n         show: getPointShow(point),\r\n         disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n         heightReference: point.props.heightReference,\r\n    }\">\r\n          </ac-point-desc>\r\n      </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, HippodromeManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HippodromeEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: HippodromeEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoints$ = new Subject<AcNotification>();\r\n  public editHippodromes$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\r\n  @ViewChild('editHippodromesLayer') private editHippodromesLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private hippodromesEditor: HippodromeEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private hippodromesManager: HippodromeManagerService,\r\n  ) {\r\n    this.hippodromesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, hippodromesManager);\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.hippodromesEditor.onUpdate().subscribe((update: HippodromeEditUpdate) => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(hippodrome: EditableHippodrome, update: HippodromeEditUpdate, labels?: LabelProps[]) {\r\n    update.positions = hippodrome.getRealPositions();\r\n    update.points = hippodrome.getRealPoints();\r\n\r\n    if (labels) {\r\n      hippodrome.labels = labels;\r\n      this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    hippodrome.labels = this.editLabelsRenderFn(update, hippodrome.labels);\r\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\r\n  }\r\n\r\n  removeEditLabels(hippodrome: EditableHippodrome) {\r\n    hippodrome.labels = [];\r\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: HippodromeEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.hippodromesManager.createEditableHippodrome(\r\n          update.id,\r\n          this.editPointsLayer,\r\n          this.editHippodromesLayer,\r\n          this.coordinateConverter,\r\n          update.hippodromeOptions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_POINT: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\r\n          hippodrome.addPoint(update.updatedPosition);\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome) {\r\n          hippodrome.dispose();\r\n          this.removeEditLabels(hippodrome);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(hippodrome, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: HippodromeEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.hippodromesManager.createEditableHippodrome(\r\n          update.id,\r\n          this.editPointsLayer,\r\n          this.editHippodromesLayer,\r\n          this.coordinateConverter,\r\n          update.hippodromeOptions,\r\n          update.positions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome && hippodrome.enableEdit) {\r\n          hippodrome.movePoint(update.updatedPosition, update.updatedPoint);\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome && hippodrome.enableEdit) {\r\n          hippodrome.endMovePoint();\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome) {\r\n          hippodrome.enableEdit = false;\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome) {\r\n          hippodrome.enableEdit = true;\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome && hippodrome.enableEdit) {\r\n          hippodrome.moveShape(update.draggedPosition, update.updatedPosition);\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case EditActions.DRAG_SHAPE_FINISH: {\r\n        const hippodrome = this.hippodromesManager.get(update.id);\r\n        if (hippodrome && hippodrome.enableEdit) {\r\n          hippodrome.endMoveShape();\r\n          this.renderEditLabels(hippodrome, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.hippodromesManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n","import { fromEvent as observableFromEvent, Observable, Subject } from 'rxjs';\r\n\r\nimport { map, merge, takeUntil, tap } from 'rxjs/operators';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Cartesian3 } from 'cesium';\r\nimport { Vec2 } from '../../angular-cesium/models/vec2';\r\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\r\n\r\nexport interface IconDragEvent {\r\n  initialScreenPosition: Vec2;\r\n  screenPosition: Vec2;\r\n  mapPosition: Cartesian3;\r\n  drop: boolean;\r\n}\r\n\r\n/**\r\n * The Service is used to preform, handle and subscribe to icon dragging when using the `DraggableToMapDirective`.\r\n * For more info check `DraggableToMapDirective` docs.\r\n */\r\n\r\n@Injectable()\r\nexport class DraggableToMapService {\r\n\r\n  private coordinateConverter: CoordinateConverter;\r\n  private dragObservable: Observable<IconDragEvent>;\r\n  private stopper: Subject<any>;\r\n  private mainSubject = new Subject<IconDragEvent>();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any, private mapsManager: MapsManagerService) {\r\n  }\r\n\r\n  setCoordinateConverter(coordinateConverter: CoordinateConverter) {\r\n    this.coordinateConverter = coordinateConverter;\r\n  }\r\n\r\n  drag(imageSrc: string, style?: any) {\r\n    if (!this.coordinateConverter) {\r\n      const mapComponent = this.mapsManager.getMap();\r\n      if (mapComponent) {\r\n        this.coordinateConverter = mapComponent.getCoordinateConverter();\r\n      }\r\n    }\r\n    this.cancel();\r\n    const imgElement = document.createElement('img');\r\n    imgElement.src = imageSrc;\r\n    imgElement.style.position = 'fixed';\r\n    imgElement.style.visibility = 'hidden';\r\n    imgElement.style.width = '30px';\r\n    imgElement.style.height = '30px';\r\n    imgElement.style['user-drag'] = 'none';\r\n    imgElement.style['user-select'] = 'none';\r\n    imgElement.style['-moz-user-select'] = 'none';\r\n    imgElement.style['-webkit-user-drag'] = 'none';\r\n    imgElement.style['-webkit-user-select'] = 'none';\r\n    imgElement.style['-ms-user-select'] = 'none';\r\n    Object.assign(imgElement.style, style);\r\n    document.body.appendChild(imgElement);\r\n\r\n    this.createDragObservable();\r\n    this.dragObservable.subscribe(\r\n      (e) => {\r\n        imgElement.style.visibility = 'visible';\r\n        imgElement.style.left = e.screenPosition.x - imgElement.clientWidth / 2 + 'px';\r\n        imgElement.style.top = e.screenPosition.y - imgElement.clientHeight / 2 + 'px';\r\n        this.mainSubject.next(e);\r\n        if (e.drop) {\r\n          imgElement.remove();\r\n        }\r\n      },\r\n      (e: any) => {\r\n        imgElement.remove();\r\n      },\r\n      () => {\r\n        imgElement.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  dragUpdates(): Observable<IconDragEvent> {\r\n    return this.mainSubject;\r\n  }\r\n\r\n  cancel() {\r\n    if (this.stopper) {\r\n      this.stopper.next(true);\r\n      this.stopper = undefined;\r\n      this.dragObservable = undefined;\r\n    }\r\n  }\r\n\r\n  private createDragObservable() {\r\n    const stopper = new Subject();\r\n    const dropSubject = new Subject<any>();\r\n    const pointerUp = observableFromEvent(document, 'pointerup');\r\n    const pointerMove = observableFromEvent(document, 'pointermove');\r\n\r\n    let dragStartPositionX: number;\r\n    let dragStartPositionY: number;\r\n    let lastMove: any;\r\n    const moveObservable = pointerMove.pipe(map((e: any) => {\r\n        dragStartPositionX = dragStartPositionX ? dragStartPositionX : e.x;\r\n        dragStartPositionY = dragStartPositionY ? dragStartPositionY : e.y;\r\n        lastMove = {\r\n          drop: false,\r\n          initialScreenPosition: {\r\n            x: dragStartPositionX,\r\n            y: dragStartPositionY,\r\n          },\r\n          screenPosition: {\r\n            x: e.x,\r\n            y: e.y,\r\n          },\r\n          mapPosition: this.coordinateConverter ?\r\n            this.coordinateConverter.screenToCartesian3({x: e.x, y: e.y}) : undefined,\r\n        };\r\n        return lastMove;\r\n      }),\r\n      takeUntil(pointerUp),\r\n      tap(undefined, undefined, () => {\r\n        if (lastMove) {\r\n          const dropEvent = Object.assign({}, lastMove);\r\n          dropEvent.drop = true;\r\n          dropSubject.next(dropEvent);\r\n        }\r\n      }), );\r\n\r\n    this.dragObservable = moveObservable.pipe(merge(dropSubject), takeUntil(stopper), );\r\n    this.stopper = stopper;\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\r\nimport { DraggableToMapService } from '../services/draggable-to-map.service';\r\n\r\n/**\r\n * This directive is used to allow dragging of icons from outside the map over the map\r\n * while being notified of the dragging position and drop position with an observable exposed from `DraggableToMapService`.\r\n * @Input {src: string, style?: any} | string -\r\n * the [src: string | string] should be the image src of the dragged image.\r\n * The style is an optional style object for the image.\r\n *\r\n * example:\r\n * ```\r\n * <a href=\"...\" class=\"...\" [draggableToMap]=\"{src: '../assets/GitHub-Mark-Light.png', style: {width: '50px', height: '50px'}}\">\r\n *     <img class=\"github\" src=\"../assets/GitHub-Mark-Light.png\">\r\n * </a>\r\n * ```\r\n *\r\n * In order the get notified of the dragging location  and drop state subscribe to `DraggableToMapService.dragUpdates()`\r\n * ```\r\n *  this.iconDragService.dragUpdates().subscribe(e => console.log(e));\r\n * ```\r\n *\r\n * In order the cancel dragging use `DraggableToMapService.cancel()`\r\n * ```\r\n *  this.iconDragService.cancel();\r\n * ```\r\n */\r\n\r\n@Directive({selector: '[draggableToMap]'})\r\nexport class DraggableToMapDirective implements OnInit {\r\n  @Input() draggableToMap: { src: string, style?: any } | string;\r\n  private src: string;\r\n  private style: any;\r\n\r\n  constructor(el: ElementRef, private iconDragService: DraggableToMapService) {\r\n    el.nativeElement.style['user-drag'] = 'none';\r\n    el.nativeElement.style['user-select'] = 'none';\r\n    el.nativeElement.style['-moz-user-select'] = 'none';\r\n    el.nativeElement.style['-webkit-user-drag'] = 'none';\r\n    el.nativeElement.style['-webkit-user-select'] = 'none';\r\n    el.nativeElement.style['-ms-user-select'] = 'none';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.draggableToMap === 'string') {\r\n      this.src = this.draggableToMap;\r\n    } else {\r\n      this.src = this.draggableToMap.src;\r\n      this.style = this.draggableToMap.style;\r\n    }\r\n  }\r\n\r\n  @HostListener('mousedown')\r\n  onMouseDown() {\r\n    this.iconDragService.drag(this.src, this.style);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n/**\r\n * Toolbar button widget, act as a single button inside ac-toolbar component\r\n * Can accepts content components or passing [iconUrl]\r\n * configure with: `[iconUrl]`,`[buttonClass]`,`[iconClass]`,`(onClick)`\r\n *\r\n * Usage:\r\n * ```\r\n * <ac-toolbar [allowDrag]=\"true\">\r\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\r\n </ac-toolbar-button>\r\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\r\n </ac-toolbar-button>\r\n </ac-toolbar>\r\n * ```\r\n *\r\n */\r\n@Component(\r\n  {\r\n    selector: 'ac-toolbar-button',\r\n    template: `\r\n        <div (click)=\"onClick.emit()\" class=\"button-container {{buttonClass}}\">\r\n            <img *ngIf=\"iconUrl\" [src]=\"iconUrl\" class=\"icon {{iconClass}}\"/>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .button-container {\r\n            border-radius: 1px;\r\n            background-color: rgba(255, 255, 255, 0.8);\r\n            height: 30px;\r\n            width: 30px;\r\n            padding: 5px;\r\n            transition: all 0.2s;\r\n            cursor: pointer;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            flex-direction: column;\r\n        }\r\n\r\n        .button-container:hover {\r\n            background-color: rgba(255, 255, 255, 0.95);\r\n        }\r\n\r\n        .icon {\r\n            height: 30px;\r\n            width: 30px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n  }\r\n)\r\nexport class AcToolbarButtonComponent implements OnInit {\r\n\r\n  @Input()\r\n  iconUrl: string;\r\n\r\n  @Input()\r\n  buttonClass: string;\r\n\r\n  @Input()\r\n  iconClass: string;\r\n\r\n  @Output()\r\n  onClick = new EventEmitter();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component(\r\n  {\r\n    selector: 'ac-drag-icon',\r\n    template: `\r\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"  height=\"25\"  width=\"25\"\r\n\t viewBox=\"0 0 476.737 476.737\" style=\"enable-background:new 0 0 476.737 476.737;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<path style=\"fill:#010002;\" d=\"M475.498,232.298l-3.401-5.149l-63.565-63.565c-6.198-6.198-16.304-6.198-22.47,0\r\n\t\t\tc-6.198,6.198-6.198,16.273,0,22.47l36.423,36.423H254.26V54.253l36.423,36.423c6.166,6.198,16.273,6.198,22.47,0\r\n\t\t\tc6.166-6.198,6.166-16.273,0-22.47L249.588,4.64l-0.159-0.095l-4.99-3.305L238.369,0h-0.064l-6.007,1.24l-4.99,3.305l-0.191,0.095\r\n\t\t\tl-63.565,63.565c-6.198,6.198-6.198,16.273,0,22.47s16.273,6.198,22.47,0l36.455-36.423v168.225H54.253l36.423-36.423\r\n\t\t\tc6.198-6.198,6.198-16.273,0-22.47s-16.273-6.198-22.47,0L4.64,227.149l-0.095,0.159l-3.305,4.99L0,238.369v0.064l1.24,6.007\r\n\t\t\tl3.305,4.958l0.095,0.191l63.565,63.565c6.198,6.198,16.273,6.198,22.47,0c6.198-6.166,6.198-16.273,0-22.47L54.253,254.26\r\n\t\t\th168.225v168.225l-36.423-36.423c-6.198-6.166-16.273-6.166-22.47,0c-6.198,6.198-6.198,16.304,0,22.47l63.565,63.565l5.149,3.432\r\n\t\t\tl6.007,1.208h0.064l6.07-1.24l5.149-3.401l63.565-63.565c6.166-6.198,6.166-16.304,0-22.47c-6.198-6.198-16.304-6.198-22.47,0\r\n\t\t\tl-36.423,36.423V254.26h168.225l-36.423,36.423c-6.166,6.166-6.166,16.273,0,22.47c6.198,6.166,16.304,6.166,22.47,0\r\n\t\t\tl63.565-63.565l3.432-5.149l1.208-6.007v-0.064L475.498,232.298z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n    `,\r\n  }\r\n)\r\nexport class DragIconComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { fromEvent as observableFromEvent, Subscription, Observable } from 'rxjs';\r\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\r\n\r\n\r\n/**\r\n * Toolbar widget, act as a container for ac-toolbar-button components\r\n * allowing drag configuration and passing `toolbarClass` as attributes\r\n *\r\n * Usage:\r\n * ```\r\n * <ac-toolbar [allowDrag]=\"true\" (onDrag)=\"handleDrag($event)\">\r\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\r\n </ac-toolbar-button>\r\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\r\n </ac-toolbar-button>\r\n </ac-toolbar>\r\n * ```\r\n *\r\n */\r\n@Component(\r\n  {\r\n    selector: 'ac-toolbar',\r\n    template: `\r\n        <div class=\"{{toolbarClass}}\">\r\n            <div *ngIf=\"allowDrag\">\r\n                <ac-toolbar-button>\r\n                    <ac-drag-icon></ac-drag-icon>\r\n                </ac-toolbar-button>\r\n            </div>\r\n\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            position: absolute;\r\n            top: 20px;\r\n            left: 20px;\r\n            width: 20px;\r\n            height: 20px;\r\n            z-index: 999;\r\n            -webkit-user-drag: none;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n  }\r\n)\r\nexport class AcToolbarComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input()\r\n  toolbarClass: string;\r\n  @Input()\r\n  allowDrag = true;\r\n  @Output()\r\n  onDrag = new EventEmitter<MouseEvent>();\r\n\r\n  dragStyle = {\r\n    'height.px': 20,\r\n    'width.px': 20,\r\n  };\r\n\r\n  private mouseDown$: Observable<MouseEvent>;\r\n  private mouseMove$: Observable<MouseEvent>;\r\n  private mouseUp$: Observable<MouseEvent>;\r\n  private drag$: Observable<MouseEvent>;\r\n  private dragSubscription: Subscription;\r\n\r\n  constructor(private element: ElementRef, private cesiumService: CesiumService) {}\r\n\r\n  ngOnInit() {\r\n    //this.cesiumService.getMap().getMapContainer().appendChild(this.element.nativeElement);\r\n    this.cesiumService.getMapContainer().appendChild(this.element.nativeElement);\r\n    if (this.allowDrag) {\r\n      this.listenForDragging();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.allowDrag && changes.allowDrag.currentValue && !changes.allowDrag.previousValue) {\r\n      this.listenForDragging();\r\n    }\r\n\r\n    if (changes.allowDrag && !changes.allowDrag.currentValue && changes.allowDrag.previousValue) {\r\n      this.dragSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.dragSubscription) {\r\n      this.dragSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private listenForDragging() {\r\n    this.mouseDown$ = this.mouseDown$ || observableFromEvent(this.element.nativeElement, 'mousedown');\r\n    this.mouseMove$ = this.mouseMove$ || observableFromEvent(document, 'mousemove') as Observable<MouseEvent>;\r\n    this.mouseUp$ = this.mouseUp$ || observableFromEvent(document, 'mouseup') as Observable<MouseEvent>;\r\n\r\n    this.drag$ = this.drag$ ||\r\n                 this.mouseDown$.pipe(\r\n                    switchMap(() => this.mouseMove$.pipe(\r\n                      tap(this.onDrag.emit),\r\n                      takeUntil(this.mouseUp$)\r\n                    ))\r\n                 );\r\n\r\n    this.dragSubscription = this.drag$.subscribe((event: MouseEvent) => {\r\n      this.element.nativeElement.style.left = `${event.x}px`;\r\n      this.element.nativeElement.style.top = `${event.y}px`;\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Color, Cartesian2, Cartesian3 } from 'cesium';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { PolylineEditorObservable } from '../../models/polyline-editor-observable';\r\nimport { PolylineEditOptions } from '../../models/polyline-edit-options';\r\nimport { LabelProps, LabelStyle } from '../../models/label-props';\r\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\r\n\r\n/**\r\n *\r\n * Range and bearing component that is used to draw range and bearing on the map.\r\n * The inputs are used to customize the range and bearing style and behavior.\r\n * Create component reference and use the `create()` function to start creating R&B on the map.\r\n * The function receives an optional RangeAndBearingOptions object that defines the created range and bearing style and behavior\r\n * (on top of the default and global definitions).\r\n *\r\n * Usage:\r\n *\r\n * my-component.ts:\r\n *\r\n * ```\r\n * \\@ViewChild('rangeAndBearing', {static: false}) private rangeAndBearing: RangeAndBearingComponent; // Get R&B reference\r\n *  // ...\r\n * this.rangeAndBearing.create({style: { pointProps: { pixelSize: 12 } }, bearingLabelsStyle: { fillColor: Color.GREEN } });\r\n * ```\r\n *\r\n * my-component.html\r\n * ```\r\n * <range-and-bearing #rangeAndBearing></range-and-bearing> // Optional inputs defines global style and behavior.\r\n * ```\r\n *\r\n */\r\n@Component({\r\n  selector: 'range-and-bearing',\r\n  template: `\r\n    <polylines-editor></polylines-editor>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [PolylinesEditorService],\r\n})\r\nexport class RangeAndBearingComponent {\r\n  @Input() lineEditOptions?: PolylineEditOptions = {};\r\n  @Input() labelsStyle?: LabelStyle = {};\r\n  @Input() distanceLabelsStyle?: LabelStyle = {};\r\n  @Input() bearingLabelsStyle?: LabelStyle = {};\r\n  @Input() bearingStringFn?: (value: number) => string;\r\n  @Input() distanceStringFn?: (value: number) => string;\r\n  @Input() labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n\r\n  constructor(private polylineEditor: PolylinesEditorService, private coordinateConverter: CoordinateConverter) {\r\n  }\r\n\r\n  create(\r\n    {\r\n      lineEditOptions = {},\r\n      labelsStyle = {},\r\n      distanceLabelsStyle = {},\r\n      bearingLabelsStyle = {},\r\n      bearingStringFn,\r\n      distanceStringFn,\r\n      labelsRenderFn,\r\n    }: RangeAndBearingOptions = {lineEditOptions: {}, labelsStyle: {}, distanceLabelsStyle: {}, bearingLabelsStyle: {}},\r\n  ): PolylineEditorObservable {\r\n    const rnb = this.polylineEditor.create({\r\n      allowDrag: false,\r\n      pointProps: {\r\n        showVirtual: false,\r\n        pixelSize: 8,\r\n      },\r\n      polylineProps: {\r\n        width: 2,\r\n      },\r\n      ...this.lineEditOptions,\r\n      ...lineEditOptions,\r\n    });\r\n\r\n    if (labelsRenderFn) {\r\n      rnb.setLabelsRenderFn(labelsRenderFn);\r\n    } else if (this.labelsRenderFn) {\r\n      rnb.setLabelsRenderFn(this.labelsRenderFn);\r\n    } else {\r\n      rnb.setLabelsRenderFn(update => {\r\n        const positions = update.positions;\r\n        let totalDistance = 0;\r\n        if (!positions || positions.length === 0) {\r\n          return [];\r\n        }\r\n        return (update.editMode === EditModes.CREATE && update.editAction !== EditActions.ADD_LAST_POINT\r\n            ? [...positions, update.updatedPosition]\r\n            : positions\r\n        ).reduce(\r\n          (labels, position, index, array) => {\r\n            if (index !== 0) {\r\n              const previousPosition = array[index - 1];\r\n              const bearing = this.coordinateConverter.bearingToCartesian(previousPosition, position);\r\n              const distance = Cartesian3.distance(previousPosition, position) / 1000;\r\n              labels.push(\r\n                {\r\n                  text:\r\n                    (bearingStringFn && bearingStringFn(bearing)) ||\r\n                    (this.bearingStringFn && this.bearingStringFn(bearing)) ||\r\n                    `${bearing.toFixed(2)}°`,\r\n                  scale: 0.2,\r\n                  font: '80px Helvetica',\r\n                  pixelOffset: new Cartesian2(-20, -8),\r\n                  position: new Cartesian3(\r\n                    (position.x + previousPosition.x) / 2,\r\n                    (position.y + previousPosition.y) / 2,\r\n                    (position.z + previousPosition.z) / 2,\r\n                  ),\r\n                  fillColor: Color.WHITE,\r\n                  outlineColor: Color.WHITE,\r\n                  showBackground: true,\r\n                  ...(this.labelsStyle as any),\r\n                  ...(labelsStyle as any),\r\n                  ...(this.bearingLabelsStyle as any),\r\n                  ...(bearingLabelsStyle as any),\r\n                },\r\n                {\r\n                  text:\r\n                    (distanceStringFn && distanceStringFn(totalDistance + distance)) ||\r\n                    (this.distanceStringFn && this.distanceStringFn(totalDistance + distance)) ||\r\n                    `${(totalDistance + distance).toFixed(2)} Km`,\r\n                  scale: 0.2,\r\n                  font: '80px Helvetica',\r\n                  pixelOffset: new Cartesian2(-35, -8),\r\n                  position: position,\r\n                  fillColor: Color.WHITE,\r\n                  outlineColor: Color.WHITE,\r\n                  showBackground: true,\r\n                  ...(this.labelsStyle as any),\r\n                  ...(labelsStyle as any),\r\n                  ...(this.distanceLabelsStyle as any),\r\n                  ...(distanceLabelsStyle as any),\r\n                },\r\n              );\r\n\r\n              totalDistance += distance;\r\n            }\r\n\r\n            return labels;\r\n          },\r\n          [\r\n            {\r\n              text: (distanceStringFn && distanceStringFn(0)) || (this.distanceStringFn && this.distanceStringFn(0)) || `0 Km`,\r\n              scale: 0.2,\r\n              font: '80px Helvetica',\r\n              pixelOffset: new Cartesian2(-20, -8),\r\n              position: positions[0],\r\n              fillColor: Color.WHITE,\r\n              outlineColor: Color.WHITE,\r\n              showBackground: true,\r\n              ...(this.labelsStyle as any),\r\n              ...(labelsStyle as any),\r\n              ...(this.distanceLabelsStyle as any),\r\n              ...(distanceLabelsStyle as any),\r\n            },\r\n          ],\r\n        );\r\n      });\r\n    }\r\n\r\n    return rnb;\r\n  }\r\n}\r\n\r\nexport interface RangeAndBearingOptions {\r\n  lineEditOptions?: PolylineEditOptions;\r\n  labelsStyle?: LabelStyle;\r\n  distanceLabelsStyle?: LabelStyle;\r\n  bearingLabelsStyle?: LabelStyle;\r\n  bearingStringFn?: (value: number) => string;\r\n  distanceStringFn?: (value: number) => string;\r\n  labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Cartographic, Rectangle } from 'cesium';\r\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\r\nimport { CameraService } from '../../angular-cesium/services/camera/camera.service';\r\nimport { CesiumService } from '../../angular-cesium/services/cesium/cesium.service';\r\nimport { AcMapComponent } from '../../angular-cesium/components/ac-map/ac-map.component';\r\n\r\ninterface ZoomData {\r\n  container: HTMLElement;\r\n  borderElement?: HTMLElement;\r\n  resetOnEscapePressFunc?: EventListenerOrEventListenerObject;\r\n}\r\n\r\n/**\r\n * The Service is as a \"zoom to rectangle\" tool\r\n *\r\n * example:\r\n * ```\r\n * constructor(\r\n *   private cameraService: CameraService,\r\n *   private cesiumService: CesiumService,\r\n *   private zoomToRectangleService: ZoomToRectangleService,\r\n * ) {\r\n *   this.zoomToRectangleService.init(cesiumService, cameraService);\r\n * }\r\n * ...\r\n * this.zoomToRectangleService.activate({onComplete: () => this.zoomToRectangleService.disable()});\r\n * ```\r\n *\r\n * `init()` - initialize the service with CameraService and CesiumService.\r\n * If no mapId is provided to activate() - must be called before calling `activate()`.\r\n *\r\n * `disable()` - disables the tool.\r\n *\r\n * `activate()` -\r\n * @param options\r\n * {\r\n *  onStart - optional - a callback that will be called when the user start drawing the rectangle\r\n *  onComplete - optional - a callback that will be called when the tool zoom in\r\n *  autoDisableOnZoom - optional - determines if the tool should auto disable after zoom - default: true\r\n *  animationDurationInSeconds - optional - zoom animation duration in seconds - default: 0.5\r\n *  borderStyle - optional - the style of the rectangle element border - default: '3px dashed #FFFFFF'\r\n *  backgroundColor - optional - the background color of the rectangle element - default: 'transparent'\r\n *  resetKeyCode - optional - the key code of the key that is used to reset the drawing of the rectangle - default: 27 (ESC key)\r\n *  threshold - optional - the minimum area of the screen rectangle (in pixels) that is required to perform zoom - default: 9\r\n *  keepRotation - optional - whether or not to keep the rotation when zooming in - default: true\r\n *  mouseButton - optional - sets the mouse button for drawing the rectangle - default: left mouse button (0)\r\n * }\r\n * @param mapId - optional - the mapId of the map that the tool will be used in.\r\n *\r\n */\r\n\r\nexport enum MouseButtons {\r\n  LEFT = 0,\r\n  MIDDLE = 1,\r\n  RIGHT = 2,\r\n}\r\n\r\n@Injectable()\r\nexport class ZoomToRectangleService {\r\n  constructor(\r\n    private mapsManager: MapsManagerService,\r\n    @Optional() cameraService: CameraService,\r\n    @Optional() cesiumService: CesiumService,\r\n  ) {}\r\n\r\n  private cameraService: CameraService;\r\n  private cesiumService: CesiumService;\r\n\r\n  private mapsZoomElements = new Map<string, ZoomData>();\r\n  private defaultOptions = {\r\n    animationDurationInSeconds: 0.5,\r\n    resetKeyCode: 27,\r\n    borderStyle: '2px solid rgba(0,0,0,0.5)',\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n    autoDisableOnZoom: true,\r\n    threshold: 9,\r\n    keepRotation: true,\r\n    mouseButton: MouseButtons.LEFT,\r\n  };\r\n\r\n  init(cesiumService: CesiumService, cameraService: CameraService) {\r\n    this.cameraService = cameraService;\r\n    this.cesiumService = cesiumService;\r\n  }\r\n\r\n  activate(\r\n    options: {\r\n      onStart?: (acMap?: AcMapComponent) => any;\r\n      onComplete?: (acMap?: AcMapComponent) => any;\r\n      mouseButton?: MouseButtons;\r\n      autoDisableOnZoom?: boolean;\r\n      animationDurationInSeconds?: number;\r\n      threshold?: number;\r\n      keepRotation?: boolean;\r\n      borderStyle?: string;\r\n      backgroundColor?: string;\r\n      resetKeyCode?: number;\r\n    } = {},\r\n    mapId?: string,\r\n  ) {\r\n    if ((!this.cameraService || !this.cesiumService) && !mapId) {\r\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\r\n    }\r\n    const finalOptions = Object.assign({}, this.defaultOptions, options);\r\n    let cameraService = this.cameraService;\r\n    let mapContainer;\r\n    let map;\r\n    if (this.cesiumService) {\r\n      mapContainer = this.cesiumService.getViewer().container;\r\n    }\r\n    if (!mapId) {\r\n      map = this.mapsManager.getMap();\r\n      mapId = map.getId();\r\n    } else {\r\n      map = this.mapsManager.getMap(mapId);\r\n      if (!map) {\r\n        throw new Error(`Map not found with id: ${mapId}`);\r\n      }\r\n    }\r\n    cameraService = map.getCameraService();\r\n    mapContainer = map.getCesiumViewer().container;\r\n    \r\n\r\n    if (!cameraService || !mapContainer) {\r\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\r\n    }\r\n    this.disable(mapId);\r\n    const container = document.createElement('div');\r\n    mapContainer.style.position = 'relative';\r\n    container.style.position = 'absolute';\r\n    container.style.width = '100%';\r\n    container.style.height = '100%';\r\n    container.style.top = '0';\r\n    container.style.left = '0';\r\n    mapContainer.appendChild(container);\r\n    const mapZoomData: ZoomData = { container };\r\n    this.mapsZoomElements.set(mapId, mapZoomData);\r\n    let mouse = {\r\n      endX: 0,\r\n      endY: 0,\r\n      startX: 0,\r\n      startY: 0,\r\n    };\r\n    let borderElement: HTMLElement | undefined;\r\n\r\n    container.onmousedown = e => {\r\n      if (e.button !== finalOptions.mouseButton) {\r\n        return;\r\n      }\r\n      if (!borderElement) {\r\n        if (options && options.onStart) {\r\n          options.onStart(map);\r\n        }\r\n\r\n        const rect = (e.currentTarget as any).getBoundingClientRect();\r\n        const offsetX = e.clientX - rect.left;\r\n        const offsetY = e.clientY - rect.top;\r\n        mouse.startX = offsetX;\r\n        mouse.startY = offsetY;\r\n        borderElement = document.createElement('div');\r\n        borderElement.className = 'zoom-to-rectangle-border';\r\n        borderElement.style.position = 'absolute';\r\n        borderElement.style.border = finalOptions.borderStyle;\r\n        borderElement.style.backgroundColor = finalOptions.backgroundColor;\r\n        borderElement.style.left = mouse.startX + 'px';\r\n        borderElement.style.top = mouse.startY + 'px';\r\n        container.appendChild(borderElement);\r\n        mapZoomData.borderElement = borderElement;\r\n      }\r\n    };\r\n\r\n    container.onmouseup = e => {\r\n      if (borderElement) {\r\n        let zoomApplied;\r\n        if (mouse && Math.abs(mouse.endX - mouse.startX) * Math.abs(mouse.endY - mouse.startY) > finalOptions.threshold) {\r\n          zoomApplied = this.zoomCameraToRectangle(\r\n            cameraService,\r\n            mouse,\r\n            finalOptions.animationDurationInSeconds,\r\n            finalOptions,\r\n          );\r\n        }\r\n        borderElement.remove();\r\n        borderElement = undefined;\r\n        mapZoomData.borderElement = undefined;\r\n        mouse = {\r\n          endX: 0,\r\n          endY: 0,\r\n          startX: 0,\r\n          startY: 0,\r\n        };\r\n        if (!!finalOptions.onComplete) {\r\n          finalOptions.onComplete(map);\r\n        }\r\n        if (finalOptions.autoDisableOnZoom && zoomApplied) {\r\n          this.disable(mapId);\r\n        }\r\n      }\r\n    };\r\n\r\n    container.onmousemove = e => {\r\n      if (borderElement) {\r\n        const rect = (e.currentTarget as any).getBoundingClientRect();\r\n        const offsetX = e.clientX - rect.left;\r\n        const offsetY = e.clientY - rect.top;\r\n        mouse.endX = offsetX;\r\n        mouse.endY = offsetY;\r\n        borderElement.style.width = Math.abs(mouse.endX - mouse.startX) + 'px';\r\n        borderElement.style.height = Math.abs(mouse.endY - mouse.startY) + 'px';\r\n        borderElement.style.left = Math.min(mouse.startX, mouse.endX) + 'px';\r\n        borderElement.style.top = Math.min(mouse.startY, mouse.endY) + 'px';\r\n      }\r\n    };\r\n\r\n    const resetOnEscapePress = e => {\r\n      if (e.keyCode === finalOptions.resetKeyCode && borderElement) {\r\n        borderElement.remove();\r\n        borderElement = undefined;\r\n        mapZoomData.borderElement = undefined;\r\n        mouse = {\r\n          endX: 0,\r\n          endY: 0,\r\n          startX: 0,\r\n          startY: 0,\r\n        };\r\n      }\r\n    };\r\n    document.addEventListener('keydown', resetOnEscapePress);\r\n    mapZoomData.resetOnEscapePressFunc = resetOnEscapePress;\r\n  }\r\n\r\n  public disable(mapId?: string) {\r\n    if (!this.mapsManager && !mapId) {\r\n      throw new Error('If the service was not initialized with CesiumService, mapId must be provided');\r\n    }\r\n    if (!mapId) {\r\n      const map = this.mapsManager.getMap();\r\n      mapId = map.getId();\r\n    }\r\n    const data = this.mapsZoomElements.get(mapId);\r\n    if (data) {\r\n      data.container.remove();\r\n      if (data.borderElement) {\r\n        data.borderElement.remove();\r\n      }\r\n      if (data.resetOnEscapePressFunc) {\r\n        document.removeEventListener('keydown', data.resetOnEscapePressFunc);\r\n      }\r\n    }\r\n    this.mapsZoomElements.delete(mapId);\r\n  }\r\n\r\n  private zoomCameraToRectangle(\r\n    cameraService: CameraService,\r\n    positions: { endX: number; endY: number; startX: number; startY: number },\r\n    animationDuration,\r\n    options,\r\n  ): boolean {\r\n    const camera = cameraService.getCamera();\r\n    const cartesian1 = camera.pickEllipsoid({ x: positions.startX, y: positions.startY });\r\n    const cartesian2 = camera.pickEllipsoid({ x: positions.endX, y: positions.endY });\r\n    if (!cartesian1 || !cartesian2) {\r\n      return false;\r\n    }\r\n    const cartographic1 = Cartographic.fromCartesian(cartesian1);\r\n    const cartographic2 = Cartographic.fromCartesian(cartesian2);\r\n    cameraService.cameraFlyTo({\r\n      destination: new Rectangle(\r\n        Math.min(cartographic1.longitude, cartographic2.longitude),\r\n        Math.min(cartographic1.latitude, cartographic2.latitude),\r\n        Math.max(cartographic1.longitude, cartographic2.longitude),\r\n        Math.max(cartographic1.latitude, cartographic2.latitude),\r\n      ),\r\n      orientation: options.keepRotation ? { heading: camera.heading } : undefined,\r\n      duration: animationDuration,\r\n    });\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Cartesian3 } from 'cesium';\r\nimport { EditableRectangle } from '../../../models/editable-rectangle';\r\nimport { RectangleEditOptions } from '../../../models/rectangle-edit-options';\r\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\n@Injectable()\r\nexport class RectanglesManagerService {\r\n  rectangles: Map<string, EditableRectangle> = new Map<string, EditableRectangle>();\r\n\r\n  createEditableRectangle(\r\n    id: string,\r\n    editRectanglesLayer: AcLayerComponent,\r\n    editPointsLayer: AcLayerComponent,\r\n    coordinateConverter: CoordinateConverter,\r\n    rectangleOptions?: RectangleEditOptions,\r\n    positions?: Cartesian3[]\r\n  ) {\r\n    const editableRectangle = new EditableRectangle(\r\n      id,\r\n      editPointsLayer,\r\n      editRectanglesLayer,\r\n      coordinateConverter,\r\n      rectangleOptions,\r\n      positions\r\n    );\r\n\r\n    this.rectangles.set(id, editableRectangle);\r\n  }\r\n\r\n  dispose(id: string) {\r\n    this.rectangles.get(id).dispose();\r\n    this.rectangles.delete(id);\r\n  }\r\n\r\n  get(id: string): EditableRectangle {\r\n    return this.rectangles.get(id);\r\n  }\r\n\r\n  clear() {\r\n    this.rectangles.forEach(rectangle => rectangle.dispose());\r\n    this.rectangles.clear();\r\n  }\r\n}\r\n\r\n","import { publish, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Color, ClassificationType, HeightReference, Cartesian3 } from 'cesium';\r\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\r\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\r\nimport { RectangleEditUpdate } from '../../../models/rectangle-edit-update';\r\nimport { EditModes } from '../../../models/edit-mode.enum';\r\nimport { EditActions } from '../../../models/edit-actions.enum';\r\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\r\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { EditPoint } from '../../../models/edit-point';\r\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\r\nimport { RectanglesManagerService } from './rectangles-manager.service';\r\nimport { RectangleEditorObservable } from '../../../models/rectangle-editor-observable';\r\nimport { EditableRectangle } from '../../../models/editable-rectangle';\r\nimport { RectangleEditOptions } from '../../../models/rectangle-edit-options';\r\nimport { PointProps } from '../../../models/point-edit-options';\r\nimport { LabelProps } from '../../../models/label-props';\r\nimport { generateKey } from '../../utils';\r\n\r\nexport const DEFAULT_RECTANGLE_OPTIONS: RectangleEditOptions = {\r\n  addPointEvent: CesiumEvent.LEFT_CLICK,\r\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\r\n  allowDrag: true,\r\n  pointProps: {\r\n    color: Color.WHITE,\r\n    outlineColor: Color.BLACK.withAlpha(0.2),\r\n    outlineWidth: 1,\r\n    pixelSize: 13,\r\n    virtualPointPixelSize: 8,\r\n    show: true,\r\n    showVirtual: true,\r\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n  },\r\n  rectangleProps: {\r\n    height: 0,\r\n    extrudedHeight: 0,\r\n    material: Color.CORNFLOWERBLUE.withAlpha(0.4),\r\n    fill: true,\r\n    classificationType: ClassificationType.BOTH,\r\n    outline: true,\r\n    outlineColor: Color.WHITE,\r\n    zIndex: 0,\r\n  },\r\n  clampHeightTo3D: false,\r\n  clampHeightTo3DOptions: {\r\n    clampToTerrain: false,\r\n  },\r\n};\r\n\r\n/**\r\n * Service for creating editable rectangles\r\n *\r\n * You must provide `RectanglesEditorService` yourself.\r\n * RectanglesEditorService works together with `<rectangles-editor>` component. Therefor you need to create `<rectangles-editor>`\r\n * for each `RectanglesEditorService`, And of course somewhere under `<ac-map>`/\r\n *\r\n * + `create` for starting a creation of the shape over the map. Returns a extension of `RectangleEditorObservable`.\r\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `RectangleEditorObservable`.\r\n * + To stop editing call `dsipose()` from the `RectangleEditorObservable` you get back from `create()` \\ `edit()`.\r\n *\r\n * **Labels over editted shapes**\r\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\r\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\r\n * `RectangleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\r\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\r\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\r\n * The callback should return type `LabelProps[]`.\r\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\r\n *\r\n * usage:\r\n * ```typescript\r\n *  // Start creating rectangle\r\n *  const editing$ = rectanglesEditorService.create();\r\n *  this.editing$.subscribe(editResult => {\r\n *\t\t\t\tconsole.log(editResult.positions);\r\n *\t\t});\r\n *\r\n *  // Or edit rectangle from existing rectangle positions\r\n *  const editing$ = this.rectanglesEditorService.edit(initialPos);\r\n *\r\n * ```\r\n */\r\n@Injectable()\r\nexport class RectanglesEditorService {\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private updateSubject = new Subject<RectangleEditUpdate>();\r\n  private updatePublisher = publish<RectangleEditUpdate>()(this.updateSubject); // TODO maybe not needed\r\n  private coordinateConverter: CoordinateConverter;\r\n  private cameraService: CameraService;\r\n  private rectanglesManager: RectanglesManagerService;\r\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\r\n  private cesiumScene: any;\r\n\r\n  init(mapEventsManager: MapEventsManagerService,\r\n       coordinateConverter: CoordinateConverter,\r\n       cameraService: CameraService,\r\n       rectanglesManager: RectanglesManagerService,\r\n       cesiumViewer: CesiumService,\r\n  ) {\r\n    this.mapEventsManager = mapEventsManager;\r\n    this.coordinateConverter = coordinateConverter;\r\n    this.cameraService = cameraService;\r\n    this.rectanglesManager = rectanglesManager;\r\n    this.updatePublisher.connect();\r\n\r\n    this.cesiumScene = cesiumViewer.getScene();\r\n  }\r\n\r\n  onUpdate(): Observable<RectangleEditUpdate> {\r\n    return this.updatePublisher;\r\n  }\r\n\r\n  create(options = DEFAULT_RECTANGLE_OPTIONS, priority = 100): RectangleEditorObservable {\r\n    const positions: Cartesian3[] = [];\r\n    const id = generateKey();\r\n    const rectangleOptions = this.setOptions(options);\r\n\r\n    const clientEditSubject = new BehaviorSubject<RectangleEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.CREATE\r\n    });\r\n    let finishedCreate = false;\r\n\r\n    this.updateSubject.next({\r\n      id,\r\n      positions,\r\n      editMode: EditModes.CREATE,\r\n      editAction: EditActions.INIT,\r\n      rectangleOptions: rectangleOptions,\r\n    });\r\n\r\n    const finishCreation = () => {\r\n      const changeMode = {\r\n        id,\r\n        editMode: EditModes.CREATE,\r\n        editAction: EditActions.CHANGE_TO_EDIT,\r\n      };\r\n      this.updateSubject.next(changeMode);\r\n      clientEditSubject.next(changeMode);\r\n      if (this.observablesMap.has(id)) {\r\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.editRectangle(id, positions, priority, clientEditSubject, rectangleOptions, editorObservable);\r\n      finishedCreate = true;\r\n      return finishedCreate;\r\n    };\r\n\r\n    const mouseMoveRegistration = this.mapEventsManager.register({\r\n      event: CesiumEvent.MOUSE_MOVE,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n    const addPointRegistration = this.mapEventsManager.register({\r\n      event: rectangleOptions.addPointEvent,\r\n      pick: PickOptions.NO_PICK,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n    });\r\n\r\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration ]);\r\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\r\n\r\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n\r\n      if (position) {\r\n        this.updateSubject.next({\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.CREATE,\r\n          updatedPosition: position,\r\n          editAction: EditActions.MOUSE_MOVE,\r\n        });\r\n      }\r\n    });\r\n\r\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\r\n      if (finishedCreate) {\r\n        return;\r\n      }\r\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const allPositions = this.getPositions(id);\r\n      const isFirstPoint = this.getPositions(id).length === 0;\r\n\r\n      const updateValue = {\r\n        id,\r\n        positions: allPositions,\r\n        editMode: EditModes.CREATE,\r\n        updatedPosition: position,\r\n        editAction: EditActions.ADD_POINT,\r\n      };\r\n      this.updateSubject.next(updateValue);\r\n      clientEditSubject.next({\r\n        ...updateValue,\r\n        positions: this.getPositions(id),\r\n        points: this.getPoints(id),\r\n      });\r\n\r\n      if (!isFirstPoint) {\r\n        finishedCreate = finishCreation();\r\n      }\r\n\r\n    });\r\n\r\n    return editorObservable;\r\n  }\r\n\r\n  edit(positions: Cartesian3[], options = DEFAULT_RECTANGLE_OPTIONS, priority = 100): RectangleEditorObservable {\r\n    if (positions.length !== 2) {\r\n      throw new Error('Rectangles editor error edit(): rectangle should have at least 2 positions');\r\n    }\r\n    const id = generateKey();\r\n    const rectangleOptions = this.setOptions(options);\r\n    const editSubject = new BehaviorSubject<RectangleEditUpdate>({\r\n      id,\r\n      editAction: null,\r\n      editMode: EditModes.EDIT\r\n    });\r\n    const update = {\r\n      id,\r\n      positions: positions,\r\n      editMode: EditModes.EDIT,\r\n      editAction: EditActions.INIT,\r\n      rectangleOptions: rectangleOptions,\r\n    };\r\n    this.updateSubject.next(update);\r\n    editSubject.next({\r\n      ...update,\r\n      positions: this.getPositions(id),\r\n      points: this.getPoints(id),\r\n    });\r\n    return this.editRectangle(\r\n      id,\r\n      positions,\r\n      priority,\r\n      editSubject,\r\n      rectangleOptions\r\n    );\r\n  }\r\n\r\n  private editRectangle(id: string,\r\n                      positions: Cartesian3[],\r\n                      priority: number,\r\n                      editSubject: Subject<RectangleEditUpdate>,\r\n                      options: RectangleEditOptions,\r\n                      editObservable?: RectangleEditorObservable): RectangleEditorObservable {\r\n\r\n    const pointDragRegistration = this.mapEventsManager.register({\r\n      event: options.dragPointEvent,\r\n      entityType: EditPoint,\r\n      pick: PickOptions.PICK_FIRST,\r\n      pickConfig: options.pickConfiguration,\r\n      priority,\r\n      pickFilter: entity => id === entity.editedEntityId,\r\n    });\r\n\r\n    let shapeDragRegistration;\r\n    if (options.allowDrag) {\r\n      shapeDragRegistration = this.mapEventsManager.register({\r\n        event: options.dragShapeEvent,\r\n        entityType: EditableRectangle,\r\n        pick: PickOptions.PICK_FIRST,\r\n        pickConfig: options.pickConfiguration,\r\n        priority,\r\n        pickFilter: entity => id === entity.id,\r\n      });\r\n    }\r\n\r\n    pointDragRegistration.pipe(\r\n      tap(({ movement: { drop } }) => this.rectanglesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\r\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\r\n        if (!position) {\r\n          return;\r\n        }\r\n        const point: EditPoint = entities[0];\r\n\r\n        const update = {\r\n          id,\r\n          positions: this.getPositions(id),\r\n          editMode: EditModes.EDIT,\r\n          updatedPosition: position,\r\n          updatedPoint: point,\r\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\r\n        };\r\n        this.updateSubject.next(update);\r\n        editSubject.next({\r\n          ...update,\r\n          positions: this.getPositions(id),\r\n          points: this.getPoints(id),\r\n        });\r\n      });\r\n\r\n    if (shapeDragRegistration) {\r\n      shapeDragRegistration\r\n        .pipe(tap(({ movement: { drop } }) => this.rectanglesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\r\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\r\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\r\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\r\n          if (!endDragPosition) {\r\n            return;\r\n          }\r\n\r\n          const update = {\r\n            id,\r\n            positions: this.getPositions(id),\r\n            editMode: EditModes.EDIT,\r\n            updatedPosition: endDragPosition,\r\n            draggedPosition: startDragPosition,\r\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\r\n          };\r\n          this.updateSubject.next(update);\r\n          editSubject.next({\r\n            ...update,\r\n            positions: this.getPositions(id),\r\n            points: this.getPoints(id),\r\n          });\r\n        });\r\n    }\r\n\r\n    const observables = [pointDragRegistration];\r\n    if (shapeDragRegistration) {\r\n      observables.push(shapeDragRegistration);\r\n    }\r\n\r\n    this.observablesMap.set(id, observables);\r\n    return editObservable || this.createEditorObservable(editSubject, id);\r\n  }\r\n\r\n  private setOptions(options: RectangleEditOptions) {\r\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_RECTANGLE_OPTIONS));\r\n    const rectangleOptions: RectangleEditOptions = Object.assign(defaultClone, options);\r\n    rectangleOptions.pointProps = Object.assign({}, DEFAULT_RECTANGLE_OPTIONS.pointProps, options.pointProps);\r\n    rectangleOptions.rectangleProps = Object.assign({}, DEFAULT_RECTANGLE_OPTIONS.rectangleProps, options.rectangleProps);\r\n\r\n    if (options.clampHeightTo3D) {\r\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\r\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\r\n      }\r\n\r\n      if (this.cesiumScene.pickTranslucentDepth) {\r\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\r\n      }\r\n\r\n      if (rectangleOptions.pointProps.color.alpha === 1 || rectangleOptions.pointProps.outlineColor.alpha === 1) {\r\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\r\n      }\r\n\r\n      rectangleOptions.pointProps.heightReference =  rectangleOptions.clampHeightTo3DOptions.clampToTerrain ?\r\n        HeightReference.CLAMP_TO_GROUND : HeightReference.RELATIVE_TO_GROUND;\r\n      rectangleOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\r\n    }\r\n    return rectangleOptions;\r\n  }\r\n\r\n\r\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: () => boolean): RectangleEditorObservable {\r\n    observableToExtend.dispose = () => {\r\n      const observables = this.observablesMap.get(id);\r\n      if (observables) {\r\n        observables.forEach(obs => obs.dispose());\r\n      }\r\n      this.observablesMap.delete(id);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.DISPOSE,\r\n      });\r\n    };\r\n    observableToExtend.enable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.ENABLE,\r\n      });\r\n    };\r\n    observableToExtend.disable = () => {\r\n      this.updateSubject.next({\r\n        id,\r\n        positions: this.getPositions(id),\r\n        editMode: EditModes.EDIT,\r\n        editAction: EditActions.DISABLE,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setManually = (firstPosition: Cartesian3,\r\n                                      secondPosition: Cartesian3,\r\n                                      firstPointProp?: PointProps,\r\n                                      secondPointProp?: PointProps) => {\r\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_RECTANGLE_OPTIONS.pointProps);\r\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_RECTANGLE_OPTIONS.pointProps);\r\n\r\n      const rectangle = this.rectanglesManager.get(id);\r\n      rectangle.setPointsManually([firstP, secP]);\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_MANUALLY,\r\n      });\r\n    };\r\n\r\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\r\n        labelsRenderFn: callback,\r\n      });\r\n    };\r\n\r\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\r\n      this.updateSubject.next({\r\n        id,\r\n        editMode: EditModes.CREATE_OR_EDIT,\r\n        editAction: EditActions.UPDATE_EDIT_LABELS,\r\n        updateLabels: labels,\r\n      });\r\n    };\r\n\r\n    observableToExtend.finishCreation = () => {\r\n      if (!finishCreation) {\r\n        throw new Error('Rectangles editor error edit(): cannot call finishCreation() on edit');\r\n      }\r\n\r\n      return finishCreation();\r\n    };\r\n\r\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\r\n\r\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\r\n\r\n    observableToExtend.getLabels = (): LabelProps[] => this.rectanglesManager.get(id).labels;\r\n\r\n    return observableToExtend as RectangleEditorObservable;\r\n  }\r\n\r\n  private getPositions(id: any) {\r\n    const rectangle = this.rectanglesManager.get(id);\r\n    return rectangle.getRealPositions();\r\n  }\r\n\r\n  private getPoints(id: any) {\r\n    const rectangle = this.rectanglesManager.get(id);\r\n    return rectangle.getRealPoints();\r\n  }\r\n}\r\n\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\r\nimport { EditModes } from '../../models/edit-mode.enum';\r\nimport { RectangleEditUpdate } from '../../models/rectangle-edit-update';\r\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\r\nimport { EditActions } from '../../models/edit-actions.enum';\r\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\r\nimport { EditPoint } from '../../models/edit-point';\r\nimport { RectanglesManagerService } from '../../services/entity-editors/rectangles-editor/rectangles-manager.service';\r\nimport { RectanglesEditorService } from '../../services/entity-editors/rectangles-editor/rectangles-editor.service';\r\nimport { LabelProps } from '../../models/label-props';\r\nimport { EditableRectangle } from '../../models/editable-rectangle';\r\n\r\n@Component({\r\n  selector: 'rectangles-editor',\r\n  template: /*html*/ `\r\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\r\n      <ac-point-desc\r\n        props=\"{\r\n        position: point.getPositionCallbackProperty(),\r\n        pixelSize: getPointSize(point),\r\n        color: point.props.color,\r\n        outlineColor: point.props.outlineColor,\r\n        outlineWidth: point.props.outlineWidth,\r\n        show: getPointShow(point),\r\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\r\n        heightReference: point.props.heightReference,\r\n    }\"\r\n      >\r\n      </ac-point-desc>\r\n    </ac-layer>\r\n\r\n    <ac-layer #editRectanglesLayer acFor=\"let rectangle of editRectangles$\" [context]=\"this\">\r\n      <ac-rectangle-desc\r\n        props=\"{\r\n          coordinates: rectangle.getRectangleCallbackProperty(),\r\n          material: rectangle.rectangleProps.material,\r\n          fill: rectangle.rectangleProps.fill,\r\n          classificationType: rectangle.rectangleProps.classificationType,\r\n          zIndex: rectangle.rectangleProps.zIndex,\r\n          outline: rectangle.rectangleProps.outline,\r\n          outlineColor: rectangle.rectangleProps.outlineColor,\r\n          height: rectangle.rectangleProps.height,\r\n          extrudedHeight: rectangle.rectangleProps.extrudedHeight\r\n        }\"\r\n      >\r\n      </ac-rectangle-desc>\r\n      <ac-array-desc acFor=\"let label of rectangle.labels\" [idGetter]=\"getLabelId\">\r\n        <ac-label-primitive-desc\r\n          props=\"{\r\n            position: label.position,\r\n            backgroundColor: label.backgroundColor,\r\n            backgroundPadding: label.backgroundPadding,\r\n            distanceDisplayCondition: label.distanceDisplayCondition,\r\n            eyeOffset: label.eyeOffset,\r\n            fillColor: label.fillColor,\r\n            font: label.font,\r\n            heightReference: label.heightReference,\r\n            horizontalOrigin: label.horizontalOrigin,\r\n            outlineColor: label.outlineColor,\r\n            outlineWidth: label.outlineWidth,\r\n            pixelOffset: label.pixelOffset,\r\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\r\n            scale: label.scale,\r\n            scaleByDistance: label.scaleByDistance,\r\n            show: label.show,\r\n            showBackground: label.showBackground,\r\n            style: label.style,\r\n            text: label.text,\r\n            translucencyByDistance: label.translucencyByDistance,\r\n            verticalOrigin: label.verticalOrigin,\r\n            disableDepthTestDistance: label.disableDepthTestDistance,\r\n        }\"\r\n        >\r\n        </ac-label-primitive-desc>\r\n      </ac-array-desc>\r\n    </ac-layer>\r\n  `,\r\n  providers: [CoordinateConverter, RectanglesManagerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RectanglesEditorComponent implements OnDestroy {\r\n  private editLabelsRenderFn: (update: RectangleEditUpdate, labels: LabelProps[]) => LabelProps[];\r\n  public editPoints$ = new Subject<AcNotification>();\r\n  public editRectangles$ = new Subject<AcNotification>();\r\n\r\n  @ViewChild('editRectanglesLayer') private editRectanglesLayer: AcLayerComponent;\r\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\r\n\r\n  constructor(\r\n    private rectanglesEditor: RectanglesEditorService,\r\n    private coordinateConverter: CoordinateConverter,\r\n    private mapEventsManager: MapEventsManagerService,\r\n    private cameraService: CameraService,\r\n    private rectanglesManager: RectanglesManagerService,\r\n    private cesiumService: CesiumService\r\n  ) {\r\n    this.rectanglesEditor.init(\r\n      this.mapEventsManager,\r\n      this.coordinateConverter,\r\n      this.cameraService,\r\n      this.rectanglesManager,\r\n      this.cesiumService\r\n    );\r\n    this.startListeningToEditorUpdates();\r\n  }\r\n\r\n  private startListeningToEditorUpdates() {\r\n    this.rectanglesEditor.onUpdate().subscribe((update: RectangleEditUpdate) => {\r\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\r\n        this.handleCreateUpdates(update);\r\n      } else if (update.editMode === EditModes.EDIT) {\r\n        this.handleEditUpdates(update);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLabelId(element: any, index: number): string {\r\n    return index.toString();\r\n  }\r\n\r\n  renderEditLabels(rectangle: EditableRectangle, update: RectangleEditUpdate, labels?: LabelProps[]) {\r\n    update.positions = rectangle.getRealPositions();\r\n    update.points = rectangle.getRealPoints();\r\n\r\n    if (labels) {\r\n      rectangle.labels = labels;\r\n      this.editRectanglesLayer.update(rectangle, rectangle.getId());\r\n      return;\r\n    }\r\n\r\n    if (!this.editLabelsRenderFn) {\r\n      return;\r\n    }\r\n\r\n    rectangle.labels = this.editLabelsRenderFn(update, rectangle.labels);\r\n    this.editRectanglesLayer.update(rectangle, rectangle.getId());\r\n  }\r\n\r\n  removeEditLabels(rectangle: EditableRectangle) {\r\n    rectangle.labels = [];\r\n    this.editRectanglesLayer.update(rectangle, rectangle.getId());\r\n  }\r\n\r\n  handleCreateUpdates(update: RectangleEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.rectanglesManager.createEditableRectangle(\r\n          update.id,\r\n          this.editRectanglesLayer,\r\n          this.editPointsLayer,\r\n          this.coordinateConverter,\r\n          update.rectangleOptions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.MOUSE_MOVE: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          rectangle.moveTempMovingPoint(update.updatedPosition);\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_POINT: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          rectangle.moveTempMovingPoint(update.updatedPosition);\r\n          rectangle.addPoint(update.updatedPosition);\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ADD_LAST_POINT: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (update.updatedPosition) {\r\n          rectangle.addLastPoint(update.updatedPosition);\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISPOSE: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle) {\r\n          rectangle.dispose();\r\n          this.removeEditLabels(rectangle);\r\n        }\r\n        this.editLabelsRenderFn = undefined;\r\n        break;\r\n      }\r\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        this.editLabelsRenderFn = update.labelsRenderFn;\r\n        this.renderEditLabels(rectangle, update);\r\n        break;\r\n      }\r\n      case EditActions.UPDATE_EDIT_LABELS: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        this.renderEditLabels(rectangle, update, update.updateLabels);\r\n        break;\r\n      }\r\n      case EditActions.SET_MANUALLY: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        this.renderEditLabels(rectangle, update, update.updateLabels);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUpdates(update: RectangleEditUpdate) {\r\n    switch (update.editAction) {\r\n      case EditActions.INIT: {\r\n        this.rectanglesManager.createEditableRectangle(\r\n          update.id,\r\n          this.editRectanglesLayer,\r\n          this.editPointsLayer,\r\n          this.coordinateConverter,\r\n          update.rectangleOptions,\r\n          update.positions,\r\n        );\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle && rectangle.enableEdit) {\r\n          rectangle.movePoint(update.updatedPosition, update.updatedPoint);\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_POINT_FINISH: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle && rectangle.enableEdit) {\r\n          rectangle.endMovePoint();\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DISABLE: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle) {\r\n          rectangle.enableEdit = false;\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.ENABLE: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle) {\r\n          rectangle.enableEdit = true;\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      case EditActions.DRAG_SHAPE: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle && rectangle.enableEdit) {\r\n          rectangle.moveShape(update.draggedPosition, update.updatedPosition);\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case EditActions.DRAG_SHAPE_FINISH: {\r\n        const rectangle = this.rectanglesManager.get(update.id);\r\n        if (rectangle && rectangle.enableEdit) {\r\n          rectangle.endMoveShape();\r\n          this.renderEditLabels(rectangle, update);\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.rectanglesManager.clear();\r\n  }\r\n\r\n  getPointSize(point: EditPoint) {\r\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\r\n  }\r\n\r\n  getPointShow(point: EditPoint) {\r\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\r\nimport { PointsEditorComponent } from './components/points-editor/points-editor.component';\r\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\r\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\r\nimport { EllipsesEditorComponent } from './components/ellipses-editor/ellipses-editor.component';\r\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\r\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\r\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\r\nimport { DraggableToMapService } from './services/draggable-to-map.service';\r\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\r\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\r\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\r\nimport { RangeAndBearingComponent } from './components/range-and-bearing/range-and-bearing.component';\r\nimport { ZoomToRectangleService } from './services/zoom-to-rectangle.service';\r\nimport { RectanglesEditorComponent } from './components/rectangles-editor/rectangles-editor.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AngularCesiumModule],\r\n  declarations: [\r\n    PointsEditorComponent,\r\n    HippodromeEditorComponent,\r\n    PolygonsEditorComponent,\r\n    RectanglesEditorComponent,\r\n    CirclesEditorComponent,\r\n    EllipsesEditorComponent,\r\n    PolylinesEditorComponent,\r\n    DraggableToMapDirective,\r\n    DragIconComponent,\r\n    AcToolbarComponent,\r\n    AcToolbarButtonComponent,\r\n    RangeAndBearingComponent,\r\n  ],\r\n  exports: [\r\n    PointsEditorComponent,\r\n    HippodromeEditorComponent,\r\n    PolygonsEditorComponent,\r\n    RectanglesEditorComponent,\r\n    CirclesEditorComponent,\r\n    EllipsesEditorComponent,\r\n    PolylinesEditorComponent,\r\n    DraggableToMapDirective,\r\n    AcToolbarComponent,\r\n    AcToolbarButtonComponent,\r\n    RangeAndBearingComponent,\r\n  ],\r\n  providers: [\r\n    DraggableToMapService,\r\n    ZoomToRectangleService,\r\n  ]\r\n})\r\nexport class AngularCesiumWidgetsModule {\r\n}\r\n","/*\r\n * Public API Surface of angular-cesium\r\n */\r\n\r\nexport * from './lib/angular-cesium/index';\r\n// export * from './lib/heatmap/cesium-heatmap-material-creator';\r\nexport * from './lib/angular-cesium-widgets/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.ViewerFactory","i2.ViewerConfiguration","cMath","i1.CesiumService","Cesium","observableOf","i2.CesiumEventBuilder","i3.PlonterService","SceneMode","i1.PlonterService","i2.CoordinateConverter","i3.AcHtmlComponent","i1.ContextMenuService","i2.AcHtmlComponent","i3","i3.MapsManagerService","i4.BillboardDrawerService","i5.LabelDrawerService","i6.EllipseDrawerService","i7.PolylineDrawerService","i8.PolygonDrawerService","i9.ArcDrawerService","i10.PointDrawerService","i11.CzmlDrawerService","i12.MapEventsManagerService","i13.KeyboardControlService","i14.MapLayersService","i15.ScreenshotService","i16.ContextMenuService","i17.CoordinateConverter","i18.AcDefaultPlonterComponent","i19.AcContextMenuWrapperComponent","i20","observableMerge","observableFrom","i1.LayerService","i2.ComputationCache","i3.MapLayersService","i11.ModelDrawerService","i12.BoxDrawerService","i13.CorridorDrawerService","i14.CylinderDrawerService","i15.EllipsoidDrawerService","i16.PolylineVolumeDrawerService","i17.WallDrawerService","i18.RectangleDrawerService","i19.DynamicEllipseDrawerService","i20.DynamicPolylineDrawerService","i21.StaticCircleDrawerService","i22.StaticPolylineDrawerService","i23.StaticPolygonDrawerService","i24.StaticEllipseDrawerService","i25.PolylinePrimitiveDrawerService","i26.LabelPrimitiveDrawerService","i27.BillboardPrimitiveDrawerService","i28.PointPrimitiveDrawerService","i29.HtmlDrawerService","i30.CzmlDrawerService","i1.BasicDrawerService","i2.MapLayersService","i1.BillboardDrawerService","i2.JsonMapper","i2.LayerService","i3.ComputationCache","i4.CesiumProperties","i1.EllipseDrawerService","i1.PolylineDrawerService","i1.LabelDrawerService","i1.ArcDrawerService","i1.PointDrawerService","i1.PolygonDrawerService","i1.StaticPrimitiveDrawer","i1.StaticEllipseDrawerService","i1.DynamicEllipseDrawerService","i1.DynamicPolylineDrawerService","i1.StaticPolygonDrawerService","i1.StaticCircleDrawerService","i1.StaticPolylineDrawerService","i1.ModelDrawerService","i1.BoxDrawerService","i1.CylinderDrawerService","i1.CorridorDrawerService","i1.EllipsoidDrawerService","i1.PolylineVolumeDrawerService","i1.WallDrawerService","i1.RectangleDrawerService","i1.BillboardPrimitiveDrawerService","i1.LabelPrimitiveDrawerService","i1.PolylinePrimitiveDrawerService","i2.AcHtmlManager","i1.AcHtmlManager","i1.HtmlDrawerService","i5.AcHtmlDirective","i6.AcHtmlContainerDirective","i7","i2.AcLayerComponent","i1.PointPrimitiveDrawerService","i1.CzmlDrawerService","i1.MapsManagerService","cLabelStyle","i1.PointsEditorService","i3.MapEventsManagerService","i4.CameraService","i5.PointsManagerService","i6.CesiumService","i7.AcLayerComponent","i8.AcPointDescComponent","i9.AcArrayDescComponent","i10.AcLabelPrimitiveDescComponent","i1.PolygonsEditorService","i5.PolygonsManagerService","i8.AcPolylineDescComponent","i9.AcPointDescComponent","i10.AcPolygonDescComponent","i11.AcArrayDescComponent","i12.AcLabelPrimitiveDescComponent","i1.CirclesEditorService","i5.CirclesManagerService","i6.AcLayerComponent","i7.AcArcDescComponent","i9.AcEllipseDescComponent","i10.AcArrayDescComponent","i11.AcLabelPrimitiveDescComponent","i1.EllipsesEditorService","i5.EllipsesManagerService","i1.PolylinesEditorService","i5.PolylinesManagerService","i1.HippodromeEditorService","i5.HippodromeManagerService","i7.AcCorridorDescComponent","i8.AcArrayDescComponent","i9.AcLabelPrimitiveDescComponent","i10.AcPointDescComponent","observableFromEvent","merge","i1.DraggableToMapService","i1","i2.AcToolbarButtonComponent","i3.DragIconComponent","i3.PolylinesEditorComponent","i2.CameraService","i3.CesiumService","i1.RectanglesEditorService","i5.RectanglesManagerService","i9.AcRectangleDescComponent"],"mappings":"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"}